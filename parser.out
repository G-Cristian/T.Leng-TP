Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> code
Rule 1     code -> statement code
Rule 2     code -> COMMENT code
Rule 3     code -> <empty>
Rule 4     statement -> expression SEMICOLON
Rule 5     statement -> block
Rule 6     statement -> if
Rule 7     statement -> while
Rule 8     statement -> for
Rule 9     statement -> do_while
Rule 10    expression -> expressionAssign
Rule 11    optional_expr -> expression
Rule 12    optional_expr -> <empty>
Rule 13    aritExp -> aritExp AO unaryExp
Rule 14    aritExp -> unaryExp
Rule 15    unaryExp -> AO unaryExp
Rule 16    unaryExp -> DOUBLE_AO unaryExp
Rule 17    unaryExp -> unaryExp2
Rule 18    unaryExp2 -> unaryExp2 DOUBLE_AO
Rule 19    unaryExp2 -> memberAccess
Rule 20    unaryExp2 -> factorExp
Rule 21    factorExp -> factorNumExp
Rule 22    factorExp -> bool_atom
Rule 23    factorExp -> expressionVectorAt
Rule 24    factorExp -> factorReg
Rule 25    factorExp -> LPAREN expression RPAREN
Rule 26    factorExp -> expressionFunction
Rule 27    factorVar -> VAR
Rule 28    factorNumExp -> NUMBER
Rule 29    bool_atom -> TRUE
Rule 30    bool_atom -> FALSE
Rule 31    expressionBoolOp -> expressionBoolOp BOOL_OP expressionComp
Rule 32    expressionBoolOp -> expressionComp
Rule 33    unaryExp -> NOT unaryExp
Rule 34    expressionComp -> expressionComp COMP aritExp
Rule 35    expressionComp -> aritExp
Rule 36    unaryExp -> STRING
Rule 37    expressionVector -> LBRACKET vector_items RBRACKET
Rule 38    vector_items -> expression COMMA vector_items
Rule 39    vector_items -> expression
Rule 40    expressionVectorAt -> expressionVectorAt LBRACKET expression RBRACKET
Rule 41    expressionVectorAt -> expressionVector
Rule 42    expressionVectorAt -> factorVar
Rule 43    expressionVectorAt -> memberAccess
Rule 44    expressionAssign -> expressionTernaryCond AOEQUAL expressionAssign
Rule 45    expressionAssign -> expressionTernaryCond EQUAL expressionAssign
Rule 46    expressionAssign -> expressionTernaryCond
Rule 47    factorReg -> LBRACE reg_items RBRACE
Rule 48    memberAccess -> memberAccess DOT factorVar
Rule 49    memberAccess -> factorExp DOT factorVar
Rule 50    reg_items -> reg_field COMMA reg_items
Rule 51    reg_items -> reg_field
Rule 52    reg_field -> factorVar COLON expression
Rule 53    comments -> <empty>
Rule 54    block -> LBRACE code RBRACE
Rule 55    singleStatement -> COMMENT singleStatement
Rule 56    singleStatement -> statement
Rule 57    if -> IF LPAREN expression RPAREN singleStatement else
Rule 58    else -> ELSE singleStatement
Rule 59    else -> <empty>
Rule 60    expressionTernaryCond -> expressionBoolOp QUESTION expression COLON expression
Rule 61    expressionTernaryCond -> expressionBoolOp
Rule 62    while -> WHILE LPAREN expression RPAREN singleStatement
Rule 63    for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement
Rule 64    do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON
Rule 65    expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
Rule 66    expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
Rule 67    expressionFunction -> CAPITALIZAR LPAREN expression RPAREN
Rule 68    expressionFunction -> COLINEALES LPAREN expression COMMA expression RPAREN
Rule 69    expressionFunction -> PRINT LPAREN expression RPAREN
Rule 70    expressionFunction -> LENGTH LPAREN expression RPAREN

Terminals, with rules where they appear

AO                   : 13 15
AOEQUAL              : 44
BOOL_OP              : 31
CAPITALIZAR          : 67
COLINEALES           : 68
COLON                : 52 60
COMMA                : 38 50 65 66 66 68
COMMENT              : 2 55
COMP                 : 34
DO                   : 64
DOT                  : 48 49
DOUBLE_AO            : 16 18
ELSE                 : 58
EQUAL                : 45
FALSE                : 30
FOR                  : 63
IF                   : 57
LBRACE               : 47 54
LBRACKET             : 37 40
LENGTH               : 70
LPAREN               : 25 57 62 63 64 65 66 67 68 69 70
MULTIPLICACIONESCALAR : 65 66
NOT                  : 33
NUMBER               : 28
PRINT                : 69
QUESTION             : 60
RBRACE               : 47 54
RBRACKET             : 37 40
RPAREN               : 25 57 62 63 64 65 66 67 68 69 70
SEMICOLON            : 4 63 63 64
STRING               : 36
TRUE                 : 29
VAR                  : 27
WHILE                : 62 64
error                : 

Nonterminals, with rules where they appear

aritExp              : 13 34 35
block                : 5
bool_atom            : 22
code                 : 1 2 54 0
comments             : 
do_while             : 9
else                 : 57
expression           : 4 11 25 38 39 40 52 57 60 60 62 63 64 65 65 66 66 66 67 68 68 69 70
expressionAssign     : 10 44 45
expressionBoolOp     : 31 60 61
expressionComp       : 31 32 34
expressionFunction   : 26
expressionTernaryCond : 44 45 46
expressionVector     : 41
expressionVectorAt   : 23 40
factorExp            : 20 49
factorNumExp         : 21
factorReg            : 24
factorVar            : 42 48 49 52
for                  : 8
if                   : 6
memberAccess         : 19 43 48
optional_expr        : 63 63
reg_field            : 50 51
reg_items            : 47 50
singleStatement      : 55 57 58 62 63 64
statement            : 1 56
unaryExp             : 13 14 15 16 33
unaryExp2            : 17 18
vector_items         : 37 38
while                : 7

Parsing method: LALR

state 0

    (0) S' -> . code
    (1) code -> . statement code
    (2) code -> . COMMENT code
    (3) code -> .
    (4) statement -> . expression SEMICOLON
    (5) statement -> . block
    (6) statement -> . if
    (7) statement -> . while
    (8) statement -> . for
    (9) statement -> . do_while
    (10) expression -> . expressionAssign
    (54) block -> . LBRACE code RBRACE
    (57) if -> . IF LPAREN expression RPAREN singleStatement else
    (62) while -> . WHILE LPAREN expression RPAREN singleStatement
    (63) for -> . FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement
    (64) do_while -> . DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON
    (44) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (46) expressionAssign -> . expressionTernaryCond
    (60) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (61) expressionTernaryCond -> . expressionBoolOp
    (31) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (32) expressionBoolOp -> . expressionComp
    (34) expressionComp -> . expressionComp COMP aritExp
    (35) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (33) unaryExp -> . NOT unaryExp
    (36) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . memberAccess
    (20) unaryExp2 -> . factorExp
    (48) memberAccess -> . memberAccess DOT factorVar
    (49) memberAccess -> . factorExp DOT factorVar
    (21) factorExp -> . factorNumExp
    (22) factorExp -> . bool_atom
    (23) factorExp -> . expressionVectorAt
    (24) factorExp -> . factorReg
    (25) factorExp -> . LPAREN expression RPAREN
    (26) factorExp -> . expressionFunction
    (28) factorNumExp -> . NUMBER
    (29) bool_atom -> . TRUE
    (30) bool_atom -> . FALSE
    (40) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (41) expressionVectorAt -> . expressionVector
    (42) expressionVectorAt -> . factorVar
    (43) expressionVectorAt -> . memberAccess
    (47) factorReg -> . LBRACE reg_items RBRACE
    (65) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (66) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (67) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (68) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (69) expressionFunction -> . PRINT LPAREN expression RPAREN
    (70) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (37) expressionVector -> . LBRACKET vector_items RBRACKET
    (27) factorVar -> . VAR

    COMMENT         shift and go to state 35
    $end            reduce using rule 3 (code -> .)
    LBRACE          shift and go to state 36
    IF              shift and go to state 41
    WHILE           shift and go to state 22
    FOR             shift and go to state 10
    DO              shift and go to state 37
    AO              shift and go to state 43
    DOUBLE_AO       shift and go to state 12
    NOT             shift and go to state 11
    STRING          shift and go to state 23
    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 44
    TRUE            shift and go to state 14
    FALSE           shift and go to state 30
    MULTIPLICACIONESCALAR shift and go to state 19
    CAPITALIZAR     shift and go to state 1
    COLINEALES      shift and go to state 27
    PRINT           shift and go to state 45
    LENGTH          shift and go to state 16
    LBRACKET        shift and go to state 32
    VAR             shift and go to state 31

    if                             shift and go to state 25
    expressionTernaryCond          shift and go to state 26
    expressionComp                 shift and go to state 2
    memberAccess                   shift and go to state 17
    factorReg                      shift and go to state 3
    statement                      shift and go to state 28
    factorExp                      shift and go to state 5
    bool_atom                      shift and go to state 6
    expressionAssign               shift and go to state 29
    expression                     shift and go to state 8
    do_while                       shift and go to state 9
    aritExp                        shift and go to state 13
    code                           shift and go to state 33
    expressionFunction             shift and go to state 39
    for                            shift and go to state 34
    expressionBoolOp               shift and go to state 18
    factorNumExp                   shift and go to state 38
    expressionVectorAt             shift and go to state 7
    expressionVector               shift and go to state 15
    block                          shift and go to state 21
    factorVar                      shift and go to state 40
    while                          shift and go to state 20
    unaryExp2                      shift and go to state 42
    unaryExp                       shift and go to state 4

state 1

    (67) expressionFunction -> CAPITALIZAR . LPAREN expression RPAREN

    LPAREN          shift and go to state 46


state 2

    (32) expressionBoolOp -> expressionComp .
    (34) expressionComp -> expressionComp . COMP aritExp

    QUESTION        reduce using rule 32 (expressionBoolOp -> expressionComp .)
    BOOL_OP         reduce using rule 32 (expressionBoolOp -> expressionComp .)
    AOEQUAL         reduce using rule 32 (expressionBoolOp -> expressionComp .)
    EQUAL           reduce using rule 32 (expressionBoolOp -> expressionComp .)
    RPAREN          reduce using rule 32 (expressionBoolOp -> expressionComp .)
    SEMICOLON       reduce using rule 32 (expressionBoolOp -> expressionComp .)
    COMMA           reduce using rule 32 (expressionBoolOp -> expressionComp .)
    RBRACKET        reduce using rule 32 (expressionBoolOp -> expressionComp .)
    COLON           reduce using rule 32 (expressionBoolOp -> expressionComp .)
    RBRACE          reduce using rule 32 (expressionBoolOp -> expressionComp .)
    COMP            shift and go to state 47


state 3

    (24) factorExp -> factorReg .

    DOT             reduce using rule 24 (factorExp -> factorReg .)
    DOUBLE_AO       reduce using rule 24 (factorExp -> factorReg .)
    AO              reduce using rule 24 (factorExp -> factorReg .)
    COMP            reduce using rule 24 (factorExp -> factorReg .)
    QUESTION        reduce using rule 24 (factorExp -> factorReg .)
    BOOL_OP         reduce using rule 24 (factorExp -> factorReg .)
    AOEQUAL         reduce using rule 24 (factorExp -> factorReg .)
    EQUAL           reduce using rule 24 (factorExp -> factorReg .)
    RPAREN          reduce using rule 24 (factorExp -> factorReg .)
    SEMICOLON       reduce using rule 24 (factorExp -> factorReg .)
    COMMA           reduce using rule 24 (factorExp -> factorReg .)
    RBRACKET        reduce using rule 24 (factorExp -> factorReg .)
    COLON           reduce using rule 24 (factorExp -> factorReg .)
    RBRACE          reduce using rule 24 (factorExp -> factorReg .)


state 4

    (14) aritExp -> unaryExp .

    AO              reduce using rule 14 (aritExp -> unaryExp .)
    COMP            reduce using rule 14 (aritExp -> unaryExp .)
    QUESTION        reduce using rule 14 (aritExp -> unaryExp .)
    BOOL_OP         reduce using rule 14 (aritExp -> unaryExp .)
    AOEQUAL         reduce using rule 14 (aritExp -> unaryExp .)
    EQUAL           reduce using rule 14 (aritExp -> unaryExp .)
    SEMICOLON       reduce using rule 14 (aritExp -> unaryExp .)
    RPAREN          reduce using rule 14 (aritExp -> unaryExp .)
    COMMA           reduce using rule 14 (aritExp -> unaryExp .)
    RBRACKET        reduce using rule 14 (aritExp -> unaryExp .)
    COLON           reduce using rule 14 (aritExp -> unaryExp .)
    RBRACE          reduce using rule 14 (aritExp -> unaryExp .)


state 5

    (20) unaryExp2 -> factorExp .
    (49) memberAccess -> factorExp . DOT factorVar

    DOUBLE_AO       reduce using rule 20 (unaryExp2 -> factorExp .)
    AO              reduce using rule 20 (unaryExp2 -> factorExp .)
    COMP            reduce using rule 20 (unaryExp2 -> factorExp .)
    QUESTION        reduce using rule 20 (unaryExp2 -> factorExp .)
    BOOL_OP         reduce using rule 20 (unaryExp2 -> factorExp .)
    AOEQUAL         reduce using rule 20 (unaryExp2 -> factorExp .)
    EQUAL           reduce using rule 20 (unaryExp2 -> factorExp .)
    SEMICOLON       reduce using rule 20 (unaryExp2 -> factorExp .)
    RPAREN          reduce using rule 20 (unaryExp2 -> factorExp .)
    COMMA           reduce using rule 20 (unaryExp2 -> factorExp .)
    RBRACKET        reduce using rule 20 (unaryExp2 -> factorExp .)
    COLON           reduce using rule 20 (unaryExp2 -> factorExp .)
    RBRACE          reduce using rule 20 (unaryExp2 -> factorExp .)
    DOT             shift and go to state 48


state 6

    (22) factorExp -> bool_atom .

    DOT             reduce using rule 22 (factorExp -> bool_atom .)
    DOUBLE_AO       reduce using rule 22 (factorExp -> bool_atom .)
    AO              reduce using rule 22 (factorExp -> bool_atom .)
    COMP            reduce using rule 22 (factorExp -> bool_atom .)
    QUESTION        reduce using rule 22 (factorExp -> bool_atom .)
    BOOL_OP         reduce using rule 22 (factorExp -> bool_atom .)
    AOEQUAL         reduce using rule 22 (factorExp -> bool_atom .)
    EQUAL           reduce using rule 22 (factorExp -> bool_atom .)
    RPAREN          reduce using rule 22 (factorExp -> bool_atom .)
    SEMICOLON       reduce using rule 22 (factorExp -> bool_atom .)
    COMMA           reduce using rule 22 (factorExp -> bool_atom .)
    RBRACKET        reduce using rule 22 (factorExp -> bool_atom .)
    COLON           reduce using rule 22 (factorExp -> bool_atom .)
    RBRACE          reduce using rule 22 (factorExp -> bool_atom .)


state 7

    (23) factorExp -> expressionVectorAt .
    (40) expressionVectorAt -> expressionVectorAt . LBRACKET expression RBRACKET

    DOT             reduce using rule 23 (factorExp -> expressionVectorAt .)
    DOUBLE_AO       reduce using rule 23 (factorExp -> expressionVectorAt .)
    AO              reduce using rule 23 (factorExp -> expressionVectorAt .)
    COMP            reduce using rule 23 (factorExp -> expressionVectorAt .)
    QUESTION        reduce using rule 23 (factorExp -> expressionVectorAt .)
    BOOL_OP         reduce using rule 23 (factorExp -> expressionVectorAt .)
    AOEQUAL         reduce using rule 23 (factorExp -> expressionVectorAt .)
    EQUAL           reduce using rule 23 (factorExp -> expressionVectorAt .)
    RPAREN          reduce using rule 23 (factorExp -> expressionVectorAt .)
    SEMICOLON       reduce using rule 23 (factorExp -> expressionVectorAt .)
    COMMA           reduce using rule 23 (factorExp -> expressionVectorAt .)
    RBRACKET        reduce using rule 23 (factorExp -> expressionVectorAt .)
    COLON           reduce using rule 23 (factorExp -> expressionVectorAt .)
    RBRACE          reduce using rule 23 (factorExp -> expressionVectorAt .)
    LBRACKET        shift and go to state 49


state 8

    (4) statement -> expression . SEMICOLON

    SEMICOLON       shift and go to state 50


state 9

    (9) statement -> do_while .

    COMMENT         reduce using rule 9 (statement -> do_while .)
    LBRACE          reduce using rule 9 (statement -> do_while .)
    IF              reduce using rule 9 (statement -> do_while .)
    WHILE           reduce using rule 9 (statement -> do_while .)
    FOR             reduce using rule 9 (statement -> do_while .)
    DO              reduce using rule 9 (statement -> do_while .)
    AO              reduce using rule 9 (statement -> do_while .)
    DOUBLE_AO       reduce using rule 9 (statement -> do_while .)
    NOT             reduce using rule 9 (statement -> do_while .)
    STRING          reduce using rule 9 (statement -> do_while .)
    LPAREN          reduce using rule 9 (statement -> do_while .)
    NUMBER          reduce using rule 9 (statement -> do_while .)
    TRUE            reduce using rule 9 (statement -> do_while .)
    FALSE           reduce using rule 9 (statement -> do_while .)
    MULTIPLICACIONESCALAR reduce using rule 9 (statement -> do_while .)
    CAPITALIZAR     reduce using rule 9 (statement -> do_while .)
    COLINEALES      reduce using rule 9 (statement -> do_while .)
    PRINT           reduce using rule 9 (statement -> do_while .)
    LENGTH          reduce using rule 9 (statement -> do_while .)
    LBRACKET        reduce using rule 9 (statement -> do_while .)
    VAR             reduce using rule 9 (statement -> do_while .)
    $end            reduce using rule 9 (statement -> do_while .)
    RBRACE          reduce using rule 9 (statement -> do_while .)
    ELSE            reduce using rule 9 (statement -> do_while .)


state 10

    (63) for -> FOR . LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement

    LPAREN          shift and go to state 51


state 11

    (33) unaryExp -> NOT . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (33) unaryExp -> . NOT unaryExp
    (36) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . memberAccess
    (20) unaryExp2 -> . factorExp
    (48) memberAccess -> . memberAccess DOT factorVar
    (49) memberAccess -> . factorExp DOT factorVar
    (21) factorExp -> . factorNumExp
    (22) factorExp -> . bool_atom
    (23) factorExp -> . expressionVectorAt
    (24) factorExp -> . factorReg
    (25) factorExp -> . LPAREN expression RPAREN
    (26) factorExp -> . expressionFunction
    (28) factorNumExp -> . NUMBER
    (29) bool_atom -> . TRUE
    (30) bool_atom -> . FALSE
    (40) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (41) expressionVectorAt -> . expressionVector
    (42) expressionVectorAt -> . factorVar
    (43) expressionVectorAt -> . memberAccess
    (47) factorReg -> . LBRACE reg_items RBRACE
    (65) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (66) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (67) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (68) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (69) expressionFunction -> . PRINT LPAREN expression RPAREN
    (70) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (37) expressionVector -> . LBRACKET vector_items RBRACKET
    (27) factorVar -> . VAR

    AO              shift and go to state 43
    DOUBLE_AO       shift and go to state 12
    NOT             shift and go to state 11
    STRING          shift and go to state 23
    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 44
    TRUE            shift and go to state 14
    FALSE           shift and go to state 30
    LBRACE          shift and go to state 52
    MULTIPLICACIONESCALAR shift and go to state 19
    CAPITALIZAR     shift and go to state 1
    COLINEALES      shift and go to state 27
    PRINT           shift and go to state 45
    LENGTH          shift and go to state 16
    LBRACKET        shift and go to state 32
    VAR             shift and go to state 31

    expressionVector               shift and go to state 15
    memberAccess                   shift and go to state 17
    factorReg                      shift and go to state 3
    unaryExp                       shift and go to state 53
    factorNumExp                   shift and go to state 38
    factorExp                      shift and go to state 5
    expressionFunction             shift and go to state 39
    bool_atom                      shift and go to state 6
    factorVar                      shift and go to state 40
    unaryExp2                      shift and go to state 42
    expressionVectorAt             shift and go to state 7

state 12

    (16) unaryExp -> DOUBLE_AO . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (33) unaryExp -> . NOT unaryExp
    (36) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . memberAccess
    (20) unaryExp2 -> . factorExp
    (48) memberAccess -> . memberAccess DOT factorVar
    (49) memberAccess -> . factorExp DOT factorVar
    (21) factorExp -> . factorNumExp
    (22) factorExp -> . bool_atom
    (23) factorExp -> . expressionVectorAt
    (24) factorExp -> . factorReg
    (25) factorExp -> . LPAREN expression RPAREN
    (26) factorExp -> . expressionFunction
    (28) factorNumExp -> . NUMBER
    (29) bool_atom -> . TRUE
    (30) bool_atom -> . FALSE
    (40) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (41) expressionVectorAt -> . expressionVector
    (42) expressionVectorAt -> . factorVar
    (43) expressionVectorAt -> . memberAccess
    (47) factorReg -> . LBRACE reg_items RBRACE
    (65) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (66) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (67) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (68) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (69) expressionFunction -> . PRINT LPAREN expression RPAREN
    (70) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (37) expressionVector -> . LBRACKET vector_items RBRACKET
    (27) factorVar -> . VAR

    AO              shift and go to state 43
    DOUBLE_AO       shift and go to state 12
    NOT             shift and go to state 11
    STRING          shift and go to state 23
    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 44
    TRUE            shift and go to state 14
    FALSE           shift and go to state 30
    LBRACE          shift and go to state 52
    MULTIPLICACIONESCALAR shift and go to state 19
    CAPITALIZAR     shift and go to state 1
    COLINEALES      shift and go to state 27
    PRINT           shift and go to state 45
    LENGTH          shift and go to state 16
    LBRACKET        shift and go to state 32
    VAR             shift and go to state 31

    expressionVector               shift and go to state 15
    memberAccess                   shift and go to state 17
    factorReg                      shift and go to state 3
    unaryExp                       shift and go to state 54
    factorNumExp                   shift and go to state 38
    factorExp                      shift and go to state 5
    expressionFunction             shift and go to state 39
    bool_atom                      shift and go to state 6
    factorVar                      shift and go to state 40
    unaryExp2                      shift and go to state 42
    expressionVectorAt             shift and go to state 7

state 13

    (35) expressionComp -> aritExp .
    (13) aritExp -> aritExp . AO unaryExp

    COMP            reduce using rule 35 (expressionComp -> aritExp .)
    QUESTION        reduce using rule 35 (expressionComp -> aritExp .)
    BOOL_OP         reduce using rule 35 (expressionComp -> aritExp .)
    AOEQUAL         reduce using rule 35 (expressionComp -> aritExp .)
    EQUAL           reduce using rule 35 (expressionComp -> aritExp .)
    RPAREN          reduce using rule 35 (expressionComp -> aritExp .)
    COMMA           reduce using rule 35 (expressionComp -> aritExp .)
    RBRACE          reduce using rule 35 (expressionComp -> aritExp .)
    SEMICOLON       reduce using rule 35 (expressionComp -> aritExp .)
    RBRACKET        reduce using rule 35 (expressionComp -> aritExp .)
    COLON           reduce using rule 35 (expressionComp -> aritExp .)
    AO              shift and go to state 55


state 14

    (29) bool_atom -> TRUE .

    DOT             reduce using rule 29 (bool_atom -> TRUE .)
    DOUBLE_AO       reduce using rule 29 (bool_atom -> TRUE .)
    AO              reduce using rule 29 (bool_atom -> TRUE .)
    COMP            reduce using rule 29 (bool_atom -> TRUE .)
    QUESTION        reduce using rule 29 (bool_atom -> TRUE .)
    BOOL_OP         reduce using rule 29 (bool_atom -> TRUE .)
    AOEQUAL         reduce using rule 29 (bool_atom -> TRUE .)
    EQUAL           reduce using rule 29 (bool_atom -> TRUE .)
    COMMA           reduce using rule 29 (bool_atom -> TRUE .)
    RPAREN          reduce using rule 29 (bool_atom -> TRUE .)
    SEMICOLON       reduce using rule 29 (bool_atom -> TRUE .)
    RBRACKET        reduce using rule 29 (bool_atom -> TRUE .)
    COLON           reduce using rule 29 (bool_atom -> TRUE .)
    RBRACE          reduce using rule 29 (bool_atom -> TRUE .)


state 15

    (41) expressionVectorAt -> expressionVector .

    LBRACKET        reduce using rule 41 (expressionVectorAt -> expressionVector .)
    DOT             reduce using rule 41 (expressionVectorAt -> expressionVector .)
    DOUBLE_AO       reduce using rule 41 (expressionVectorAt -> expressionVector .)
    AO              reduce using rule 41 (expressionVectorAt -> expressionVector .)
    COMP            reduce using rule 41 (expressionVectorAt -> expressionVector .)
    QUESTION        reduce using rule 41 (expressionVectorAt -> expressionVector .)
    BOOL_OP         reduce using rule 41 (expressionVectorAt -> expressionVector .)
    AOEQUAL         reduce using rule 41 (expressionVectorAt -> expressionVector .)
    EQUAL           reduce using rule 41 (expressionVectorAt -> expressionVector .)
    SEMICOLON       reduce using rule 41 (expressionVectorAt -> expressionVector .)
    COMMA           reduce using rule 41 (expressionVectorAt -> expressionVector .)
    RBRACKET        reduce using rule 41 (expressionVectorAt -> expressionVector .)
    RPAREN          reduce using rule 41 (expressionVectorAt -> expressionVector .)
    COLON           reduce using rule 41 (expressionVectorAt -> expressionVector .)
    RBRACE          reduce using rule 41 (expressionVectorAt -> expressionVector .)


state 16

    (70) expressionFunction -> LENGTH . LPAREN expression RPAREN

    LPAREN          shift and go to state 56


state 17

    (19) unaryExp2 -> memberAccess .
    (48) memberAccess -> memberAccess . DOT factorVar
    (43) expressionVectorAt -> memberAccess .

  ! shift/reduce conflict for DOT resolved as shift
  ! reduce/reduce conflict for DOUBLE_AO resolved using rule 19 (unaryExp2 -> memberAccess .)
  ! reduce/reduce conflict for AO resolved using rule 19 (unaryExp2 -> memberAccess .)
  ! reduce/reduce conflict for COMP resolved using rule 19 (unaryExp2 -> memberAccess .)
  ! reduce/reduce conflict for QUESTION resolved using rule 19 (unaryExp2 -> memberAccess .)
  ! reduce/reduce conflict for BOOL_OP resolved using rule 19 (unaryExp2 -> memberAccess .)
  ! reduce/reduce conflict for AOEQUAL resolved using rule 19 (unaryExp2 -> memberAccess .)
  ! reduce/reduce conflict for EQUAL resolved using rule 19 (unaryExp2 -> memberAccess .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 19 (unaryExp2 -> memberAccess .)
  ! reduce/reduce conflict for COMMA resolved using rule 19 (unaryExp2 -> memberAccess .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 19 (unaryExp2 -> memberAccess .)
  ! reduce/reduce conflict for RPAREN resolved using rule 19 (unaryExp2 -> memberAccess .)
  ! reduce/reduce conflict for COLON resolved using rule 19 (unaryExp2 -> memberAccess .)
  ! reduce/reduce conflict for RBRACE resolved using rule 19 (unaryExp2 -> memberAccess .)
    DOUBLE_AO       reduce using rule 19 (unaryExp2 -> memberAccess .)
    AO              reduce using rule 19 (unaryExp2 -> memberAccess .)
    COMP            reduce using rule 19 (unaryExp2 -> memberAccess .)
    QUESTION        reduce using rule 19 (unaryExp2 -> memberAccess .)
    BOOL_OP         reduce using rule 19 (unaryExp2 -> memberAccess .)
    AOEQUAL         reduce using rule 19 (unaryExp2 -> memberAccess .)
    EQUAL           reduce using rule 19 (unaryExp2 -> memberAccess .)
    SEMICOLON       reduce using rule 19 (unaryExp2 -> memberAccess .)
    RPAREN          reduce using rule 19 (unaryExp2 -> memberAccess .)
    COMMA           reduce using rule 19 (unaryExp2 -> memberAccess .)
    RBRACKET        reduce using rule 19 (unaryExp2 -> memberAccess .)
    COLON           reduce using rule 19 (unaryExp2 -> memberAccess .)
    RBRACE          reduce using rule 19 (unaryExp2 -> memberAccess .)
    DOT             shift and go to state 57
    LBRACKET        reduce using rule 43 (expressionVectorAt -> memberAccess .)

  ! DOT             [ reduce using rule 43 (expressionVectorAt -> memberAccess .) ]
  ! DOUBLE_AO       [ reduce using rule 43 (expressionVectorAt -> memberAccess .) ]
  ! AO              [ reduce using rule 43 (expressionVectorAt -> memberAccess .) ]
  ! COMP            [ reduce using rule 43 (expressionVectorAt -> memberAccess .) ]
  ! QUESTION        [ reduce using rule 43 (expressionVectorAt -> memberAccess .) ]
  ! BOOL_OP         [ reduce using rule 43 (expressionVectorAt -> memberAccess .) ]
  ! AOEQUAL         [ reduce using rule 43 (expressionVectorAt -> memberAccess .) ]
  ! EQUAL           [ reduce using rule 43 (expressionVectorAt -> memberAccess .) ]
  ! SEMICOLON       [ reduce using rule 43 (expressionVectorAt -> memberAccess .) ]
  ! COMMA           [ reduce using rule 43 (expressionVectorAt -> memberAccess .) ]
  ! RBRACKET        [ reduce using rule 43 (expressionVectorAt -> memberAccess .) ]
  ! RPAREN          [ reduce using rule 43 (expressionVectorAt -> memberAccess .) ]
  ! COLON           [ reduce using rule 43 (expressionVectorAt -> memberAccess .) ]
  ! RBRACE          [ reduce using rule 43 (expressionVectorAt -> memberAccess .) ]


state 18

    (60) expressionTernaryCond -> expressionBoolOp . QUESTION expression COLON expression
    (61) expressionTernaryCond -> expressionBoolOp .
    (31) expressionBoolOp -> expressionBoolOp . BOOL_OP expressionComp

    QUESTION        shift and go to state 59
    AOEQUAL         reduce using rule 61 (expressionTernaryCond -> expressionBoolOp .)
    EQUAL           reduce using rule 61 (expressionTernaryCond -> expressionBoolOp .)
    SEMICOLON       reduce using rule 61 (expressionTernaryCond -> expressionBoolOp .)
    COMMA           reduce using rule 61 (expressionTernaryCond -> expressionBoolOp .)
    RBRACKET        reduce using rule 61 (expressionTernaryCond -> expressionBoolOp .)
    RPAREN          reduce using rule 61 (expressionTernaryCond -> expressionBoolOp .)
    COLON           reduce using rule 61 (expressionTernaryCond -> expressionBoolOp .)
    RBRACE          reduce using rule 61 (expressionTernaryCond -> expressionBoolOp .)
    BOOL_OP         shift and go to state 58


state 19

    (65) expressionFunction -> MULTIPLICACIONESCALAR . LPAREN expression COMMA expression RPAREN
    (66) expressionFunction -> MULTIPLICACIONESCALAR . LPAREN expression COMMA expression COMMA expression RPAREN

    LPAREN          shift and go to state 60


state 20

    (7) statement -> while .

    COMMENT         reduce using rule 7 (statement -> while .)
    LBRACE          reduce using rule 7 (statement -> while .)
    IF              reduce using rule 7 (statement -> while .)
    WHILE           reduce using rule 7 (statement -> while .)
    FOR             reduce using rule 7 (statement -> while .)
    DO              reduce using rule 7 (statement -> while .)
    AO              reduce using rule 7 (statement -> while .)
    DOUBLE_AO       reduce using rule 7 (statement -> while .)
    NOT             reduce using rule 7 (statement -> while .)
    STRING          reduce using rule 7 (statement -> while .)
    LPAREN          reduce using rule 7 (statement -> while .)
    NUMBER          reduce using rule 7 (statement -> while .)
    TRUE            reduce using rule 7 (statement -> while .)
    FALSE           reduce using rule 7 (statement -> while .)
    MULTIPLICACIONESCALAR reduce using rule 7 (statement -> while .)
    CAPITALIZAR     reduce using rule 7 (statement -> while .)
    COLINEALES      reduce using rule 7 (statement -> while .)
    PRINT           reduce using rule 7 (statement -> while .)
    LENGTH          reduce using rule 7 (statement -> while .)
    LBRACKET        reduce using rule 7 (statement -> while .)
    VAR             reduce using rule 7 (statement -> while .)
    $end            reduce using rule 7 (statement -> while .)
    RBRACE          reduce using rule 7 (statement -> while .)
    ELSE            reduce using rule 7 (statement -> while .)


state 21

    (5) statement -> block .

    COMMENT         reduce using rule 5 (statement -> block .)
    LBRACE          reduce using rule 5 (statement -> block .)
    IF              reduce using rule 5 (statement -> block .)
    WHILE           reduce using rule 5 (statement -> block .)
    FOR             reduce using rule 5 (statement -> block .)
    DO              reduce using rule 5 (statement -> block .)
    AO              reduce using rule 5 (statement -> block .)
    DOUBLE_AO       reduce using rule 5 (statement -> block .)
    NOT             reduce using rule 5 (statement -> block .)
    STRING          reduce using rule 5 (statement -> block .)
    LPAREN          reduce using rule 5 (statement -> block .)
    NUMBER          reduce using rule 5 (statement -> block .)
    TRUE            reduce using rule 5 (statement -> block .)
    FALSE           reduce using rule 5 (statement -> block .)
    MULTIPLICACIONESCALAR reduce using rule 5 (statement -> block .)
    CAPITALIZAR     reduce using rule 5 (statement -> block .)
    COLINEALES      reduce using rule 5 (statement -> block .)
    PRINT           reduce using rule 5 (statement -> block .)
    LENGTH          reduce using rule 5 (statement -> block .)
    LBRACKET        reduce using rule 5 (statement -> block .)
    VAR             reduce using rule 5 (statement -> block .)
    $end            reduce using rule 5 (statement -> block .)
    RBRACE          reduce using rule 5 (statement -> block .)
    ELSE            reduce using rule 5 (statement -> block .)


state 22

    (62) while -> WHILE . LPAREN expression RPAREN singleStatement

    LPAREN          shift and go to state 61


state 23

    (36) unaryExp -> STRING .

    AO              reduce using rule 36 (unaryExp -> STRING .)
    COMP            reduce using rule 36 (unaryExp -> STRING .)
    QUESTION        reduce using rule 36 (unaryExp -> STRING .)
    BOOL_OP         reduce using rule 36 (unaryExp -> STRING .)
    AOEQUAL         reduce using rule 36 (unaryExp -> STRING .)
    EQUAL           reduce using rule 36 (unaryExp -> STRING .)
    RPAREN          reduce using rule 36 (unaryExp -> STRING .)
    SEMICOLON       reduce using rule 36 (unaryExp -> STRING .)
    COMMA           reduce using rule 36 (unaryExp -> STRING .)
    RBRACKET        reduce using rule 36 (unaryExp -> STRING .)
    COLON           reduce using rule 36 (unaryExp -> STRING .)
    RBRACE          reduce using rule 36 (unaryExp -> STRING .)


state 24

    (25) factorExp -> LPAREN . expression RPAREN
    (10) expression -> . expressionAssign
    (44) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (46) expressionAssign -> . expressionTernaryCond
    (60) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (61) expressionTernaryCond -> . expressionBoolOp
    (31) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (32) expressionBoolOp -> . expressionComp
    (34) expressionComp -> . expressionComp COMP aritExp
    (35) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (33) unaryExp -> . NOT unaryExp
    (36) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . memberAccess
    (20) unaryExp2 -> . factorExp
    (48) memberAccess -> . memberAccess DOT factorVar
    (49) memberAccess -> . factorExp DOT factorVar
    (21) factorExp -> . factorNumExp
    (22) factorExp -> . bool_atom
    (23) factorExp -> . expressionVectorAt
    (24) factorExp -> . factorReg
    (25) factorExp -> . LPAREN expression RPAREN
    (26) factorExp -> . expressionFunction
    (28) factorNumExp -> . NUMBER
    (29) bool_atom -> . TRUE
    (30) bool_atom -> . FALSE
    (40) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (41) expressionVectorAt -> . expressionVector
    (42) expressionVectorAt -> . factorVar
    (43) expressionVectorAt -> . memberAccess
    (47) factorReg -> . LBRACE reg_items RBRACE
    (65) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (66) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (67) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (68) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (69) expressionFunction -> . PRINT LPAREN expression RPAREN
    (70) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (37) expressionVector -> . LBRACKET vector_items RBRACKET
    (27) factorVar -> . VAR

    AO              shift and go to state 43
    DOUBLE_AO       shift and go to state 12
    NOT             shift and go to state 11
    STRING          shift and go to state 23
    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 44
    TRUE            shift and go to state 14
    FALSE           shift and go to state 30
    LBRACE          shift and go to state 52
    MULTIPLICACIONESCALAR shift and go to state 19
    CAPITALIZAR     shift and go to state 1
    COLINEALES      shift and go to state 27
    PRINT           shift and go to state 45
    LENGTH          shift and go to state 16
    LBRACKET        shift and go to state 32
    VAR             shift and go to state 31

    factorVar                      shift and go to state 40
    expressionFunction             shift and go to state 39
    expressionTernaryCond          shift and go to state 26
    expressionComp                 shift and go to state 2
    expressionBoolOp               shift and go to state 18
    factorReg                      shift and go to state 3
    unaryExp                       shift and go to state 4
    memberAccess                   shift and go to state 17
    factorNumExp                   shift and go to state 38
    factorExp                      shift and go to state 5
    bool_atom                      shift and go to state 6
    expressionAssign               shift and go to state 29
    expression                     shift and go to state 62
    expressionVector               shift and go to state 15
    unaryExp2                      shift and go to state 42
    expressionVectorAt             shift and go to state 7
    aritExp                        shift and go to state 13

state 25

    (6) statement -> if .

    COMMENT         reduce using rule 6 (statement -> if .)
    LBRACE          reduce using rule 6 (statement -> if .)
    IF              reduce using rule 6 (statement -> if .)
    WHILE           reduce using rule 6 (statement -> if .)
    FOR             reduce using rule 6 (statement -> if .)
    DO              reduce using rule 6 (statement -> if .)
    AO              reduce using rule 6 (statement -> if .)
    DOUBLE_AO       reduce using rule 6 (statement -> if .)
    NOT             reduce using rule 6 (statement -> if .)
    STRING          reduce using rule 6 (statement -> if .)
    LPAREN          reduce using rule 6 (statement -> if .)
    NUMBER          reduce using rule 6 (statement -> if .)
    TRUE            reduce using rule 6 (statement -> if .)
    FALSE           reduce using rule 6 (statement -> if .)
    MULTIPLICACIONESCALAR reduce using rule 6 (statement -> if .)
    CAPITALIZAR     reduce using rule 6 (statement -> if .)
    COLINEALES      reduce using rule 6 (statement -> if .)
    PRINT           reduce using rule 6 (statement -> if .)
    LENGTH          reduce using rule 6 (statement -> if .)
    LBRACKET        reduce using rule 6 (statement -> if .)
    VAR             reduce using rule 6 (statement -> if .)
    $end            reduce using rule 6 (statement -> if .)
    RBRACE          reduce using rule 6 (statement -> if .)
    ELSE            reduce using rule 6 (statement -> if .)


state 26

    (44) expressionAssign -> expressionTernaryCond . AOEQUAL expressionAssign
    (45) expressionAssign -> expressionTernaryCond . EQUAL expressionAssign
    (46) expressionAssign -> expressionTernaryCond .

  ! shift/reduce conflict for AOEQUAL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
    AOEQUAL         shift and go to state 63
    EQUAL           shift and go to state 64
    SEMICOLON       reduce using rule 46 (expressionAssign -> expressionTernaryCond .)
    COMMA           reduce using rule 46 (expressionAssign -> expressionTernaryCond .)
    RPAREN          reduce using rule 46 (expressionAssign -> expressionTernaryCond .)
    RBRACKET        reduce using rule 46 (expressionAssign -> expressionTernaryCond .)
    RBRACE          reduce using rule 46 (expressionAssign -> expressionTernaryCond .)
    COLON           reduce using rule 46 (expressionAssign -> expressionTernaryCond .)

  ! AOEQUAL         [ reduce using rule 46 (expressionAssign -> expressionTernaryCond .) ]
  ! EQUAL           [ reduce using rule 46 (expressionAssign -> expressionTernaryCond .) ]


state 27

    (68) expressionFunction -> COLINEALES . LPAREN expression COMMA expression RPAREN

    LPAREN          shift and go to state 65


state 28

    (1) code -> statement . code
    (1) code -> . statement code
    (2) code -> . COMMENT code
    (3) code -> .
    (4) statement -> . expression SEMICOLON
    (5) statement -> . block
    (6) statement -> . if
    (7) statement -> . while
    (8) statement -> . for
    (9) statement -> . do_while
    (10) expression -> . expressionAssign
    (54) block -> . LBRACE code RBRACE
    (57) if -> . IF LPAREN expression RPAREN singleStatement else
    (62) while -> . WHILE LPAREN expression RPAREN singleStatement
    (63) for -> . FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement
    (64) do_while -> . DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON
    (44) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (46) expressionAssign -> . expressionTernaryCond
    (60) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (61) expressionTernaryCond -> . expressionBoolOp
    (31) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (32) expressionBoolOp -> . expressionComp
    (34) expressionComp -> . expressionComp COMP aritExp
    (35) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (33) unaryExp -> . NOT unaryExp
    (36) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . memberAccess
    (20) unaryExp2 -> . factorExp
    (48) memberAccess -> . memberAccess DOT factorVar
    (49) memberAccess -> . factorExp DOT factorVar
    (21) factorExp -> . factorNumExp
    (22) factorExp -> . bool_atom
    (23) factorExp -> . expressionVectorAt
    (24) factorExp -> . factorReg
    (25) factorExp -> . LPAREN expression RPAREN
    (26) factorExp -> . expressionFunction
    (28) factorNumExp -> . NUMBER
    (29) bool_atom -> . TRUE
    (30) bool_atom -> . FALSE
    (40) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (41) expressionVectorAt -> . expressionVector
    (42) expressionVectorAt -> . factorVar
    (43) expressionVectorAt -> . memberAccess
    (47) factorReg -> . LBRACE reg_items RBRACE
    (65) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (66) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (67) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (68) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (69) expressionFunction -> . PRINT LPAREN expression RPAREN
    (70) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (37) expressionVector -> . LBRACKET vector_items RBRACKET
    (27) factorVar -> . VAR

    COMMENT         shift and go to state 35
    $end            reduce using rule 3 (code -> .)
    RBRACE          reduce using rule 3 (code -> .)
    LBRACE          shift and go to state 36
    IF              shift and go to state 41
    WHILE           shift and go to state 22
    FOR             shift and go to state 10
    DO              shift and go to state 37
    AO              shift and go to state 43
    DOUBLE_AO       shift and go to state 12
    NOT             shift and go to state 11
    STRING          shift and go to state 23
    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 44
    TRUE            shift and go to state 14
    FALSE           shift and go to state 30
    MULTIPLICACIONESCALAR shift and go to state 19
    CAPITALIZAR     shift and go to state 1
    COLINEALES      shift and go to state 27
    PRINT           shift and go to state 45
    LENGTH          shift and go to state 16
    LBRACKET        shift and go to state 32
    VAR             shift and go to state 31

    if                             shift and go to state 25
    expressionTernaryCond          shift and go to state 26
    expressionComp                 shift and go to state 2
    memberAccess                   shift and go to state 17
    factorReg                      shift and go to state 3
    statement                      shift and go to state 28
    factorExp                      shift and go to state 5
    bool_atom                      shift and go to state 6
    expressionAssign               shift and go to state 29
    expression                     shift and go to state 8
    do_while                       shift and go to state 9
    aritExp                        shift and go to state 13
    code                           shift and go to state 66
    expressionFunction             shift and go to state 39
    for                            shift and go to state 34
    expressionBoolOp               shift and go to state 18
    factorNumExp                   shift and go to state 38
    expressionVectorAt             shift and go to state 7
    expressionVector               shift and go to state 15
    block                          shift and go to state 21
    factorVar                      shift and go to state 40
    while                          shift and go to state 20
    unaryExp2                      shift and go to state 42
    unaryExp                       shift and go to state 4

state 29

    (10) expression -> expressionAssign .

    COMMA           reduce using rule 10 (expression -> expressionAssign .)
    RBRACE          reduce using rule 10 (expression -> expressionAssign .)
    SEMICOLON       reduce using rule 10 (expression -> expressionAssign .)
    RPAREN          reduce using rule 10 (expression -> expressionAssign .)
    RBRACKET        reduce using rule 10 (expression -> expressionAssign .)
    COLON           reduce using rule 10 (expression -> expressionAssign .)
    AOEQUAL         reduce using rule 10 (expression -> expressionAssign .)
    EQUAL           reduce using rule 10 (expression -> expressionAssign .)


state 30

    (30) bool_atom -> FALSE .

    DOT             reduce using rule 30 (bool_atom -> FALSE .)
    DOUBLE_AO       reduce using rule 30 (bool_atom -> FALSE .)
    AO              reduce using rule 30 (bool_atom -> FALSE .)
    COMP            reduce using rule 30 (bool_atom -> FALSE .)
    QUESTION        reduce using rule 30 (bool_atom -> FALSE .)
    BOOL_OP         reduce using rule 30 (bool_atom -> FALSE .)
    AOEQUAL         reduce using rule 30 (bool_atom -> FALSE .)
    EQUAL           reduce using rule 30 (bool_atom -> FALSE .)
    COMMA           reduce using rule 30 (bool_atom -> FALSE .)
    RPAREN          reduce using rule 30 (bool_atom -> FALSE .)
    SEMICOLON       reduce using rule 30 (bool_atom -> FALSE .)
    RBRACKET        reduce using rule 30 (bool_atom -> FALSE .)
    COLON           reduce using rule 30 (bool_atom -> FALSE .)
    RBRACE          reduce using rule 30 (bool_atom -> FALSE .)


state 31

    (27) factorVar -> VAR .

    LBRACKET        reduce using rule 27 (factorVar -> VAR .)
    DOT             reduce using rule 27 (factorVar -> VAR .)
    DOUBLE_AO       reduce using rule 27 (factorVar -> VAR .)
    AO              reduce using rule 27 (factorVar -> VAR .)
    COMP            reduce using rule 27 (factorVar -> VAR .)
    QUESTION        reduce using rule 27 (factorVar -> VAR .)
    BOOL_OP         reduce using rule 27 (factorVar -> VAR .)
    AOEQUAL         reduce using rule 27 (factorVar -> VAR .)
    EQUAL           reduce using rule 27 (factorVar -> VAR .)
    COMMA           reduce using rule 27 (factorVar -> VAR .)
    RBRACKET        reduce using rule 27 (factorVar -> VAR .)
    COLON           reduce using rule 27 (factorVar -> VAR .)
    RPAREN          reduce using rule 27 (factorVar -> VAR .)
    SEMICOLON       reduce using rule 27 (factorVar -> VAR .)
    RBRACE          reduce using rule 27 (factorVar -> VAR .)


state 32

    (37) expressionVector -> LBRACKET . vector_items RBRACKET
    (38) vector_items -> . expression COMMA vector_items
    (39) vector_items -> . expression
    (10) expression -> . expressionAssign
    (44) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (46) expressionAssign -> . expressionTernaryCond
    (60) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (61) expressionTernaryCond -> . expressionBoolOp
    (31) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (32) expressionBoolOp -> . expressionComp
    (34) expressionComp -> . expressionComp COMP aritExp
    (35) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (33) unaryExp -> . NOT unaryExp
    (36) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . memberAccess
    (20) unaryExp2 -> . factorExp
    (48) memberAccess -> . memberAccess DOT factorVar
    (49) memberAccess -> . factorExp DOT factorVar
    (21) factorExp -> . factorNumExp
    (22) factorExp -> . bool_atom
    (23) factorExp -> . expressionVectorAt
    (24) factorExp -> . factorReg
    (25) factorExp -> . LPAREN expression RPAREN
    (26) factorExp -> . expressionFunction
    (28) factorNumExp -> . NUMBER
    (29) bool_atom -> . TRUE
    (30) bool_atom -> . FALSE
    (40) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (41) expressionVectorAt -> . expressionVector
    (42) expressionVectorAt -> . factorVar
    (43) expressionVectorAt -> . memberAccess
    (47) factorReg -> . LBRACE reg_items RBRACE
    (65) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (66) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (67) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (68) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (69) expressionFunction -> . PRINT LPAREN expression RPAREN
    (70) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (37) expressionVector -> . LBRACKET vector_items RBRACKET
    (27) factorVar -> . VAR

    AO              shift and go to state 43
    DOUBLE_AO       shift and go to state 12
    NOT             shift and go to state 11
    STRING          shift and go to state 23
    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 44
    TRUE            shift and go to state 14
    FALSE           shift and go to state 30
    LBRACE          shift and go to state 52
    MULTIPLICACIONESCALAR shift and go to state 19
    CAPITALIZAR     shift and go to state 1
    COLINEALES      shift and go to state 27
    PRINT           shift and go to state 45
    LENGTH          shift and go to state 16
    LBRACKET        shift and go to state 32
    VAR             shift and go to state 31

    factorVar                      shift and go to state 40
    expressionFunction             shift and go to state 39
    expressionTernaryCond          shift and go to state 26
    expressionComp                 shift and go to state 2
    expressionBoolOp               shift and go to state 18
    factorReg                      shift and go to state 3
    unaryExp                       shift and go to state 4
    memberAccess                   shift and go to state 17
    factorNumExp                   shift and go to state 38
    factorExp                      shift and go to state 5
    bool_atom                      shift and go to state 6
    vector_items                   shift and go to state 68
    expressionAssign               shift and go to state 29
    expression                     shift and go to state 67
    expressionVector               shift and go to state 15
    unaryExp2                      shift and go to state 42
    expressionVectorAt             shift and go to state 7
    aritExp                        shift and go to state 13

state 33

    (0) S' -> code .



state 34

    (8) statement -> for .

    COMMENT         reduce using rule 8 (statement -> for .)
    LBRACE          reduce using rule 8 (statement -> for .)
    IF              reduce using rule 8 (statement -> for .)
    WHILE           reduce using rule 8 (statement -> for .)
    FOR             reduce using rule 8 (statement -> for .)
    DO              reduce using rule 8 (statement -> for .)
    AO              reduce using rule 8 (statement -> for .)
    DOUBLE_AO       reduce using rule 8 (statement -> for .)
    NOT             reduce using rule 8 (statement -> for .)
    STRING          reduce using rule 8 (statement -> for .)
    LPAREN          reduce using rule 8 (statement -> for .)
    NUMBER          reduce using rule 8 (statement -> for .)
    TRUE            reduce using rule 8 (statement -> for .)
    FALSE           reduce using rule 8 (statement -> for .)
    MULTIPLICACIONESCALAR reduce using rule 8 (statement -> for .)
    CAPITALIZAR     reduce using rule 8 (statement -> for .)
    COLINEALES      reduce using rule 8 (statement -> for .)
    PRINT           reduce using rule 8 (statement -> for .)
    LENGTH          reduce using rule 8 (statement -> for .)
    LBRACKET        reduce using rule 8 (statement -> for .)
    VAR             reduce using rule 8 (statement -> for .)
    $end            reduce using rule 8 (statement -> for .)
    RBRACE          reduce using rule 8 (statement -> for .)
    ELSE            reduce using rule 8 (statement -> for .)


state 35

    (2) code -> COMMENT . code
    (1) code -> . statement code
    (2) code -> . COMMENT code
    (3) code -> .
    (4) statement -> . expression SEMICOLON
    (5) statement -> . block
    (6) statement -> . if
    (7) statement -> . while
    (8) statement -> . for
    (9) statement -> . do_while
    (10) expression -> . expressionAssign
    (54) block -> . LBRACE code RBRACE
    (57) if -> . IF LPAREN expression RPAREN singleStatement else
    (62) while -> . WHILE LPAREN expression RPAREN singleStatement
    (63) for -> . FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement
    (64) do_while -> . DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON
    (44) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (46) expressionAssign -> . expressionTernaryCond
    (60) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (61) expressionTernaryCond -> . expressionBoolOp
    (31) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (32) expressionBoolOp -> . expressionComp
    (34) expressionComp -> . expressionComp COMP aritExp
    (35) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (33) unaryExp -> . NOT unaryExp
    (36) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . memberAccess
    (20) unaryExp2 -> . factorExp
    (48) memberAccess -> . memberAccess DOT factorVar
    (49) memberAccess -> . factorExp DOT factorVar
    (21) factorExp -> . factorNumExp
    (22) factorExp -> . bool_atom
    (23) factorExp -> . expressionVectorAt
    (24) factorExp -> . factorReg
    (25) factorExp -> . LPAREN expression RPAREN
    (26) factorExp -> . expressionFunction
    (28) factorNumExp -> . NUMBER
    (29) bool_atom -> . TRUE
    (30) bool_atom -> . FALSE
    (40) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (41) expressionVectorAt -> . expressionVector
    (42) expressionVectorAt -> . factorVar
    (43) expressionVectorAt -> . memberAccess
    (47) factorReg -> . LBRACE reg_items RBRACE
    (65) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (66) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (67) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (68) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (69) expressionFunction -> . PRINT LPAREN expression RPAREN
    (70) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (37) expressionVector -> . LBRACKET vector_items RBRACKET
    (27) factorVar -> . VAR

    COMMENT         shift and go to state 35
    $end            reduce using rule 3 (code -> .)
    RBRACE          reduce using rule 3 (code -> .)
    LBRACE          shift and go to state 36
    IF              shift and go to state 41
    WHILE           shift and go to state 22
    FOR             shift and go to state 10
    DO              shift and go to state 37
    AO              shift and go to state 43
    DOUBLE_AO       shift and go to state 12
    NOT             shift and go to state 11
    STRING          shift and go to state 23
    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 44
    TRUE            shift and go to state 14
    FALSE           shift and go to state 30
    MULTIPLICACIONESCALAR shift and go to state 19
    CAPITALIZAR     shift and go to state 1
    COLINEALES      shift and go to state 27
    PRINT           shift and go to state 45
    LENGTH          shift and go to state 16
    LBRACKET        shift and go to state 32
    VAR             shift and go to state 31

    if                             shift and go to state 25
    expressionTernaryCond          shift and go to state 26
    expressionComp                 shift and go to state 2
    memberAccess                   shift and go to state 17
    factorReg                      shift and go to state 3
    statement                      shift and go to state 28
    factorExp                      shift and go to state 5
    bool_atom                      shift and go to state 6
    expressionAssign               shift and go to state 29
    expression                     shift and go to state 8
    do_while                       shift and go to state 9
    aritExp                        shift and go to state 13
    code                           shift and go to state 69
    expressionFunction             shift and go to state 39
    for                            shift and go to state 34
    expressionBoolOp               shift and go to state 18
    factorNumExp                   shift and go to state 38
    expressionVectorAt             shift and go to state 7
    expressionVector               shift and go to state 15
    block                          shift and go to state 21
    factorVar                      shift and go to state 40
    while                          shift and go to state 20
    unaryExp2                      shift and go to state 42
    unaryExp                       shift and go to state 4

state 36

    (54) block -> LBRACE . code RBRACE
    (47) factorReg -> LBRACE . reg_items RBRACE
    (1) code -> . statement code
    (2) code -> . COMMENT code
    (3) code -> .
    (50) reg_items -> . reg_field COMMA reg_items
    (51) reg_items -> . reg_field
    (4) statement -> . expression SEMICOLON
    (5) statement -> . block
    (6) statement -> . if
    (7) statement -> . while
    (8) statement -> . for
    (9) statement -> . do_while
    (52) reg_field -> . factorVar COLON expression
    (10) expression -> . expressionAssign
    (54) block -> . LBRACE code RBRACE
    (57) if -> . IF LPAREN expression RPAREN singleStatement else
    (62) while -> . WHILE LPAREN expression RPAREN singleStatement
    (63) for -> . FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement
    (64) do_while -> . DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON
    (27) factorVar -> . VAR
    (44) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (46) expressionAssign -> . expressionTernaryCond
    (60) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (61) expressionTernaryCond -> . expressionBoolOp
    (31) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (32) expressionBoolOp -> . expressionComp
    (34) expressionComp -> . expressionComp COMP aritExp
    (35) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (33) unaryExp -> . NOT unaryExp
    (36) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . memberAccess
    (20) unaryExp2 -> . factorExp
    (48) memberAccess -> . memberAccess DOT factorVar
    (49) memberAccess -> . factorExp DOT factorVar
    (21) factorExp -> . factorNumExp
    (22) factorExp -> . bool_atom
    (23) factorExp -> . expressionVectorAt
    (24) factorExp -> . factorReg
    (25) factorExp -> . LPAREN expression RPAREN
    (26) factorExp -> . expressionFunction
    (28) factorNumExp -> . NUMBER
    (29) bool_atom -> . TRUE
    (30) bool_atom -> . FALSE
    (40) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (41) expressionVectorAt -> . expressionVector
    (42) expressionVectorAt -> . factorVar
    (43) expressionVectorAt -> . memberAccess
    (47) factorReg -> . LBRACE reg_items RBRACE
    (65) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (66) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (67) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (68) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (69) expressionFunction -> . PRINT LPAREN expression RPAREN
    (70) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (37) expressionVector -> . LBRACKET vector_items RBRACKET

    COMMENT         shift and go to state 35
    RBRACE          reduce using rule 3 (code -> .)
    LBRACE          shift and go to state 36
    IF              shift and go to state 41
    WHILE           shift and go to state 22
    FOR             shift and go to state 10
    DO              shift and go to state 37
    VAR             shift and go to state 31
    AO              shift and go to state 43
    DOUBLE_AO       shift and go to state 12
    NOT             shift and go to state 11
    STRING          shift and go to state 23
    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 44
    TRUE            shift and go to state 14
    FALSE           shift and go to state 30
    MULTIPLICACIONESCALAR shift and go to state 19
    CAPITALIZAR     shift and go to state 1
    COLINEALES      shift and go to state 27
    PRINT           shift and go to state 45
    LENGTH          shift and go to state 16
    LBRACKET        shift and go to state 32

    if                             shift and go to state 25
    expressionTernaryCond          shift and go to state 26
    expressionComp                 shift and go to state 2
    memberAccess                   shift and go to state 17
    factorReg                      shift and go to state 3
    statement                      shift and go to state 28
    factorExp                      shift and go to state 5
    bool_atom                      shift and go to state 6
    expressionAssign               shift and go to state 29
    expression                     shift and go to state 8
    reg_field                      shift and go to state 72
    do_while                       shift and go to state 9
    aritExp                        shift and go to state 13
    code                           shift and go to state 71
    expressionFunction             shift and go to state 39
    for                            shift and go to state 34
    expressionBoolOp               shift and go to state 18
    factorNumExp                   shift and go to state 38
    reg_items                      shift and go to state 70
    expressionVector               shift and go to state 15
    block                          shift and go to state 21
    factorVar                      shift and go to state 73
    while                          shift and go to state 20
    unaryExp2                      shift and go to state 42
    expressionVectorAt             shift and go to state 7
    unaryExp                       shift and go to state 4

state 37

    (64) do_while -> DO . singleStatement WHILE LPAREN expression RPAREN SEMICOLON
    (55) singleStatement -> . COMMENT singleStatement
    (56) singleStatement -> . statement
    (4) statement -> . expression SEMICOLON
    (5) statement -> . block
    (6) statement -> . if
    (7) statement -> . while
    (8) statement -> . for
    (9) statement -> . do_while
    (10) expression -> . expressionAssign
    (54) block -> . LBRACE code RBRACE
    (57) if -> . IF LPAREN expression RPAREN singleStatement else
    (62) while -> . WHILE LPAREN expression RPAREN singleStatement
    (63) for -> . FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement
    (64) do_while -> . DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON
    (44) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (46) expressionAssign -> . expressionTernaryCond
    (60) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (61) expressionTernaryCond -> . expressionBoolOp
    (31) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (32) expressionBoolOp -> . expressionComp
    (34) expressionComp -> . expressionComp COMP aritExp
    (35) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (33) unaryExp -> . NOT unaryExp
    (36) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . memberAccess
    (20) unaryExp2 -> . factorExp
    (48) memberAccess -> . memberAccess DOT factorVar
    (49) memberAccess -> . factorExp DOT factorVar
    (21) factorExp -> . factorNumExp
    (22) factorExp -> . bool_atom
    (23) factorExp -> . expressionVectorAt
    (24) factorExp -> . factorReg
    (25) factorExp -> . LPAREN expression RPAREN
    (26) factorExp -> . expressionFunction
    (28) factorNumExp -> . NUMBER
    (29) bool_atom -> . TRUE
    (30) bool_atom -> . FALSE
    (40) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (41) expressionVectorAt -> . expressionVector
    (42) expressionVectorAt -> . factorVar
    (43) expressionVectorAt -> . memberAccess
    (47) factorReg -> . LBRACE reg_items RBRACE
    (65) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (66) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (67) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (68) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (69) expressionFunction -> . PRINT LPAREN expression RPAREN
    (70) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (37) expressionVector -> . LBRACKET vector_items RBRACKET
    (27) factorVar -> . VAR

    COMMENT         shift and go to state 75
    LBRACE          shift and go to state 36
    IF              shift and go to state 41
    WHILE           shift and go to state 22
    FOR             shift and go to state 10
    DO              shift and go to state 37
    AO              shift and go to state 43
    DOUBLE_AO       shift and go to state 12
    NOT             shift and go to state 11
    STRING          shift and go to state 23
    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 44
    TRUE            shift and go to state 14
    FALSE           shift and go to state 30
    MULTIPLICACIONESCALAR shift and go to state 19
    CAPITALIZAR     shift and go to state 1
    COLINEALES      shift and go to state 27
    PRINT           shift and go to state 45
    LENGTH          shift and go to state 16
    LBRACKET        shift and go to state 32
    VAR             shift and go to state 31

    if                             shift and go to state 25
    expressionTernaryCond          shift and go to state 26
    expressionComp                 shift and go to state 2
    memberAccess                   shift and go to state 17
    factorReg                      shift and go to state 3
    statement                      shift and go to state 74
    factorExp                      shift and go to state 5
    bool_atom                      shift and go to state 6
    expressionAssign               shift and go to state 29
    expression                     shift and go to state 8
    do_while                       shift and go to state 9
    aritExp                        shift and go to state 13
    expressionFunction             shift and go to state 39
    for                            shift and go to state 34
    expressionBoolOp               shift and go to state 18
    factorNumExp                   shift and go to state 38
    expressionVectorAt             shift and go to state 7
    expressionVector               shift and go to state 15
    block                          shift and go to state 21
    factorVar                      shift and go to state 40
    while                          shift and go to state 20
    unaryExp2                      shift and go to state 42
    unaryExp                       shift and go to state 4
    singleStatement                shift and go to state 76

state 38

    (21) factorExp -> factorNumExp .

    DOT             reduce using rule 21 (factorExp -> factorNumExp .)
    DOUBLE_AO       reduce using rule 21 (factorExp -> factorNumExp .)
    AO              reduce using rule 21 (factorExp -> factorNumExp .)
    COMP            reduce using rule 21 (factorExp -> factorNumExp .)
    QUESTION        reduce using rule 21 (factorExp -> factorNumExp .)
    BOOL_OP         reduce using rule 21 (factorExp -> factorNumExp .)
    AOEQUAL         reduce using rule 21 (factorExp -> factorNumExp .)
    EQUAL           reduce using rule 21 (factorExp -> factorNumExp .)
    RPAREN          reduce using rule 21 (factorExp -> factorNumExp .)
    SEMICOLON       reduce using rule 21 (factorExp -> factorNumExp .)
    COMMA           reduce using rule 21 (factorExp -> factorNumExp .)
    RBRACKET        reduce using rule 21 (factorExp -> factorNumExp .)
    COLON           reduce using rule 21 (factorExp -> factorNumExp .)
    RBRACE          reduce using rule 21 (factorExp -> factorNumExp .)


state 39

    (26) factorExp -> expressionFunction .

    DOT             reduce using rule 26 (factorExp -> expressionFunction .)
    DOUBLE_AO       reduce using rule 26 (factorExp -> expressionFunction .)
    AO              reduce using rule 26 (factorExp -> expressionFunction .)
    COMP            reduce using rule 26 (factorExp -> expressionFunction .)
    QUESTION        reduce using rule 26 (factorExp -> expressionFunction .)
    BOOL_OP         reduce using rule 26 (factorExp -> expressionFunction .)
    AOEQUAL         reduce using rule 26 (factorExp -> expressionFunction .)
    EQUAL           reduce using rule 26 (factorExp -> expressionFunction .)
    RPAREN          reduce using rule 26 (factorExp -> expressionFunction .)
    SEMICOLON       reduce using rule 26 (factorExp -> expressionFunction .)
    COMMA           reduce using rule 26 (factorExp -> expressionFunction .)
    RBRACKET        reduce using rule 26 (factorExp -> expressionFunction .)
    COLON           reduce using rule 26 (factorExp -> expressionFunction .)
    RBRACE          reduce using rule 26 (factorExp -> expressionFunction .)


state 40

    (42) expressionVectorAt -> factorVar .

    LBRACKET        reduce using rule 42 (expressionVectorAt -> factorVar .)
    DOT             reduce using rule 42 (expressionVectorAt -> factorVar .)
    DOUBLE_AO       reduce using rule 42 (expressionVectorAt -> factorVar .)
    AO              reduce using rule 42 (expressionVectorAt -> factorVar .)
    COMP            reduce using rule 42 (expressionVectorAt -> factorVar .)
    QUESTION        reduce using rule 42 (expressionVectorAt -> factorVar .)
    BOOL_OP         reduce using rule 42 (expressionVectorAt -> factorVar .)
    AOEQUAL         reduce using rule 42 (expressionVectorAt -> factorVar .)
    EQUAL           reduce using rule 42 (expressionVectorAt -> factorVar .)
    SEMICOLON       reduce using rule 42 (expressionVectorAt -> factorVar .)
    COMMA           reduce using rule 42 (expressionVectorAt -> factorVar .)
    RBRACKET        reduce using rule 42 (expressionVectorAt -> factorVar .)
    RPAREN          reduce using rule 42 (expressionVectorAt -> factorVar .)
    COLON           reduce using rule 42 (expressionVectorAt -> factorVar .)
    RBRACE          reduce using rule 42 (expressionVectorAt -> factorVar .)


state 41

    (57) if -> IF . LPAREN expression RPAREN singleStatement else

    LPAREN          shift and go to state 77


state 42

    (17) unaryExp -> unaryExp2 .
    (18) unaryExp2 -> unaryExp2 . DOUBLE_AO

    AO              reduce using rule 17 (unaryExp -> unaryExp2 .)
    COMP            reduce using rule 17 (unaryExp -> unaryExp2 .)
    QUESTION        reduce using rule 17 (unaryExp -> unaryExp2 .)
    BOOL_OP         reduce using rule 17 (unaryExp -> unaryExp2 .)
    AOEQUAL         reduce using rule 17 (unaryExp -> unaryExp2 .)
    EQUAL           reduce using rule 17 (unaryExp -> unaryExp2 .)
    RPAREN          reduce using rule 17 (unaryExp -> unaryExp2 .)
    SEMICOLON       reduce using rule 17 (unaryExp -> unaryExp2 .)
    COMMA           reduce using rule 17 (unaryExp -> unaryExp2 .)
    RBRACKET        reduce using rule 17 (unaryExp -> unaryExp2 .)
    COLON           reduce using rule 17 (unaryExp -> unaryExp2 .)
    RBRACE          reduce using rule 17 (unaryExp -> unaryExp2 .)
    DOUBLE_AO       shift and go to state 78


state 43

    (15) unaryExp -> AO . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (33) unaryExp -> . NOT unaryExp
    (36) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . memberAccess
    (20) unaryExp2 -> . factorExp
    (48) memberAccess -> . memberAccess DOT factorVar
    (49) memberAccess -> . factorExp DOT factorVar
    (21) factorExp -> . factorNumExp
    (22) factorExp -> . bool_atom
    (23) factorExp -> . expressionVectorAt
    (24) factorExp -> . factorReg
    (25) factorExp -> . LPAREN expression RPAREN
    (26) factorExp -> . expressionFunction
    (28) factorNumExp -> . NUMBER
    (29) bool_atom -> . TRUE
    (30) bool_atom -> . FALSE
    (40) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (41) expressionVectorAt -> . expressionVector
    (42) expressionVectorAt -> . factorVar
    (43) expressionVectorAt -> . memberAccess
    (47) factorReg -> . LBRACE reg_items RBRACE
    (65) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (66) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (67) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (68) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (69) expressionFunction -> . PRINT LPAREN expression RPAREN
    (70) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (37) expressionVector -> . LBRACKET vector_items RBRACKET
    (27) factorVar -> . VAR

    AO              shift and go to state 43
    DOUBLE_AO       shift and go to state 12
    NOT             shift and go to state 11
    STRING          shift and go to state 23
    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 44
    TRUE            shift and go to state 14
    FALSE           shift and go to state 30
    LBRACE          shift and go to state 52
    MULTIPLICACIONESCALAR shift and go to state 19
    CAPITALIZAR     shift and go to state 1
    COLINEALES      shift and go to state 27
    PRINT           shift and go to state 45
    LENGTH          shift and go to state 16
    LBRACKET        shift and go to state 32
    VAR             shift and go to state 31

    expressionVector               shift and go to state 15
    memberAccess                   shift and go to state 17
    factorReg                      shift and go to state 3
    unaryExp                       shift and go to state 79
    factorNumExp                   shift and go to state 38
    factorExp                      shift and go to state 5
    expressionFunction             shift and go to state 39
    bool_atom                      shift and go to state 6
    factorVar                      shift and go to state 40
    unaryExp2                      shift and go to state 42
    expressionVectorAt             shift and go to state 7

state 44

    (28) factorNumExp -> NUMBER .

    DOT             reduce using rule 28 (factorNumExp -> NUMBER .)
    DOUBLE_AO       reduce using rule 28 (factorNumExp -> NUMBER .)
    AO              reduce using rule 28 (factorNumExp -> NUMBER .)
    COMP            reduce using rule 28 (factorNumExp -> NUMBER .)
    QUESTION        reduce using rule 28 (factorNumExp -> NUMBER .)
    BOOL_OP         reduce using rule 28 (factorNumExp -> NUMBER .)
    AOEQUAL         reduce using rule 28 (factorNumExp -> NUMBER .)
    EQUAL           reduce using rule 28 (factorNumExp -> NUMBER .)
    RPAREN          reduce using rule 28 (factorNumExp -> NUMBER .)
    SEMICOLON       reduce using rule 28 (factorNumExp -> NUMBER .)
    COMMA           reduce using rule 28 (factorNumExp -> NUMBER .)
    RBRACKET        reduce using rule 28 (factorNumExp -> NUMBER .)
    COLON           reduce using rule 28 (factorNumExp -> NUMBER .)
    RBRACE          reduce using rule 28 (factorNumExp -> NUMBER .)


state 45

    (69) expressionFunction -> PRINT . LPAREN expression RPAREN

    LPAREN          shift and go to state 80


state 46

    (67) expressionFunction -> CAPITALIZAR LPAREN . expression RPAREN
    (10) expression -> . expressionAssign
    (44) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (46) expressionAssign -> . expressionTernaryCond
    (60) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (61) expressionTernaryCond -> . expressionBoolOp
    (31) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (32) expressionBoolOp -> . expressionComp
    (34) expressionComp -> . expressionComp COMP aritExp
    (35) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (33) unaryExp -> . NOT unaryExp
    (36) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . memberAccess
    (20) unaryExp2 -> . factorExp
    (48) memberAccess -> . memberAccess DOT factorVar
    (49) memberAccess -> . factorExp DOT factorVar
    (21) factorExp -> . factorNumExp
    (22) factorExp -> . bool_atom
    (23) factorExp -> . expressionVectorAt
    (24) factorExp -> . factorReg
    (25) factorExp -> . LPAREN expression RPAREN
    (26) factorExp -> . expressionFunction
    (28) factorNumExp -> . NUMBER
    (29) bool_atom -> . TRUE
    (30) bool_atom -> . FALSE
    (40) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (41) expressionVectorAt -> . expressionVector
    (42) expressionVectorAt -> . factorVar
    (43) expressionVectorAt -> . memberAccess
    (47) factorReg -> . LBRACE reg_items RBRACE
    (65) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (66) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (67) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (68) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (69) expressionFunction -> . PRINT LPAREN expression RPAREN
    (70) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (37) expressionVector -> . LBRACKET vector_items RBRACKET
    (27) factorVar -> . VAR

    AO              shift and go to state 43
    DOUBLE_AO       shift and go to state 12
    NOT             shift and go to state 11
    STRING          shift and go to state 23
    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 44
    TRUE            shift and go to state 14
    FALSE           shift and go to state 30
    LBRACE          shift and go to state 52
    MULTIPLICACIONESCALAR shift and go to state 19
    CAPITALIZAR     shift and go to state 1
    COLINEALES      shift and go to state 27
    PRINT           shift and go to state 45
    LENGTH          shift and go to state 16
    LBRACKET        shift and go to state 32
    VAR             shift and go to state 31

    factorVar                      shift and go to state 40
    expressionFunction             shift and go to state 39
    expressionTernaryCond          shift and go to state 26
    expressionComp                 shift and go to state 2
    expressionBoolOp               shift and go to state 18
    factorReg                      shift and go to state 3
    unaryExp                       shift and go to state 4
    memberAccess                   shift and go to state 17
    factorNumExp                   shift and go to state 38
    factorExp                      shift and go to state 5
    bool_atom                      shift and go to state 6
    expressionAssign               shift and go to state 29
    expression                     shift and go to state 81
    expressionVector               shift and go to state 15
    unaryExp2                      shift and go to state 42
    expressionVectorAt             shift and go to state 7
    aritExp                        shift and go to state 13

state 47

    (34) expressionComp -> expressionComp COMP . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (33) unaryExp -> . NOT unaryExp
    (36) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . memberAccess
    (20) unaryExp2 -> . factorExp
    (48) memberAccess -> . memberAccess DOT factorVar
    (49) memberAccess -> . factorExp DOT factorVar
    (21) factorExp -> . factorNumExp
    (22) factorExp -> . bool_atom
    (23) factorExp -> . expressionVectorAt
    (24) factorExp -> . factorReg
    (25) factorExp -> . LPAREN expression RPAREN
    (26) factorExp -> . expressionFunction
    (28) factorNumExp -> . NUMBER
    (29) bool_atom -> . TRUE
    (30) bool_atom -> . FALSE
    (40) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (41) expressionVectorAt -> . expressionVector
    (42) expressionVectorAt -> . factorVar
    (43) expressionVectorAt -> . memberAccess
    (47) factorReg -> . LBRACE reg_items RBRACE
    (65) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (66) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (67) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (68) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (69) expressionFunction -> . PRINT LPAREN expression RPAREN
    (70) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (37) expressionVector -> . LBRACKET vector_items RBRACKET
    (27) factorVar -> . VAR

    AO              shift and go to state 43
    DOUBLE_AO       shift and go to state 12
    NOT             shift and go to state 11
    STRING          shift and go to state 23
    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 44
    TRUE            shift and go to state 14
    FALSE           shift and go to state 30
    LBRACE          shift and go to state 52
    MULTIPLICACIONESCALAR shift and go to state 19
    CAPITALIZAR     shift and go to state 1
    COLINEALES      shift and go to state 27
    PRINT           shift and go to state 45
    LENGTH          shift and go to state 16
    LBRACKET        shift and go to state 32
    VAR             shift and go to state 31

    expressionFunction             shift and go to state 39
    memberAccess                   shift and go to state 17
    factorReg                      shift and go to state 3
    unaryExp                       shift and go to state 4
    factorNumExp                   shift and go to state 38
    factorExp                      shift and go to state 5
    bool_atom                      shift and go to state 6
    expressionVectorAt             shift and go to state 7
    factorVar                      shift and go to state 40
    unaryExp2                      shift and go to state 42
    expressionVector               shift and go to state 15
    aritExp                        shift and go to state 82

state 48

    (49) memberAccess -> factorExp DOT . factorVar
    (27) factorVar -> . VAR

    VAR             shift and go to state 31

    factorVar                      shift and go to state 83

state 49

    (40) expressionVectorAt -> expressionVectorAt LBRACKET . expression RBRACKET
    (10) expression -> . expressionAssign
    (44) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (46) expressionAssign -> . expressionTernaryCond
    (60) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (61) expressionTernaryCond -> . expressionBoolOp
    (31) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (32) expressionBoolOp -> . expressionComp
    (34) expressionComp -> . expressionComp COMP aritExp
    (35) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (33) unaryExp -> . NOT unaryExp
    (36) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . memberAccess
    (20) unaryExp2 -> . factorExp
    (48) memberAccess -> . memberAccess DOT factorVar
    (49) memberAccess -> . factorExp DOT factorVar
    (21) factorExp -> . factorNumExp
    (22) factorExp -> . bool_atom
    (23) factorExp -> . expressionVectorAt
    (24) factorExp -> . factorReg
    (25) factorExp -> . LPAREN expression RPAREN
    (26) factorExp -> . expressionFunction
    (28) factorNumExp -> . NUMBER
    (29) bool_atom -> . TRUE
    (30) bool_atom -> . FALSE
    (40) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (41) expressionVectorAt -> . expressionVector
    (42) expressionVectorAt -> . factorVar
    (43) expressionVectorAt -> . memberAccess
    (47) factorReg -> . LBRACE reg_items RBRACE
    (65) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (66) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (67) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (68) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (69) expressionFunction -> . PRINT LPAREN expression RPAREN
    (70) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (37) expressionVector -> . LBRACKET vector_items RBRACKET
    (27) factorVar -> . VAR

    AO              shift and go to state 43
    DOUBLE_AO       shift and go to state 12
    NOT             shift and go to state 11
    STRING          shift and go to state 23
    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 44
    TRUE            shift and go to state 14
    FALSE           shift and go to state 30
    LBRACE          shift and go to state 52
    MULTIPLICACIONESCALAR shift and go to state 19
    CAPITALIZAR     shift and go to state 1
    COLINEALES      shift and go to state 27
    PRINT           shift and go to state 45
    LENGTH          shift and go to state 16
    LBRACKET        shift and go to state 32
    VAR             shift and go to state 31

    factorVar                      shift and go to state 40
    expressionFunction             shift and go to state 39
    expressionTernaryCond          shift and go to state 26
    expressionComp                 shift and go to state 2
    expressionBoolOp               shift and go to state 18
    factorReg                      shift and go to state 3
    unaryExp                       shift and go to state 4
    memberAccess                   shift and go to state 17
    factorNumExp                   shift and go to state 38
    factorExp                      shift and go to state 5
    bool_atom                      shift and go to state 6
    expressionVectorAt             shift and go to state 7
    expression                     shift and go to state 84
    expressionVector               shift and go to state 15
    unaryExp2                      shift and go to state 42
    expressionAssign               shift and go to state 29
    aritExp                        shift and go to state 13

state 50

    (4) statement -> expression SEMICOLON .

    COMMENT         reduce using rule 4 (statement -> expression SEMICOLON .)
    LBRACE          reduce using rule 4 (statement -> expression SEMICOLON .)
    IF              reduce using rule 4 (statement -> expression SEMICOLON .)
    WHILE           reduce using rule 4 (statement -> expression SEMICOLON .)
    FOR             reduce using rule 4 (statement -> expression SEMICOLON .)
    DO              reduce using rule 4 (statement -> expression SEMICOLON .)
    AO              reduce using rule 4 (statement -> expression SEMICOLON .)
    DOUBLE_AO       reduce using rule 4 (statement -> expression SEMICOLON .)
    NOT             reduce using rule 4 (statement -> expression SEMICOLON .)
    STRING          reduce using rule 4 (statement -> expression SEMICOLON .)
    LPAREN          reduce using rule 4 (statement -> expression SEMICOLON .)
    NUMBER          reduce using rule 4 (statement -> expression SEMICOLON .)
    TRUE            reduce using rule 4 (statement -> expression SEMICOLON .)
    FALSE           reduce using rule 4 (statement -> expression SEMICOLON .)
    MULTIPLICACIONESCALAR reduce using rule 4 (statement -> expression SEMICOLON .)
    CAPITALIZAR     reduce using rule 4 (statement -> expression SEMICOLON .)
    COLINEALES      reduce using rule 4 (statement -> expression SEMICOLON .)
    PRINT           reduce using rule 4 (statement -> expression SEMICOLON .)
    LENGTH          reduce using rule 4 (statement -> expression SEMICOLON .)
    LBRACKET        reduce using rule 4 (statement -> expression SEMICOLON .)
    VAR             reduce using rule 4 (statement -> expression SEMICOLON .)
    $end            reduce using rule 4 (statement -> expression SEMICOLON .)
    RBRACE          reduce using rule 4 (statement -> expression SEMICOLON .)
    ELSE            reduce using rule 4 (statement -> expression SEMICOLON .)


state 51

    (63) for -> FOR LPAREN . optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement
    (11) optional_expr -> . expression
    (12) optional_expr -> .
    (10) expression -> . expressionAssign
    (44) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (46) expressionAssign -> . expressionTernaryCond
    (60) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (61) expressionTernaryCond -> . expressionBoolOp
    (31) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (32) expressionBoolOp -> . expressionComp
    (34) expressionComp -> . expressionComp COMP aritExp
    (35) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (33) unaryExp -> . NOT unaryExp
    (36) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . memberAccess
    (20) unaryExp2 -> . factorExp
    (48) memberAccess -> . memberAccess DOT factorVar
    (49) memberAccess -> . factorExp DOT factorVar
    (21) factorExp -> . factorNumExp
    (22) factorExp -> . bool_atom
    (23) factorExp -> . expressionVectorAt
    (24) factorExp -> . factorReg
    (25) factorExp -> . LPAREN expression RPAREN
    (26) factorExp -> . expressionFunction
    (28) factorNumExp -> . NUMBER
    (29) bool_atom -> . TRUE
    (30) bool_atom -> . FALSE
    (40) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (41) expressionVectorAt -> . expressionVector
    (42) expressionVectorAt -> . factorVar
    (43) expressionVectorAt -> . memberAccess
    (47) factorReg -> . LBRACE reg_items RBRACE
    (65) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (66) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (67) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (68) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (69) expressionFunction -> . PRINT LPAREN expression RPAREN
    (70) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (37) expressionVector -> . LBRACKET vector_items RBRACKET
    (27) factorVar -> . VAR

    SEMICOLON       reduce using rule 12 (optional_expr -> .)
    AO              shift and go to state 43
    DOUBLE_AO       shift and go to state 12
    NOT             shift and go to state 11
    STRING          shift and go to state 23
    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 44
    TRUE            shift and go to state 14
    FALSE           shift and go to state 30
    LBRACE          shift and go to state 52
    MULTIPLICACIONESCALAR shift and go to state 19
    CAPITALIZAR     shift and go to state 1
    COLINEALES      shift and go to state 27
    PRINT           shift and go to state 45
    LENGTH          shift and go to state 16
    LBRACKET        shift and go to state 32
    VAR             shift and go to state 31

    factorVar                      shift and go to state 40
    expressionFunction             shift and go to state 39
    expressionTernaryCond          shift and go to state 26
    expressionComp                 shift and go to state 2
    expressionBoolOp               shift and go to state 18
    factorReg                      shift and go to state 3
    unaryExp                       shift and go to state 4
    memberAccess                   shift and go to state 17
    factorNumExp                   shift and go to state 38
    factorExp                      shift and go to state 5
    bool_atom                      shift and go to state 6
    expressionAssign               shift and go to state 29
    expression                     shift and go to state 85
    expressionVector               shift and go to state 15
    unaryExp2                      shift and go to state 42
    expressionVectorAt             shift and go to state 7
    optional_expr                  shift and go to state 86
    aritExp                        shift and go to state 13

state 52

    (47) factorReg -> LBRACE . reg_items RBRACE
    (50) reg_items -> . reg_field COMMA reg_items
    (51) reg_items -> . reg_field
    (52) reg_field -> . factorVar COLON expression
    (27) factorVar -> . VAR

    VAR             shift and go to state 31

    factorVar                      shift and go to state 87
    reg_items                      shift and go to state 70
    reg_field                      shift and go to state 72

state 53

    (33) unaryExp -> NOT unaryExp .

    AO              reduce using rule 33 (unaryExp -> NOT unaryExp .)
    COMP            reduce using rule 33 (unaryExp -> NOT unaryExp .)
    QUESTION        reduce using rule 33 (unaryExp -> NOT unaryExp .)
    BOOL_OP         reduce using rule 33 (unaryExp -> NOT unaryExp .)
    AOEQUAL         reduce using rule 33 (unaryExp -> NOT unaryExp .)
    EQUAL           reduce using rule 33 (unaryExp -> NOT unaryExp .)
    RPAREN          reduce using rule 33 (unaryExp -> NOT unaryExp .)
    SEMICOLON       reduce using rule 33 (unaryExp -> NOT unaryExp .)
    COMMA           reduce using rule 33 (unaryExp -> NOT unaryExp .)
    RBRACKET        reduce using rule 33 (unaryExp -> NOT unaryExp .)
    COLON           reduce using rule 33 (unaryExp -> NOT unaryExp .)
    RBRACE          reduce using rule 33 (unaryExp -> NOT unaryExp .)


state 54

    (16) unaryExp -> DOUBLE_AO unaryExp .

    AO              reduce using rule 16 (unaryExp -> DOUBLE_AO unaryExp .)
    COMP            reduce using rule 16 (unaryExp -> DOUBLE_AO unaryExp .)
    QUESTION        reduce using rule 16 (unaryExp -> DOUBLE_AO unaryExp .)
    BOOL_OP         reduce using rule 16 (unaryExp -> DOUBLE_AO unaryExp .)
    AOEQUAL         reduce using rule 16 (unaryExp -> DOUBLE_AO unaryExp .)
    EQUAL           reduce using rule 16 (unaryExp -> DOUBLE_AO unaryExp .)
    RPAREN          reduce using rule 16 (unaryExp -> DOUBLE_AO unaryExp .)
    SEMICOLON       reduce using rule 16 (unaryExp -> DOUBLE_AO unaryExp .)
    COMMA           reduce using rule 16 (unaryExp -> DOUBLE_AO unaryExp .)
    RBRACKET        reduce using rule 16 (unaryExp -> DOUBLE_AO unaryExp .)
    COLON           reduce using rule 16 (unaryExp -> DOUBLE_AO unaryExp .)
    RBRACE          reduce using rule 16 (unaryExp -> DOUBLE_AO unaryExp .)


state 55

    (13) aritExp -> aritExp AO . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (33) unaryExp -> . NOT unaryExp
    (36) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . memberAccess
    (20) unaryExp2 -> . factorExp
    (48) memberAccess -> . memberAccess DOT factorVar
    (49) memberAccess -> . factorExp DOT factorVar
    (21) factorExp -> . factorNumExp
    (22) factorExp -> . bool_atom
    (23) factorExp -> . expressionVectorAt
    (24) factorExp -> . factorReg
    (25) factorExp -> . LPAREN expression RPAREN
    (26) factorExp -> . expressionFunction
    (28) factorNumExp -> . NUMBER
    (29) bool_atom -> . TRUE
    (30) bool_atom -> . FALSE
    (40) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (41) expressionVectorAt -> . expressionVector
    (42) expressionVectorAt -> . factorVar
    (43) expressionVectorAt -> . memberAccess
    (47) factorReg -> . LBRACE reg_items RBRACE
    (65) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (66) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (67) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (68) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (69) expressionFunction -> . PRINT LPAREN expression RPAREN
    (70) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (37) expressionVector -> . LBRACKET vector_items RBRACKET
    (27) factorVar -> . VAR

    AO              shift and go to state 43
    DOUBLE_AO       shift and go to state 12
    NOT             shift and go to state 11
    STRING          shift and go to state 23
    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 44
    TRUE            shift and go to state 14
    FALSE           shift and go to state 30
    LBRACE          shift and go to state 52
    MULTIPLICACIONESCALAR shift and go to state 19
    CAPITALIZAR     shift and go to state 1
    COLINEALES      shift and go to state 27
    PRINT           shift and go to state 45
    LENGTH          shift and go to state 16
    LBRACKET        shift and go to state 32
    VAR             shift and go to state 31

    expressionFunction             shift and go to state 39
    memberAccess                   shift and go to state 17
    factorReg                      shift and go to state 3
    unaryExp                       shift and go to state 88
    factorNumExp                   shift and go to state 38
    factorExp                      shift and go to state 5
    bool_atom                      shift and go to state 6
    expressionVectorAt             shift and go to state 7
    factorVar                      shift and go to state 40
    unaryExp2                      shift and go to state 42
    expressionVector               shift and go to state 15

state 56

    (70) expressionFunction -> LENGTH LPAREN . expression RPAREN
    (10) expression -> . expressionAssign
    (44) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (46) expressionAssign -> . expressionTernaryCond
    (60) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (61) expressionTernaryCond -> . expressionBoolOp
    (31) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (32) expressionBoolOp -> . expressionComp
    (34) expressionComp -> . expressionComp COMP aritExp
    (35) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (33) unaryExp -> . NOT unaryExp
    (36) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . memberAccess
    (20) unaryExp2 -> . factorExp
    (48) memberAccess -> . memberAccess DOT factorVar
    (49) memberAccess -> . factorExp DOT factorVar
    (21) factorExp -> . factorNumExp
    (22) factorExp -> . bool_atom
    (23) factorExp -> . expressionVectorAt
    (24) factorExp -> . factorReg
    (25) factorExp -> . LPAREN expression RPAREN
    (26) factorExp -> . expressionFunction
    (28) factorNumExp -> . NUMBER
    (29) bool_atom -> . TRUE
    (30) bool_atom -> . FALSE
    (40) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (41) expressionVectorAt -> . expressionVector
    (42) expressionVectorAt -> . factorVar
    (43) expressionVectorAt -> . memberAccess
    (47) factorReg -> . LBRACE reg_items RBRACE
    (65) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (66) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (67) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (68) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (69) expressionFunction -> . PRINT LPAREN expression RPAREN
    (70) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (37) expressionVector -> . LBRACKET vector_items RBRACKET
    (27) factorVar -> . VAR

    AO              shift and go to state 43
    DOUBLE_AO       shift and go to state 12
    NOT             shift and go to state 11
    STRING          shift and go to state 23
    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 44
    TRUE            shift and go to state 14
    FALSE           shift and go to state 30
    LBRACE          shift and go to state 52
    MULTIPLICACIONESCALAR shift and go to state 19
    CAPITALIZAR     shift and go to state 1
    COLINEALES      shift and go to state 27
    PRINT           shift and go to state 45
    LENGTH          shift and go to state 16
    LBRACKET        shift and go to state 32
    VAR             shift and go to state 31

    factorVar                      shift and go to state 40
    expressionFunction             shift and go to state 39
    expressionTernaryCond          shift and go to state 26
    expressionComp                 shift and go to state 2
    expressionBoolOp               shift and go to state 18
    factorReg                      shift and go to state 3
    unaryExp                       shift and go to state 4
    memberAccess                   shift and go to state 17
    factorNumExp                   shift and go to state 38
    factorExp                      shift and go to state 5
    bool_atom                      shift and go to state 6
    expressionAssign               shift and go to state 29
    expression                     shift and go to state 89
    expressionVector               shift and go to state 15
    unaryExp2                      shift and go to state 42
    expressionVectorAt             shift and go to state 7
    aritExp                        shift and go to state 13

state 57

    (48) memberAccess -> memberAccess DOT . factorVar
    (27) factorVar -> . VAR

    VAR             shift and go to state 31

    factorVar                      shift and go to state 90

state 58

    (31) expressionBoolOp -> expressionBoolOp BOOL_OP . expressionComp
    (34) expressionComp -> . expressionComp COMP aritExp
    (35) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (33) unaryExp -> . NOT unaryExp
    (36) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . memberAccess
    (20) unaryExp2 -> . factorExp
    (48) memberAccess -> . memberAccess DOT factorVar
    (49) memberAccess -> . factorExp DOT factorVar
    (21) factorExp -> . factorNumExp
    (22) factorExp -> . bool_atom
    (23) factorExp -> . expressionVectorAt
    (24) factorExp -> . factorReg
    (25) factorExp -> . LPAREN expression RPAREN
    (26) factorExp -> . expressionFunction
    (28) factorNumExp -> . NUMBER
    (29) bool_atom -> . TRUE
    (30) bool_atom -> . FALSE
    (40) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (41) expressionVectorAt -> . expressionVector
    (42) expressionVectorAt -> . factorVar
    (43) expressionVectorAt -> . memberAccess
    (47) factorReg -> . LBRACE reg_items RBRACE
    (65) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (66) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (67) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (68) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (69) expressionFunction -> . PRINT LPAREN expression RPAREN
    (70) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (37) expressionVector -> . LBRACKET vector_items RBRACKET
    (27) factorVar -> . VAR

    AO              shift and go to state 43
    DOUBLE_AO       shift and go to state 12
    NOT             shift and go to state 11
    STRING          shift and go to state 23
    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 44
    TRUE            shift and go to state 14
    FALSE           shift and go to state 30
    LBRACE          shift and go to state 52
    MULTIPLICACIONESCALAR shift and go to state 19
    CAPITALIZAR     shift and go to state 1
    COLINEALES      shift and go to state 27
    PRINT           shift and go to state 45
    LENGTH          shift and go to state 16
    LBRACKET        shift and go to state 32
    VAR             shift and go to state 31

    expressionFunction             shift and go to state 39
    memberAccess                   shift and go to state 17
    factorReg                      shift and go to state 3
    unaryExp                       shift and go to state 4
    factorNumExp                   shift and go to state 38
    factorExp                      shift and go to state 5
    bool_atom                      shift and go to state 6
    expressionVectorAt             shift and go to state 7
    factorVar                      shift and go to state 40
    unaryExp2                      shift and go to state 42
    expressionComp                 shift and go to state 91
    expressionVector               shift and go to state 15
    aritExp                        shift and go to state 13

state 59

    (60) expressionTernaryCond -> expressionBoolOp QUESTION . expression COLON expression
    (10) expression -> . expressionAssign
    (44) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (46) expressionAssign -> . expressionTernaryCond
    (60) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (61) expressionTernaryCond -> . expressionBoolOp
    (31) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (32) expressionBoolOp -> . expressionComp
    (34) expressionComp -> . expressionComp COMP aritExp
    (35) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (33) unaryExp -> . NOT unaryExp
    (36) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . memberAccess
    (20) unaryExp2 -> . factorExp
    (48) memberAccess -> . memberAccess DOT factorVar
    (49) memberAccess -> . factorExp DOT factorVar
    (21) factorExp -> . factorNumExp
    (22) factorExp -> . bool_atom
    (23) factorExp -> . expressionVectorAt
    (24) factorExp -> . factorReg
    (25) factorExp -> . LPAREN expression RPAREN
    (26) factorExp -> . expressionFunction
    (28) factorNumExp -> . NUMBER
    (29) bool_atom -> . TRUE
    (30) bool_atom -> . FALSE
    (40) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (41) expressionVectorAt -> . expressionVector
    (42) expressionVectorAt -> . factorVar
    (43) expressionVectorAt -> . memberAccess
    (47) factorReg -> . LBRACE reg_items RBRACE
    (65) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (66) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (67) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (68) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (69) expressionFunction -> . PRINT LPAREN expression RPAREN
    (70) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (37) expressionVector -> . LBRACKET vector_items RBRACKET
    (27) factorVar -> . VAR

    AO              shift and go to state 43
    DOUBLE_AO       shift and go to state 12
    NOT             shift and go to state 11
    STRING          shift and go to state 23
    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 44
    TRUE            shift and go to state 14
    FALSE           shift and go to state 30
    LBRACE          shift and go to state 52
    MULTIPLICACIONESCALAR shift and go to state 19
    CAPITALIZAR     shift and go to state 1
    COLINEALES      shift and go to state 27
    PRINT           shift and go to state 45
    LENGTH          shift and go to state 16
    LBRACKET        shift and go to state 32
    VAR             shift and go to state 31

    factorVar                      shift and go to state 40
    expressionFunction             shift and go to state 39
    expressionTernaryCond          shift and go to state 26
    expressionComp                 shift and go to state 2
    expressionBoolOp               shift and go to state 18
    factorReg                      shift and go to state 3
    unaryExp                       shift and go to state 4
    memberAccess                   shift and go to state 17
    factorNumExp                   shift and go to state 38
    factorExp                      shift and go to state 5
    bool_atom                      shift and go to state 6
    expressionAssign               shift and go to state 29
    expression                     shift and go to state 92
    expressionVector               shift and go to state 15
    unaryExp2                      shift and go to state 42
    expressionVectorAt             shift and go to state 7
    aritExp                        shift and go to state 13

state 60

    (65) expressionFunction -> MULTIPLICACIONESCALAR LPAREN . expression COMMA expression RPAREN
    (66) expressionFunction -> MULTIPLICACIONESCALAR LPAREN . expression COMMA expression COMMA expression RPAREN
    (10) expression -> . expressionAssign
    (44) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (46) expressionAssign -> . expressionTernaryCond
    (60) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (61) expressionTernaryCond -> . expressionBoolOp
    (31) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (32) expressionBoolOp -> . expressionComp
    (34) expressionComp -> . expressionComp COMP aritExp
    (35) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (33) unaryExp -> . NOT unaryExp
    (36) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . memberAccess
    (20) unaryExp2 -> . factorExp
    (48) memberAccess -> . memberAccess DOT factorVar
    (49) memberAccess -> . factorExp DOT factorVar
    (21) factorExp -> . factorNumExp
    (22) factorExp -> . bool_atom
    (23) factorExp -> . expressionVectorAt
    (24) factorExp -> . factorReg
    (25) factorExp -> . LPAREN expression RPAREN
    (26) factorExp -> . expressionFunction
    (28) factorNumExp -> . NUMBER
    (29) bool_atom -> . TRUE
    (30) bool_atom -> . FALSE
    (40) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (41) expressionVectorAt -> . expressionVector
    (42) expressionVectorAt -> . factorVar
    (43) expressionVectorAt -> . memberAccess
    (47) factorReg -> . LBRACE reg_items RBRACE
    (65) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (66) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (67) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (68) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (69) expressionFunction -> . PRINT LPAREN expression RPAREN
    (70) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (37) expressionVector -> . LBRACKET vector_items RBRACKET
    (27) factorVar -> . VAR

    AO              shift and go to state 43
    DOUBLE_AO       shift and go to state 12
    NOT             shift and go to state 11
    STRING          shift and go to state 23
    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 44
    TRUE            shift and go to state 14
    FALSE           shift and go to state 30
    LBRACE          shift and go to state 52
    MULTIPLICACIONESCALAR shift and go to state 19
    CAPITALIZAR     shift and go to state 1
    COLINEALES      shift and go to state 27
    PRINT           shift and go to state 45
    LENGTH          shift and go to state 16
    LBRACKET        shift and go to state 32
    VAR             shift and go to state 31

    factorVar                      shift and go to state 40
    expressionFunction             shift and go to state 39
    expressionTernaryCond          shift and go to state 26
    expressionComp                 shift and go to state 2
    expressionBoolOp               shift and go to state 18
    factorReg                      shift and go to state 3
    unaryExp                       shift and go to state 4
    memberAccess                   shift and go to state 17
    factorNumExp                   shift and go to state 38
    factorExp                      shift and go to state 5
    bool_atom                      shift and go to state 6
    expressionAssign               shift and go to state 29
    expression                     shift and go to state 93
    expressionVector               shift and go to state 15
    unaryExp2                      shift and go to state 42
    expressionVectorAt             shift and go to state 7
    aritExp                        shift and go to state 13

state 61

    (62) while -> WHILE LPAREN . expression RPAREN singleStatement
    (10) expression -> . expressionAssign
    (44) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (46) expressionAssign -> . expressionTernaryCond
    (60) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (61) expressionTernaryCond -> . expressionBoolOp
    (31) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (32) expressionBoolOp -> . expressionComp
    (34) expressionComp -> . expressionComp COMP aritExp
    (35) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (33) unaryExp -> . NOT unaryExp
    (36) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . memberAccess
    (20) unaryExp2 -> . factorExp
    (48) memberAccess -> . memberAccess DOT factorVar
    (49) memberAccess -> . factorExp DOT factorVar
    (21) factorExp -> . factorNumExp
    (22) factorExp -> . bool_atom
    (23) factorExp -> . expressionVectorAt
    (24) factorExp -> . factorReg
    (25) factorExp -> . LPAREN expression RPAREN
    (26) factorExp -> . expressionFunction
    (28) factorNumExp -> . NUMBER
    (29) bool_atom -> . TRUE
    (30) bool_atom -> . FALSE
    (40) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (41) expressionVectorAt -> . expressionVector
    (42) expressionVectorAt -> . factorVar
    (43) expressionVectorAt -> . memberAccess
    (47) factorReg -> . LBRACE reg_items RBRACE
    (65) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (66) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (67) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (68) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (69) expressionFunction -> . PRINT LPAREN expression RPAREN
    (70) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (37) expressionVector -> . LBRACKET vector_items RBRACKET
    (27) factorVar -> . VAR

    AO              shift and go to state 43
    DOUBLE_AO       shift and go to state 12
    NOT             shift and go to state 11
    STRING          shift and go to state 23
    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 44
    TRUE            shift and go to state 14
    FALSE           shift and go to state 30
    LBRACE          shift and go to state 52
    MULTIPLICACIONESCALAR shift and go to state 19
    CAPITALIZAR     shift and go to state 1
    COLINEALES      shift and go to state 27
    PRINT           shift and go to state 45
    LENGTH          shift and go to state 16
    LBRACKET        shift and go to state 32
    VAR             shift and go to state 31

    factorVar                      shift and go to state 40
    expressionFunction             shift and go to state 39
    expressionTernaryCond          shift and go to state 26
    expressionComp                 shift and go to state 2
    expressionBoolOp               shift and go to state 18
    factorReg                      shift and go to state 3
    unaryExp                       shift and go to state 4
    memberAccess                   shift and go to state 17
    factorNumExp                   shift and go to state 38
    factorExp                      shift and go to state 5
    bool_atom                      shift and go to state 6
    expressionAssign               shift and go to state 29
    expression                     shift and go to state 94
    expressionVector               shift and go to state 15
    unaryExp2                      shift and go to state 42
    expressionVectorAt             shift and go to state 7
    aritExp                        shift and go to state 13

state 62

    (25) factorExp -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 95


state 63

    (44) expressionAssign -> expressionTernaryCond AOEQUAL . expressionAssign
    (44) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (46) expressionAssign -> . expressionTernaryCond
    (60) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (61) expressionTernaryCond -> . expressionBoolOp
    (31) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (32) expressionBoolOp -> . expressionComp
    (34) expressionComp -> . expressionComp COMP aritExp
    (35) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (33) unaryExp -> . NOT unaryExp
    (36) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . memberAccess
    (20) unaryExp2 -> . factorExp
    (48) memberAccess -> . memberAccess DOT factorVar
    (49) memberAccess -> . factorExp DOT factorVar
    (21) factorExp -> . factorNumExp
    (22) factorExp -> . bool_atom
    (23) factorExp -> . expressionVectorAt
    (24) factorExp -> . factorReg
    (25) factorExp -> . LPAREN expression RPAREN
    (26) factorExp -> . expressionFunction
    (28) factorNumExp -> . NUMBER
    (29) bool_atom -> . TRUE
    (30) bool_atom -> . FALSE
    (40) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (41) expressionVectorAt -> . expressionVector
    (42) expressionVectorAt -> . factorVar
    (43) expressionVectorAt -> . memberAccess
    (47) factorReg -> . LBRACE reg_items RBRACE
    (65) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (66) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (67) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (68) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (69) expressionFunction -> . PRINT LPAREN expression RPAREN
    (70) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (37) expressionVector -> . LBRACKET vector_items RBRACKET
    (27) factorVar -> . VAR

    AO              shift and go to state 43
    DOUBLE_AO       shift and go to state 12
    NOT             shift and go to state 11
    STRING          shift and go to state 23
    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 44
    TRUE            shift and go to state 14
    FALSE           shift and go to state 30
    LBRACE          shift and go to state 52
    MULTIPLICACIONESCALAR shift and go to state 19
    CAPITALIZAR     shift and go to state 1
    COLINEALES      shift and go to state 27
    PRINT           shift and go to state 45
    LENGTH          shift and go to state 16
    LBRACKET        shift and go to state 32
    VAR             shift and go to state 31

    factorVar                      shift and go to state 40
    expressionFunction             shift and go to state 39
    expressionTernaryCond          shift and go to state 26
    expressionComp                 shift and go to state 2
    expressionBoolOp               shift and go to state 18
    factorReg                      shift and go to state 3
    unaryExp                       shift and go to state 4
    memberAccess                   shift and go to state 17
    factorNumExp                   shift and go to state 38
    factorExp                      shift and go to state 5
    bool_atom                      shift and go to state 6
    expressionAssign               shift and go to state 96
    expressionVector               shift and go to state 15
    unaryExp2                      shift and go to state 42
    expressionVectorAt             shift and go to state 7
    aritExp                        shift and go to state 13

state 64

    (45) expressionAssign -> expressionTernaryCond EQUAL . expressionAssign
    (44) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (46) expressionAssign -> . expressionTernaryCond
    (60) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (61) expressionTernaryCond -> . expressionBoolOp
    (31) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (32) expressionBoolOp -> . expressionComp
    (34) expressionComp -> . expressionComp COMP aritExp
    (35) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (33) unaryExp -> . NOT unaryExp
    (36) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . memberAccess
    (20) unaryExp2 -> . factorExp
    (48) memberAccess -> . memberAccess DOT factorVar
    (49) memberAccess -> . factorExp DOT factorVar
    (21) factorExp -> . factorNumExp
    (22) factorExp -> . bool_atom
    (23) factorExp -> . expressionVectorAt
    (24) factorExp -> . factorReg
    (25) factorExp -> . LPAREN expression RPAREN
    (26) factorExp -> . expressionFunction
    (28) factorNumExp -> . NUMBER
    (29) bool_atom -> . TRUE
    (30) bool_atom -> . FALSE
    (40) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (41) expressionVectorAt -> . expressionVector
    (42) expressionVectorAt -> . factorVar
    (43) expressionVectorAt -> . memberAccess
    (47) factorReg -> . LBRACE reg_items RBRACE
    (65) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (66) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (67) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (68) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (69) expressionFunction -> . PRINT LPAREN expression RPAREN
    (70) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (37) expressionVector -> . LBRACKET vector_items RBRACKET
    (27) factorVar -> . VAR

    AO              shift and go to state 43
    DOUBLE_AO       shift and go to state 12
    NOT             shift and go to state 11
    STRING          shift and go to state 23
    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 44
    TRUE            shift and go to state 14
    FALSE           shift and go to state 30
    LBRACE          shift and go to state 52
    MULTIPLICACIONESCALAR shift and go to state 19
    CAPITALIZAR     shift and go to state 1
    COLINEALES      shift and go to state 27
    PRINT           shift and go to state 45
    LENGTH          shift and go to state 16
    LBRACKET        shift and go to state 32
    VAR             shift and go to state 31

    factorVar                      shift and go to state 40
    expressionFunction             shift and go to state 39
    expressionTernaryCond          shift and go to state 26
    expressionComp                 shift and go to state 2
    expressionBoolOp               shift and go to state 18
    factorReg                      shift and go to state 3
    unaryExp                       shift and go to state 4
    memberAccess                   shift and go to state 17
    factorNumExp                   shift and go to state 38
    factorExp                      shift and go to state 5
    bool_atom                      shift and go to state 6
    expressionAssign               shift and go to state 97
    expressionVector               shift and go to state 15
    unaryExp2                      shift and go to state 42
    expressionVectorAt             shift and go to state 7
    aritExp                        shift and go to state 13

state 65

    (68) expressionFunction -> COLINEALES LPAREN . expression COMMA expression RPAREN
    (10) expression -> . expressionAssign
    (44) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (46) expressionAssign -> . expressionTernaryCond
    (60) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (61) expressionTernaryCond -> . expressionBoolOp
    (31) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (32) expressionBoolOp -> . expressionComp
    (34) expressionComp -> . expressionComp COMP aritExp
    (35) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (33) unaryExp -> . NOT unaryExp
    (36) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . memberAccess
    (20) unaryExp2 -> . factorExp
    (48) memberAccess -> . memberAccess DOT factorVar
    (49) memberAccess -> . factorExp DOT factorVar
    (21) factorExp -> . factorNumExp
    (22) factorExp -> . bool_atom
    (23) factorExp -> . expressionVectorAt
    (24) factorExp -> . factorReg
    (25) factorExp -> . LPAREN expression RPAREN
    (26) factorExp -> . expressionFunction
    (28) factorNumExp -> . NUMBER
    (29) bool_atom -> . TRUE
    (30) bool_atom -> . FALSE
    (40) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (41) expressionVectorAt -> . expressionVector
    (42) expressionVectorAt -> . factorVar
    (43) expressionVectorAt -> . memberAccess
    (47) factorReg -> . LBRACE reg_items RBRACE
    (65) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (66) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (67) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (68) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (69) expressionFunction -> . PRINT LPAREN expression RPAREN
    (70) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (37) expressionVector -> . LBRACKET vector_items RBRACKET
    (27) factorVar -> . VAR

    AO              shift and go to state 43
    DOUBLE_AO       shift and go to state 12
    NOT             shift and go to state 11
    STRING          shift and go to state 23
    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 44
    TRUE            shift and go to state 14
    FALSE           shift and go to state 30
    LBRACE          shift and go to state 52
    MULTIPLICACIONESCALAR shift and go to state 19
    CAPITALIZAR     shift and go to state 1
    COLINEALES      shift and go to state 27
    PRINT           shift and go to state 45
    LENGTH          shift and go to state 16
    LBRACKET        shift and go to state 32
    VAR             shift and go to state 31

    factorVar                      shift and go to state 40
    expressionFunction             shift and go to state 39
    expressionTernaryCond          shift and go to state 26
    expressionComp                 shift and go to state 2
    expressionBoolOp               shift and go to state 18
    factorReg                      shift and go to state 3
    unaryExp                       shift and go to state 4
    memberAccess                   shift and go to state 17
    factorNumExp                   shift and go to state 38
    factorExp                      shift and go to state 5
    bool_atom                      shift and go to state 6
    expressionAssign               shift and go to state 29
    expression                     shift and go to state 98
    expressionVector               shift and go to state 15
    unaryExp2                      shift and go to state 42
    expressionVectorAt             shift and go to state 7
    aritExp                        shift and go to state 13

state 66

    (1) code -> statement code .

    RBRACE          reduce using rule 1 (code -> statement code .)
    $end            reduce using rule 1 (code -> statement code .)


state 67

    (38) vector_items -> expression . COMMA vector_items
    (39) vector_items -> expression .

    COMMA           shift and go to state 99
    RBRACKET        reduce using rule 39 (vector_items -> expression .)


state 68

    (37) expressionVector -> LBRACKET vector_items . RBRACKET

    RBRACKET        shift and go to state 100


state 69

    (2) code -> COMMENT code .

    RBRACE          reduce using rule 2 (code -> COMMENT code .)
    $end            reduce using rule 2 (code -> COMMENT code .)


state 70

    (47) factorReg -> LBRACE reg_items . RBRACE

    RBRACE          shift and go to state 101


state 71

    (54) block -> LBRACE code . RBRACE

    RBRACE          shift and go to state 102


state 72

    (50) reg_items -> reg_field . COMMA reg_items
    (51) reg_items -> reg_field .

    COMMA           shift and go to state 103
    RBRACE          reduce using rule 51 (reg_items -> reg_field .)


state 73

    (52) reg_field -> factorVar . COLON expression
    (42) expressionVectorAt -> factorVar .

    COLON           shift and go to state 104
    LBRACKET        reduce using rule 42 (expressionVectorAt -> factorVar .)
    DOT             reduce using rule 42 (expressionVectorAt -> factorVar .)
    DOUBLE_AO       reduce using rule 42 (expressionVectorAt -> factorVar .)
    AO              reduce using rule 42 (expressionVectorAt -> factorVar .)
    COMP            reduce using rule 42 (expressionVectorAt -> factorVar .)
    QUESTION        reduce using rule 42 (expressionVectorAt -> factorVar .)
    BOOL_OP         reduce using rule 42 (expressionVectorAt -> factorVar .)
    AOEQUAL         reduce using rule 42 (expressionVectorAt -> factorVar .)
    EQUAL           reduce using rule 42 (expressionVectorAt -> factorVar .)
    SEMICOLON       reduce using rule 42 (expressionVectorAt -> factorVar .)


state 74

    (56) singleStatement -> statement .

    WHILE           reduce using rule 56 (singleStatement -> statement .)
    COMMENT         reduce using rule 56 (singleStatement -> statement .)
    LBRACE          reduce using rule 56 (singleStatement -> statement .)
    IF              reduce using rule 56 (singleStatement -> statement .)
    FOR             reduce using rule 56 (singleStatement -> statement .)
    DO              reduce using rule 56 (singleStatement -> statement .)
    AO              reduce using rule 56 (singleStatement -> statement .)
    DOUBLE_AO       reduce using rule 56 (singleStatement -> statement .)
    NOT             reduce using rule 56 (singleStatement -> statement .)
    STRING          reduce using rule 56 (singleStatement -> statement .)
    LPAREN          reduce using rule 56 (singleStatement -> statement .)
    NUMBER          reduce using rule 56 (singleStatement -> statement .)
    TRUE            reduce using rule 56 (singleStatement -> statement .)
    FALSE           reduce using rule 56 (singleStatement -> statement .)
    MULTIPLICACIONESCALAR reduce using rule 56 (singleStatement -> statement .)
    CAPITALIZAR     reduce using rule 56 (singleStatement -> statement .)
    COLINEALES      reduce using rule 56 (singleStatement -> statement .)
    PRINT           reduce using rule 56 (singleStatement -> statement .)
    LENGTH          reduce using rule 56 (singleStatement -> statement .)
    LBRACKET        reduce using rule 56 (singleStatement -> statement .)
    VAR             reduce using rule 56 (singleStatement -> statement .)
    $end            reduce using rule 56 (singleStatement -> statement .)
    RBRACE          reduce using rule 56 (singleStatement -> statement .)
    ELSE            reduce using rule 56 (singleStatement -> statement .)


state 75

    (55) singleStatement -> COMMENT . singleStatement
    (55) singleStatement -> . COMMENT singleStatement
    (56) singleStatement -> . statement
    (4) statement -> . expression SEMICOLON
    (5) statement -> . block
    (6) statement -> . if
    (7) statement -> . while
    (8) statement -> . for
    (9) statement -> . do_while
    (10) expression -> . expressionAssign
    (54) block -> . LBRACE code RBRACE
    (57) if -> . IF LPAREN expression RPAREN singleStatement else
    (62) while -> . WHILE LPAREN expression RPAREN singleStatement
    (63) for -> . FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement
    (64) do_while -> . DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON
    (44) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (46) expressionAssign -> . expressionTernaryCond
    (60) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (61) expressionTernaryCond -> . expressionBoolOp
    (31) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (32) expressionBoolOp -> . expressionComp
    (34) expressionComp -> . expressionComp COMP aritExp
    (35) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (33) unaryExp -> . NOT unaryExp
    (36) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . memberAccess
    (20) unaryExp2 -> . factorExp
    (48) memberAccess -> . memberAccess DOT factorVar
    (49) memberAccess -> . factorExp DOT factorVar
    (21) factorExp -> . factorNumExp
    (22) factorExp -> . bool_atom
    (23) factorExp -> . expressionVectorAt
    (24) factorExp -> . factorReg
    (25) factorExp -> . LPAREN expression RPAREN
    (26) factorExp -> . expressionFunction
    (28) factorNumExp -> . NUMBER
    (29) bool_atom -> . TRUE
    (30) bool_atom -> . FALSE
    (40) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (41) expressionVectorAt -> . expressionVector
    (42) expressionVectorAt -> . factorVar
    (43) expressionVectorAt -> . memberAccess
    (47) factorReg -> . LBRACE reg_items RBRACE
    (65) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (66) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (67) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (68) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (69) expressionFunction -> . PRINT LPAREN expression RPAREN
    (70) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (37) expressionVector -> . LBRACKET vector_items RBRACKET
    (27) factorVar -> . VAR

    COMMENT         shift and go to state 75
    LBRACE          shift and go to state 36
    IF              shift and go to state 41
    WHILE           shift and go to state 22
    FOR             shift and go to state 10
    DO              shift and go to state 37
    AO              shift and go to state 43
    DOUBLE_AO       shift and go to state 12
    NOT             shift and go to state 11
    STRING          shift and go to state 23
    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 44
    TRUE            shift and go to state 14
    FALSE           shift and go to state 30
    MULTIPLICACIONESCALAR shift and go to state 19
    CAPITALIZAR     shift and go to state 1
    COLINEALES      shift and go to state 27
    PRINT           shift and go to state 45
    LENGTH          shift and go to state 16
    LBRACKET        shift and go to state 32
    VAR             shift and go to state 31

    if                             shift and go to state 25
    expressionTernaryCond          shift and go to state 26
    expressionComp                 shift and go to state 2
    memberAccess                   shift and go to state 17
    factorReg                      shift and go to state 3
    statement                      shift and go to state 74
    factorExp                      shift and go to state 5
    bool_atom                      shift and go to state 6
    expressionAssign               shift and go to state 29
    expression                     shift and go to state 8
    do_while                       shift and go to state 9
    aritExp                        shift and go to state 13
    expressionFunction             shift and go to state 39
    for                            shift and go to state 34
    expressionBoolOp               shift and go to state 18
    factorNumExp                   shift and go to state 38
    expressionVectorAt             shift and go to state 7
    expressionVector               shift and go to state 15
    block                          shift and go to state 21
    factorVar                      shift and go to state 40
    while                          shift and go to state 20
    unaryExp2                      shift and go to state 42
    unaryExp                       shift and go to state 4
    singleStatement                shift and go to state 105

state 76

    (64) do_while -> DO singleStatement . WHILE LPAREN expression RPAREN SEMICOLON

    WHILE           shift and go to state 106


state 77

    (57) if -> IF LPAREN . expression RPAREN singleStatement else
    (10) expression -> . expressionAssign
    (44) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (46) expressionAssign -> . expressionTernaryCond
    (60) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (61) expressionTernaryCond -> . expressionBoolOp
    (31) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (32) expressionBoolOp -> . expressionComp
    (34) expressionComp -> . expressionComp COMP aritExp
    (35) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (33) unaryExp -> . NOT unaryExp
    (36) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . memberAccess
    (20) unaryExp2 -> . factorExp
    (48) memberAccess -> . memberAccess DOT factorVar
    (49) memberAccess -> . factorExp DOT factorVar
    (21) factorExp -> . factorNumExp
    (22) factorExp -> . bool_atom
    (23) factorExp -> . expressionVectorAt
    (24) factorExp -> . factorReg
    (25) factorExp -> . LPAREN expression RPAREN
    (26) factorExp -> . expressionFunction
    (28) factorNumExp -> . NUMBER
    (29) bool_atom -> . TRUE
    (30) bool_atom -> . FALSE
    (40) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (41) expressionVectorAt -> . expressionVector
    (42) expressionVectorAt -> . factorVar
    (43) expressionVectorAt -> . memberAccess
    (47) factorReg -> . LBRACE reg_items RBRACE
    (65) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (66) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (67) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (68) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (69) expressionFunction -> . PRINT LPAREN expression RPAREN
    (70) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (37) expressionVector -> . LBRACKET vector_items RBRACKET
    (27) factorVar -> . VAR

    AO              shift and go to state 43
    DOUBLE_AO       shift and go to state 12
    NOT             shift and go to state 11
    STRING          shift and go to state 23
    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 44
    TRUE            shift and go to state 14
    FALSE           shift and go to state 30
    LBRACE          shift and go to state 52
    MULTIPLICACIONESCALAR shift and go to state 19
    CAPITALIZAR     shift and go to state 1
    COLINEALES      shift and go to state 27
    PRINT           shift and go to state 45
    LENGTH          shift and go to state 16
    LBRACKET        shift and go to state 32
    VAR             shift and go to state 31

    factorVar                      shift and go to state 40
    expressionFunction             shift and go to state 39
    expressionTernaryCond          shift and go to state 26
    expressionComp                 shift and go to state 2
    expressionBoolOp               shift and go to state 18
    factorReg                      shift and go to state 3
    unaryExp                       shift and go to state 4
    memberAccess                   shift and go to state 17
    factorNumExp                   shift and go to state 38
    factorExp                      shift and go to state 5
    bool_atom                      shift and go to state 6
    expressionAssign               shift and go to state 29
    expression                     shift and go to state 107
    expressionVector               shift and go to state 15
    unaryExp2                      shift and go to state 42
    expressionVectorAt             shift and go to state 7
    aritExp                        shift and go to state 13

state 78

    (18) unaryExp2 -> unaryExp2 DOUBLE_AO .

    DOUBLE_AO       reduce using rule 18 (unaryExp2 -> unaryExp2 DOUBLE_AO .)
    AO              reduce using rule 18 (unaryExp2 -> unaryExp2 DOUBLE_AO .)
    COMP            reduce using rule 18 (unaryExp2 -> unaryExp2 DOUBLE_AO .)
    QUESTION        reduce using rule 18 (unaryExp2 -> unaryExp2 DOUBLE_AO .)
    BOOL_OP         reduce using rule 18 (unaryExp2 -> unaryExp2 DOUBLE_AO .)
    AOEQUAL         reduce using rule 18 (unaryExp2 -> unaryExp2 DOUBLE_AO .)
    EQUAL           reduce using rule 18 (unaryExp2 -> unaryExp2 DOUBLE_AO .)
    SEMICOLON       reduce using rule 18 (unaryExp2 -> unaryExp2 DOUBLE_AO .)
    RPAREN          reduce using rule 18 (unaryExp2 -> unaryExp2 DOUBLE_AO .)
    COMMA           reduce using rule 18 (unaryExp2 -> unaryExp2 DOUBLE_AO .)
    RBRACKET        reduce using rule 18 (unaryExp2 -> unaryExp2 DOUBLE_AO .)
    COLON           reduce using rule 18 (unaryExp2 -> unaryExp2 DOUBLE_AO .)
    RBRACE          reduce using rule 18 (unaryExp2 -> unaryExp2 DOUBLE_AO .)


state 79

    (15) unaryExp -> AO unaryExp .

    AO              reduce using rule 15 (unaryExp -> AO unaryExp .)
    COMP            reduce using rule 15 (unaryExp -> AO unaryExp .)
    QUESTION        reduce using rule 15 (unaryExp -> AO unaryExp .)
    BOOL_OP         reduce using rule 15 (unaryExp -> AO unaryExp .)
    AOEQUAL         reduce using rule 15 (unaryExp -> AO unaryExp .)
    EQUAL           reduce using rule 15 (unaryExp -> AO unaryExp .)
    RPAREN          reduce using rule 15 (unaryExp -> AO unaryExp .)
    SEMICOLON       reduce using rule 15 (unaryExp -> AO unaryExp .)
    COMMA           reduce using rule 15 (unaryExp -> AO unaryExp .)
    RBRACKET        reduce using rule 15 (unaryExp -> AO unaryExp .)
    COLON           reduce using rule 15 (unaryExp -> AO unaryExp .)
    RBRACE          reduce using rule 15 (unaryExp -> AO unaryExp .)


state 80

    (69) expressionFunction -> PRINT LPAREN . expression RPAREN
    (10) expression -> . expressionAssign
    (44) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (46) expressionAssign -> . expressionTernaryCond
    (60) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (61) expressionTernaryCond -> . expressionBoolOp
    (31) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (32) expressionBoolOp -> . expressionComp
    (34) expressionComp -> . expressionComp COMP aritExp
    (35) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (33) unaryExp -> . NOT unaryExp
    (36) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . memberAccess
    (20) unaryExp2 -> . factorExp
    (48) memberAccess -> . memberAccess DOT factorVar
    (49) memberAccess -> . factorExp DOT factorVar
    (21) factorExp -> . factorNumExp
    (22) factorExp -> . bool_atom
    (23) factorExp -> . expressionVectorAt
    (24) factorExp -> . factorReg
    (25) factorExp -> . LPAREN expression RPAREN
    (26) factorExp -> . expressionFunction
    (28) factorNumExp -> . NUMBER
    (29) bool_atom -> . TRUE
    (30) bool_atom -> . FALSE
    (40) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (41) expressionVectorAt -> . expressionVector
    (42) expressionVectorAt -> . factorVar
    (43) expressionVectorAt -> . memberAccess
    (47) factorReg -> . LBRACE reg_items RBRACE
    (65) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (66) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (67) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (68) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (69) expressionFunction -> . PRINT LPAREN expression RPAREN
    (70) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (37) expressionVector -> . LBRACKET vector_items RBRACKET
    (27) factorVar -> . VAR

    AO              shift and go to state 43
    DOUBLE_AO       shift and go to state 12
    NOT             shift and go to state 11
    STRING          shift and go to state 23
    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 44
    TRUE            shift and go to state 14
    FALSE           shift and go to state 30
    LBRACE          shift and go to state 52
    MULTIPLICACIONESCALAR shift and go to state 19
    CAPITALIZAR     shift and go to state 1
    COLINEALES      shift and go to state 27
    PRINT           shift and go to state 45
    LENGTH          shift and go to state 16
    LBRACKET        shift and go to state 32
    VAR             shift and go to state 31

    factorVar                      shift and go to state 40
    expressionFunction             shift and go to state 39
    expressionTernaryCond          shift and go to state 26
    expressionComp                 shift and go to state 2
    expressionBoolOp               shift and go to state 18
    factorReg                      shift and go to state 3
    unaryExp                       shift and go to state 4
    memberAccess                   shift and go to state 17
    factorNumExp                   shift and go to state 38
    factorExp                      shift and go to state 5
    bool_atom                      shift and go to state 6
    expressionAssign               shift and go to state 29
    expression                     shift and go to state 108
    expressionVector               shift and go to state 15
    unaryExp2                      shift and go to state 42
    expressionVectorAt             shift and go to state 7
    aritExp                        shift and go to state 13

state 81

    (67) expressionFunction -> CAPITALIZAR LPAREN expression . RPAREN

    RPAREN          shift and go to state 109


state 82

    (34) expressionComp -> expressionComp COMP aritExp .
    (13) aritExp -> aritExp . AO unaryExp

    COMP            reduce using rule 34 (expressionComp -> expressionComp COMP aritExp .)
    QUESTION        reduce using rule 34 (expressionComp -> expressionComp COMP aritExp .)
    BOOL_OP         reduce using rule 34 (expressionComp -> expressionComp COMP aritExp .)
    AOEQUAL         reduce using rule 34 (expressionComp -> expressionComp COMP aritExp .)
    EQUAL           reduce using rule 34 (expressionComp -> expressionComp COMP aritExp .)
    RPAREN          reduce using rule 34 (expressionComp -> expressionComp COMP aritExp .)
    COMMA           reduce using rule 34 (expressionComp -> expressionComp COMP aritExp .)
    RBRACE          reduce using rule 34 (expressionComp -> expressionComp COMP aritExp .)
    SEMICOLON       reduce using rule 34 (expressionComp -> expressionComp COMP aritExp .)
    RBRACKET        reduce using rule 34 (expressionComp -> expressionComp COMP aritExp .)
    COLON           reduce using rule 34 (expressionComp -> expressionComp COMP aritExp .)
    AO              shift and go to state 55


state 83

    (49) memberAccess -> factorExp DOT factorVar .

    DOT             reduce using rule 49 (memberAccess -> factorExp DOT factorVar .)
    DOUBLE_AO       reduce using rule 49 (memberAccess -> factorExp DOT factorVar .)
    AO              reduce using rule 49 (memberAccess -> factorExp DOT factorVar .)
    COMP            reduce using rule 49 (memberAccess -> factorExp DOT factorVar .)
    QUESTION        reduce using rule 49 (memberAccess -> factorExp DOT factorVar .)
    BOOL_OP         reduce using rule 49 (memberAccess -> factorExp DOT factorVar .)
    AOEQUAL         reduce using rule 49 (memberAccess -> factorExp DOT factorVar .)
    EQUAL           reduce using rule 49 (memberAccess -> factorExp DOT factorVar .)
    RPAREN          reduce using rule 49 (memberAccess -> factorExp DOT factorVar .)
    COMMA           reduce using rule 49 (memberAccess -> factorExp DOT factorVar .)
    LBRACKET        reduce using rule 49 (memberAccess -> factorExp DOT factorVar .)
    RBRACKET        reduce using rule 49 (memberAccess -> factorExp DOT factorVar .)
    SEMICOLON       reduce using rule 49 (memberAccess -> factorExp DOT factorVar .)
    COLON           reduce using rule 49 (memberAccess -> factorExp DOT factorVar .)
    RBRACE          reduce using rule 49 (memberAccess -> factorExp DOT factorVar .)


state 84

    (40) expressionVectorAt -> expressionVectorAt LBRACKET expression . RBRACKET

    RBRACKET        shift and go to state 110


state 85

    (11) optional_expr -> expression .

    RPAREN          reduce using rule 11 (optional_expr -> expression .)
    SEMICOLON       reduce using rule 11 (optional_expr -> expression .)


state 86

    (63) for -> FOR LPAREN optional_expr . SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement

    SEMICOLON       shift and go to state 111


state 87

    (52) reg_field -> factorVar . COLON expression

    COLON           shift and go to state 104


state 88

    (13) aritExp -> aritExp AO unaryExp .

    AO              reduce using rule 13 (aritExp -> aritExp AO unaryExp .)
    COMP            reduce using rule 13 (aritExp -> aritExp AO unaryExp .)
    QUESTION        reduce using rule 13 (aritExp -> aritExp AO unaryExp .)
    BOOL_OP         reduce using rule 13 (aritExp -> aritExp AO unaryExp .)
    AOEQUAL         reduce using rule 13 (aritExp -> aritExp AO unaryExp .)
    EQUAL           reduce using rule 13 (aritExp -> aritExp AO unaryExp .)
    SEMICOLON       reduce using rule 13 (aritExp -> aritExp AO unaryExp .)
    RPAREN          reduce using rule 13 (aritExp -> aritExp AO unaryExp .)
    COMMA           reduce using rule 13 (aritExp -> aritExp AO unaryExp .)
    RBRACKET        reduce using rule 13 (aritExp -> aritExp AO unaryExp .)
    COLON           reduce using rule 13 (aritExp -> aritExp AO unaryExp .)
    RBRACE          reduce using rule 13 (aritExp -> aritExp AO unaryExp .)


state 89

    (70) expressionFunction -> LENGTH LPAREN expression . RPAREN

    RPAREN          shift and go to state 112


state 90

    (48) memberAccess -> memberAccess DOT factorVar .

    DOT             reduce using rule 48 (memberAccess -> memberAccess DOT factorVar .)
    DOUBLE_AO       reduce using rule 48 (memberAccess -> memberAccess DOT factorVar .)
    AO              reduce using rule 48 (memberAccess -> memberAccess DOT factorVar .)
    COMP            reduce using rule 48 (memberAccess -> memberAccess DOT factorVar .)
    QUESTION        reduce using rule 48 (memberAccess -> memberAccess DOT factorVar .)
    BOOL_OP         reduce using rule 48 (memberAccess -> memberAccess DOT factorVar .)
    AOEQUAL         reduce using rule 48 (memberAccess -> memberAccess DOT factorVar .)
    EQUAL           reduce using rule 48 (memberAccess -> memberAccess DOT factorVar .)
    RPAREN          reduce using rule 48 (memberAccess -> memberAccess DOT factorVar .)
    COMMA           reduce using rule 48 (memberAccess -> memberAccess DOT factorVar .)
    LBRACKET        reduce using rule 48 (memberAccess -> memberAccess DOT factorVar .)
    RBRACKET        reduce using rule 48 (memberAccess -> memberAccess DOT factorVar .)
    SEMICOLON       reduce using rule 48 (memberAccess -> memberAccess DOT factorVar .)
    COLON           reduce using rule 48 (memberAccess -> memberAccess DOT factorVar .)
    RBRACE          reduce using rule 48 (memberAccess -> memberAccess DOT factorVar .)


state 91

    (31) expressionBoolOp -> expressionBoolOp BOOL_OP expressionComp .
    (34) expressionComp -> expressionComp . COMP aritExp

    QUESTION        reduce using rule 31 (expressionBoolOp -> expressionBoolOp BOOL_OP expressionComp .)
    BOOL_OP         reduce using rule 31 (expressionBoolOp -> expressionBoolOp BOOL_OP expressionComp .)
    AOEQUAL         reduce using rule 31 (expressionBoolOp -> expressionBoolOp BOOL_OP expressionComp .)
    EQUAL           reduce using rule 31 (expressionBoolOp -> expressionBoolOp BOOL_OP expressionComp .)
    RPAREN          reduce using rule 31 (expressionBoolOp -> expressionBoolOp BOOL_OP expressionComp .)
    SEMICOLON       reduce using rule 31 (expressionBoolOp -> expressionBoolOp BOOL_OP expressionComp .)
    COMMA           reduce using rule 31 (expressionBoolOp -> expressionBoolOp BOOL_OP expressionComp .)
    RBRACKET        reduce using rule 31 (expressionBoolOp -> expressionBoolOp BOOL_OP expressionComp .)
    COLON           reduce using rule 31 (expressionBoolOp -> expressionBoolOp BOOL_OP expressionComp .)
    RBRACE          reduce using rule 31 (expressionBoolOp -> expressionBoolOp BOOL_OP expressionComp .)
    COMP            shift and go to state 47


state 92

    (60) expressionTernaryCond -> expressionBoolOp QUESTION expression . COLON expression

    COLON           shift and go to state 113


state 93

    (65) expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression . COMMA expression RPAREN
    (66) expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression . COMMA expression COMMA expression RPAREN

    COMMA           shift and go to state 114


state 94

    (62) while -> WHILE LPAREN expression . RPAREN singleStatement

    RPAREN          shift and go to state 115


state 95

    (25) factorExp -> LPAREN expression RPAREN .

    DOT             reduce using rule 25 (factorExp -> LPAREN expression RPAREN .)
    DOUBLE_AO       reduce using rule 25 (factorExp -> LPAREN expression RPAREN .)
    AO              reduce using rule 25 (factorExp -> LPAREN expression RPAREN .)
    COMP            reduce using rule 25 (factorExp -> LPAREN expression RPAREN .)
    QUESTION        reduce using rule 25 (factorExp -> LPAREN expression RPAREN .)
    BOOL_OP         reduce using rule 25 (factorExp -> LPAREN expression RPAREN .)
    AOEQUAL         reduce using rule 25 (factorExp -> LPAREN expression RPAREN .)
    EQUAL           reduce using rule 25 (factorExp -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 25 (factorExp -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 25 (factorExp -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 25 (factorExp -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 25 (factorExp -> LPAREN expression RPAREN .)
    COLON           reduce using rule 25 (factorExp -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 25 (factorExp -> LPAREN expression RPAREN .)


state 96

    (44) expressionAssign -> expressionTernaryCond AOEQUAL expressionAssign .

    SEMICOLON       reduce using rule 44 (expressionAssign -> expressionTernaryCond AOEQUAL expressionAssign .)
    COMMA           reduce using rule 44 (expressionAssign -> expressionTernaryCond AOEQUAL expressionAssign .)
    RPAREN          reduce using rule 44 (expressionAssign -> expressionTernaryCond AOEQUAL expressionAssign .)
    RBRACKET        reduce using rule 44 (expressionAssign -> expressionTernaryCond AOEQUAL expressionAssign .)
    RBRACE          reduce using rule 44 (expressionAssign -> expressionTernaryCond AOEQUAL expressionAssign .)
    AOEQUAL         reduce using rule 44 (expressionAssign -> expressionTernaryCond AOEQUAL expressionAssign .)
    EQUAL           reduce using rule 44 (expressionAssign -> expressionTernaryCond AOEQUAL expressionAssign .)
    COLON           reduce using rule 44 (expressionAssign -> expressionTernaryCond AOEQUAL expressionAssign .)


state 97

    (45) expressionAssign -> expressionTernaryCond EQUAL expressionAssign .

    SEMICOLON       reduce using rule 45 (expressionAssign -> expressionTernaryCond EQUAL expressionAssign .)
    COMMA           reduce using rule 45 (expressionAssign -> expressionTernaryCond EQUAL expressionAssign .)
    RPAREN          reduce using rule 45 (expressionAssign -> expressionTernaryCond EQUAL expressionAssign .)
    RBRACKET        reduce using rule 45 (expressionAssign -> expressionTernaryCond EQUAL expressionAssign .)
    RBRACE          reduce using rule 45 (expressionAssign -> expressionTernaryCond EQUAL expressionAssign .)
    AOEQUAL         reduce using rule 45 (expressionAssign -> expressionTernaryCond EQUAL expressionAssign .)
    EQUAL           reduce using rule 45 (expressionAssign -> expressionTernaryCond EQUAL expressionAssign .)
    COLON           reduce using rule 45 (expressionAssign -> expressionTernaryCond EQUAL expressionAssign .)


state 98

    (68) expressionFunction -> COLINEALES LPAREN expression . COMMA expression RPAREN

    COMMA           shift and go to state 116


state 99

    (38) vector_items -> expression COMMA . vector_items
    (38) vector_items -> . expression COMMA vector_items
    (39) vector_items -> . expression
    (10) expression -> . expressionAssign
    (44) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (46) expressionAssign -> . expressionTernaryCond
    (60) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (61) expressionTernaryCond -> . expressionBoolOp
    (31) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (32) expressionBoolOp -> . expressionComp
    (34) expressionComp -> . expressionComp COMP aritExp
    (35) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (33) unaryExp -> . NOT unaryExp
    (36) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . memberAccess
    (20) unaryExp2 -> . factorExp
    (48) memberAccess -> . memberAccess DOT factorVar
    (49) memberAccess -> . factorExp DOT factorVar
    (21) factorExp -> . factorNumExp
    (22) factorExp -> . bool_atom
    (23) factorExp -> . expressionVectorAt
    (24) factorExp -> . factorReg
    (25) factorExp -> . LPAREN expression RPAREN
    (26) factorExp -> . expressionFunction
    (28) factorNumExp -> . NUMBER
    (29) bool_atom -> . TRUE
    (30) bool_atom -> . FALSE
    (40) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (41) expressionVectorAt -> . expressionVector
    (42) expressionVectorAt -> . factorVar
    (43) expressionVectorAt -> . memberAccess
    (47) factorReg -> . LBRACE reg_items RBRACE
    (65) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (66) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (67) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (68) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (69) expressionFunction -> . PRINT LPAREN expression RPAREN
    (70) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (37) expressionVector -> . LBRACKET vector_items RBRACKET
    (27) factorVar -> . VAR

    AO              shift and go to state 43
    DOUBLE_AO       shift and go to state 12
    NOT             shift and go to state 11
    STRING          shift and go to state 23
    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 44
    TRUE            shift and go to state 14
    FALSE           shift and go to state 30
    LBRACE          shift and go to state 52
    MULTIPLICACIONESCALAR shift and go to state 19
    CAPITALIZAR     shift and go to state 1
    COLINEALES      shift and go to state 27
    PRINT           shift and go to state 45
    LENGTH          shift and go to state 16
    LBRACKET        shift and go to state 32
    VAR             shift and go to state 31

    factorVar                      shift and go to state 40
    expressionFunction             shift and go to state 39
    expressionTernaryCond          shift and go to state 26
    expressionComp                 shift and go to state 2
    expressionBoolOp               shift and go to state 18
    factorReg                      shift and go to state 3
    unaryExp                       shift and go to state 4
    memberAccess                   shift and go to state 17
    factorNumExp                   shift and go to state 38
    factorExp                      shift and go to state 5
    bool_atom                      shift and go to state 6
    vector_items                   shift and go to state 117
    expressionAssign               shift and go to state 29
    expression                     shift and go to state 67
    expressionVector               shift and go to state 15
    unaryExp2                      shift and go to state 42
    expressionVectorAt             shift and go to state 7
    aritExp                        shift and go to state 13

state 100

    (37) expressionVector -> LBRACKET vector_items RBRACKET .

    LBRACKET        reduce using rule 37 (expressionVector -> LBRACKET vector_items RBRACKET .)
    DOT             reduce using rule 37 (expressionVector -> LBRACKET vector_items RBRACKET .)
    DOUBLE_AO       reduce using rule 37 (expressionVector -> LBRACKET vector_items RBRACKET .)
    AO              reduce using rule 37 (expressionVector -> LBRACKET vector_items RBRACKET .)
    COMP            reduce using rule 37 (expressionVector -> LBRACKET vector_items RBRACKET .)
    QUESTION        reduce using rule 37 (expressionVector -> LBRACKET vector_items RBRACKET .)
    BOOL_OP         reduce using rule 37 (expressionVector -> LBRACKET vector_items RBRACKET .)
    AOEQUAL         reduce using rule 37 (expressionVector -> LBRACKET vector_items RBRACKET .)
    EQUAL           reduce using rule 37 (expressionVector -> LBRACKET vector_items RBRACKET .)
    SEMICOLON       reduce using rule 37 (expressionVector -> LBRACKET vector_items RBRACKET .)
    COLON           reduce using rule 37 (expressionVector -> LBRACKET vector_items RBRACKET .)
    RPAREN          reduce using rule 37 (expressionVector -> LBRACKET vector_items RBRACKET .)
    RBRACKET        reduce using rule 37 (expressionVector -> LBRACKET vector_items RBRACKET .)
    COMMA           reduce using rule 37 (expressionVector -> LBRACKET vector_items RBRACKET .)
    RBRACE          reduce using rule 37 (expressionVector -> LBRACKET vector_items RBRACKET .)


state 101

    (47) factorReg -> LBRACE reg_items RBRACE .

    DOT             reduce using rule 47 (factorReg -> LBRACE reg_items RBRACE .)
    DOUBLE_AO       reduce using rule 47 (factorReg -> LBRACE reg_items RBRACE .)
    AO              reduce using rule 47 (factorReg -> LBRACE reg_items RBRACE .)
    COMP            reduce using rule 47 (factorReg -> LBRACE reg_items RBRACE .)
    QUESTION        reduce using rule 47 (factorReg -> LBRACE reg_items RBRACE .)
    BOOL_OP         reduce using rule 47 (factorReg -> LBRACE reg_items RBRACE .)
    AOEQUAL         reduce using rule 47 (factorReg -> LBRACE reg_items RBRACE .)
    EQUAL           reduce using rule 47 (factorReg -> LBRACE reg_items RBRACE .)
    SEMICOLON       reduce using rule 47 (factorReg -> LBRACE reg_items RBRACE .)
    RPAREN          reduce using rule 47 (factorReg -> LBRACE reg_items RBRACE .)
    COMMA           reduce using rule 47 (factorReg -> LBRACE reg_items RBRACE .)
    RBRACKET        reduce using rule 47 (factorReg -> LBRACE reg_items RBRACE .)
    COLON           reduce using rule 47 (factorReg -> LBRACE reg_items RBRACE .)
    RBRACE          reduce using rule 47 (factorReg -> LBRACE reg_items RBRACE .)


state 102

    (54) block -> LBRACE code RBRACE .

    COMMENT         reduce using rule 54 (block -> LBRACE code RBRACE .)
    LBRACE          reduce using rule 54 (block -> LBRACE code RBRACE .)
    IF              reduce using rule 54 (block -> LBRACE code RBRACE .)
    WHILE           reduce using rule 54 (block -> LBRACE code RBRACE .)
    FOR             reduce using rule 54 (block -> LBRACE code RBRACE .)
    DO              reduce using rule 54 (block -> LBRACE code RBRACE .)
    AO              reduce using rule 54 (block -> LBRACE code RBRACE .)
    DOUBLE_AO       reduce using rule 54 (block -> LBRACE code RBRACE .)
    NOT             reduce using rule 54 (block -> LBRACE code RBRACE .)
    STRING          reduce using rule 54 (block -> LBRACE code RBRACE .)
    LPAREN          reduce using rule 54 (block -> LBRACE code RBRACE .)
    NUMBER          reduce using rule 54 (block -> LBRACE code RBRACE .)
    TRUE            reduce using rule 54 (block -> LBRACE code RBRACE .)
    FALSE           reduce using rule 54 (block -> LBRACE code RBRACE .)
    MULTIPLICACIONESCALAR reduce using rule 54 (block -> LBRACE code RBRACE .)
    CAPITALIZAR     reduce using rule 54 (block -> LBRACE code RBRACE .)
    COLINEALES      reduce using rule 54 (block -> LBRACE code RBRACE .)
    PRINT           reduce using rule 54 (block -> LBRACE code RBRACE .)
    LENGTH          reduce using rule 54 (block -> LBRACE code RBRACE .)
    LBRACKET        reduce using rule 54 (block -> LBRACE code RBRACE .)
    VAR             reduce using rule 54 (block -> LBRACE code RBRACE .)
    $end            reduce using rule 54 (block -> LBRACE code RBRACE .)
    RBRACE          reduce using rule 54 (block -> LBRACE code RBRACE .)
    ELSE            reduce using rule 54 (block -> LBRACE code RBRACE .)


state 103

    (50) reg_items -> reg_field COMMA . reg_items
    (50) reg_items -> . reg_field COMMA reg_items
    (51) reg_items -> . reg_field
    (52) reg_field -> . factorVar COLON expression
    (27) factorVar -> . VAR

    VAR             shift and go to state 31

    factorVar                      shift and go to state 87
    reg_items                      shift and go to state 118
    reg_field                      shift and go to state 72

state 104

    (52) reg_field -> factorVar COLON . expression
    (10) expression -> . expressionAssign
    (44) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (46) expressionAssign -> . expressionTernaryCond
    (60) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (61) expressionTernaryCond -> . expressionBoolOp
    (31) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (32) expressionBoolOp -> . expressionComp
    (34) expressionComp -> . expressionComp COMP aritExp
    (35) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (33) unaryExp -> . NOT unaryExp
    (36) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . memberAccess
    (20) unaryExp2 -> . factorExp
    (48) memberAccess -> . memberAccess DOT factorVar
    (49) memberAccess -> . factorExp DOT factorVar
    (21) factorExp -> . factorNumExp
    (22) factorExp -> . bool_atom
    (23) factorExp -> . expressionVectorAt
    (24) factorExp -> . factorReg
    (25) factorExp -> . LPAREN expression RPAREN
    (26) factorExp -> . expressionFunction
    (28) factorNumExp -> . NUMBER
    (29) bool_atom -> . TRUE
    (30) bool_atom -> . FALSE
    (40) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (41) expressionVectorAt -> . expressionVector
    (42) expressionVectorAt -> . factorVar
    (43) expressionVectorAt -> . memberAccess
    (47) factorReg -> . LBRACE reg_items RBRACE
    (65) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (66) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (67) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (68) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (69) expressionFunction -> . PRINT LPAREN expression RPAREN
    (70) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (37) expressionVector -> . LBRACKET vector_items RBRACKET
    (27) factorVar -> . VAR

    AO              shift and go to state 43
    DOUBLE_AO       shift and go to state 12
    NOT             shift and go to state 11
    STRING          shift and go to state 23
    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 44
    TRUE            shift and go to state 14
    FALSE           shift and go to state 30
    LBRACE          shift and go to state 52
    MULTIPLICACIONESCALAR shift and go to state 19
    CAPITALIZAR     shift and go to state 1
    COLINEALES      shift and go to state 27
    PRINT           shift and go to state 45
    LENGTH          shift and go to state 16
    LBRACKET        shift and go to state 32
    VAR             shift and go to state 31

    expression                     shift and go to state 119
    expressionFunction             shift and go to state 39
    expressionTernaryCond          shift and go to state 26
    expressionComp                 shift and go to state 2
    expressionBoolOp               shift and go to state 18
    factorReg                      shift and go to state 3
    unaryExp                       shift and go to state 4
    memberAccess                   shift and go to state 17
    factorNumExp                   shift and go to state 38
    factorExp                      shift and go to state 5
    bool_atom                      shift and go to state 6
    expressionAssign               shift and go to state 29
    factorVar                      shift and go to state 40
    expressionVector               shift and go to state 15
    unaryExp2                      shift and go to state 42
    expressionVectorAt             shift and go to state 7
    aritExp                        shift and go to state 13

state 105

    (55) singleStatement -> COMMENT singleStatement .

    WHILE           reduce using rule 55 (singleStatement -> COMMENT singleStatement .)
    COMMENT         reduce using rule 55 (singleStatement -> COMMENT singleStatement .)
    LBRACE          reduce using rule 55 (singleStatement -> COMMENT singleStatement .)
    IF              reduce using rule 55 (singleStatement -> COMMENT singleStatement .)
    FOR             reduce using rule 55 (singleStatement -> COMMENT singleStatement .)
    DO              reduce using rule 55 (singleStatement -> COMMENT singleStatement .)
    AO              reduce using rule 55 (singleStatement -> COMMENT singleStatement .)
    DOUBLE_AO       reduce using rule 55 (singleStatement -> COMMENT singleStatement .)
    NOT             reduce using rule 55 (singleStatement -> COMMENT singleStatement .)
    STRING          reduce using rule 55 (singleStatement -> COMMENT singleStatement .)
    LPAREN          reduce using rule 55 (singleStatement -> COMMENT singleStatement .)
    NUMBER          reduce using rule 55 (singleStatement -> COMMENT singleStatement .)
    TRUE            reduce using rule 55 (singleStatement -> COMMENT singleStatement .)
    FALSE           reduce using rule 55 (singleStatement -> COMMENT singleStatement .)
    MULTIPLICACIONESCALAR reduce using rule 55 (singleStatement -> COMMENT singleStatement .)
    CAPITALIZAR     reduce using rule 55 (singleStatement -> COMMENT singleStatement .)
    COLINEALES      reduce using rule 55 (singleStatement -> COMMENT singleStatement .)
    PRINT           reduce using rule 55 (singleStatement -> COMMENT singleStatement .)
    LENGTH          reduce using rule 55 (singleStatement -> COMMENT singleStatement .)
    LBRACKET        reduce using rule 55 (singleStatement -> COMMENT singleStatement .)
    VAR             reduce using rule 55 (singleStatement -> COMMENT singleStatement .)
    $end            reduce using rule 55 (singleStatement -> COMMENT singleStatement .)
    RBRACE          reduce using rule 55 (singleStatement -> COMMENT singleStatement .)
    ELSE            reduce using rule 55 (singleStatement -> COMMENT singleStatement .)


state 106

    (64) do_while -> DO singleStatement WHILE . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 120


state 107

    (57) if -> IF LPAREN expression . RPAREN singleStatement else

    RPAREN          shift and go to state 121


state 108

    (69) expressionFunction -> PRINT LPAREN expression . RPAREN

    RPAREN          shift and go to state 122


state 109

    (67) expressionFunction -> CAPITALIZAR LPAREN expression RPAREN .

    DOT             reduce using rule 67 (expressionFunction -> CAPITALIZAR LPAREN expression RPAREN .)
    DOUBLE_AO       reduce using rule 67 (expressionFunction -> CAPITALIZAR LPAREN expression RPAREN .)
    AO              reduce using rule 67 (expressionFunction -> CAPITALIZAR LPAREN expression RPAREN .)
    COMP            reduce using rule 67 (expressionFunction -> CAPITALIZAR LPAREN expression RPAREN .)
    QUESTION        reduce using rule 67 (expressionFunction -> CAPITALIZAR LPAREN expression RPAREN .)
    BOOL_OP         reduce using rule 67 (expressionFunction -> CAPITALIZAR LPAREN expression RPAREN .)
    AOEQUAL         reduce using rule 67 (expressionFunction -> CAPITALIZAR LPAREN expression RPAREN .)
    EQUAL           reduce using rule 67 (expressionFunction -> CAPITALIZAR LPAREN expression RPAREN .)
    COMMA           reduce using rule 67 (expressionFunction -> CAPITALIZAR LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 67 (expressionFunction -> CAPITALIZAR LPAREN expression RPAREN .)
    RBRACE          reduce using rule 67 (expressionFunction -> CAPITALIZAR LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 67 (expressionFunction -> CAPITALIZAR LPAREN expression RPAREN .)
    RPAREN          reduce using rule 67 (expressionFunction -> CAPITALIZAR LPAREN expression RPAREN .)
    COLON           reduce using rule 67 (expressionFunction -> CAPITALIZAR LPAREN expression RPAREN .)


state 110

    (40) expressionVectorAt -> expressionVectorAt LBRACKET expression RBRACKET .

    LBRACKET        reduce using rule 40 (expressionVectorAt -> expressionVectorAt LBRACKET expression RBRACKET .)
    DOT             reduce using rule 40 (expressionVectorAt -> expressionVectorAt LBRACKET expression RBRACKET .)
    DOUBLE_AO       reduce using rule 40 (expressionVectorAt -> expressionVectorAt LBRACKET expression RBRACKET .)
    AO              reduce using rule 40 (expressionVectorAt -> expressionVectorAt LBRACKET expression RBRACKET .)
    COMP            reduce using rule 40 (expressionVectorAt -> expressionVectorAt LBRACKET expression RBRACKET .)
    QUESTION        reduce using rule 40 (expressionVectorAt -> expressionVectorAt LBRACKET expression RBRACKET .)
    BOOL_OP         reduce using rule 40 (expressionVectorAt -> expressionVectorAt LBRACKET expression RBRACKET .)
    AOEQUAL         reduce using rule 40 (expressionVectorAt -> expressionVectorAt LBRACKET expression RBRACKET .)
    EQUAL           reduce using rule 40 (expressionVectorAt -> expressionVectorAt LBRACKET expression RBRACKET .)
    SEMICOLON       reduce using rule 40 (expressionVectorAt -> expressionVectorAt LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 40 (expressionVectorAt -> expressionVectorAt LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 40 (expressionVectorAt -> expressionVectorAt LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 40 (expressionVectorAt -> expressionVectorAt LBRACKET expression RBRACKET .)
    COLON           reduce using rule 40 (expressionVectorAt -> expressionVectorAt LBRACKET expression RBRACKET .)
    RBRACE          reduce using rule 40 (expressionVectorAt -> expressionVectorAt LBRACKET expression RBRACKET .)


state 111

    (63) for -> FOR LPAREN optional_expr SEMICOLON . expression SEMICOLON optional_expr RPAREN singleStatement
    (10) expression -> . expressionAssign
    (44) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (46) expressionAssign -> . expressionTernaryCond
    (60) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (61) expressionTernaryCond -> . expressionBoolOp
    (31) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (32) expressionBoolOp -> . expressionComp
    (34) expressionComp -> . expressionComp COMP aritExp
    (35) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (33) unaryExp -> . NOT unaryExp
    (36) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . memberAccess
    (20) unaryExp2 -> . factorExp
    (48) memberAccess -> . memberAccess DOT factorVar
    (49) memberAccess -> . factorExp DOT factorVar
    (21) factorExp -> . factorNumExp
    (22) factorExp -> . bool_atom
    (23) factorExp -> . expressionVectorAt
    (24) factorExp -> . factorReg
    (25) factorExp -> . LPAREN expression RPAREN
    (26) factorExp -> . expressionFunction
    (28) factorNumExp -> . NUMBER
    (29) bool_atom -> . TRUE
    (30) bool_atom -> . FALSE
    (40) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (41) expressionVectorAt -> . expressionVector
    (42) expressionVectorAt -> . factorVar
    (43) expressionVectorAt -> . memberAccess
    (47) factorReg -> . LBRACE reg_items RBRACE
    (65) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (66) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (67) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (68) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (69) expressionFunction -> . PRINT LPAREN expression RPAREN
    (70) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (37) expressionVector -> . LBRACKET vector_items RBRACKET
    (27) factorVar -> . VAR

    AO              shift and go to state 43
    DOUBLE_AO       shift and go to state 12
    NOT             shift and go to state 11
    STRING          shift and go to state 23
    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 44
    TRUE            shift and go to state 14
    FALSE           shift and go to state 30
    LBRACE          shift and go to state 52
    MULTIPLICACIONESCALAR shift and go to state 19
    CAPITALIZAR     shift and go to state 1
    COLINEALES      shift and go to state 27
    PRINT           shift and go to state 45
    LENGTH          shift and go to state 16
    LBRACKET        shift and go to state 32
    VAR             shift and go to state 31

    factorVar                      shift and go to state 40
    expressionFunction             shift and go to state 39
    expressionTernaryCond          shift and go to state 26
    expressionComp                 shift and go to state 2
    expressionBoolOp               shift and go to state 18
    factorReg                      shift and go to state 3
    unaryExp                       shift and go to state 4
    memberAccess                   shift and go to state 17
    factorNumExp                   shift and go to state 38
    factorExp                      shift and go to state 5
    bool_atom                      shift and go to state 6
    expressionAssign               shift and go to state 29
    expression                     shift and go to state 123
    expressionVector               shift and go to state 15
    unaryExp2                      shift and go to state 42
    expressionVectorAt             shift and go to state 7
    aritExp                        shift and go to state 13

state 112

    (70) expressionFunction -> LENGTH LPAREN expression RPAREN .

    DOT             reduce using rule 70 (expressionFunction -> LENGTH LPAREN expression RPAREN .)
    DOUBLE_AO       reduce using rule 70 (expressionFunction -> LENGTH LPAREN expression RPAREN .)
    AO              reduce using rule 70 (expressionFunction -> LENGTH LPAREN expression RPAREN .)
    COMP            reduce using rule 70 (expressionFunction -> LENGTH LPAREN expression RPAREN .)
    QUESTION        reduce using rule 70 (expressionFunction -> LENGTH LPAREN expression RPAREN .)
    BOOL_OP         reduce using rule 70 (expressionFunction -> LENGTH LPAREN expression RPAREN .)
    AOEQUAL         reduce using rule 70 (expressionFunction -> LENGTH LPAREN expression RPAREN .)
    EQUAL           reduce using rule 70 (expressionFunction -> LENGTH LPAREN expression RPAREN .)
    COMMA           reduce using rule 70 (expressionFunction -> LENGTH LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 70 (expressionFunction -> LENGTH LPAREN expression RPAREN .)
    RBRACE          reduce using rule 70 (expressionFunction -> LENGTH LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 70 (expressionFunction -> LENGTH LPAREN expression RPAREN .)
    RPAREN          reduce using rule 70 (expressionFunction -> LENGTH LPAREN expression RPAREN .)
    COLON           reduce using rule 70 (expressionFunction -> LENGTH LPAREN expression RPAREN .)


state 113

    (60) expressionTernaryCond -> expressionBoolOp QUESTION expression COLON . expression
    (10) expression -> . expressionAssign
    (44) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (46) expressionAssign -> . expressionTernaryCond
    (60) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (61) expressionTernaryCond -> . expressionBoolOp
    (31) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (32) expressionBoolOp -> . expressionComp
    (34) expressionComp -> . expressionComp COMP aritExp
    (35) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (33) unaryExp -> . NOT unaryExp
    (36) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . memberAccess
    (20) unaryExp2 -> . factorExp
    (48) memberAccess -> . memberAccess DOT factorVar
    (49) memberAccess -> . factorExp DOT factorVar
    (21) factorExp -> . factorNumExp
    (22) factorExp -> . bool_atom
    (23) factorExp -> . expressionVectorAt
    (24) factorExp -> . factorReg
    (25) factorExp -> . LPAREN expression RPAREN
    (26) factorExp -> . expressionFunction
    (28) factorNumExp -> . NUMBER
    (29) bool_atom -> . TRUE
    (30) bool_atom -> . FALSE
    (40) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (41) expressionVectorAt -> . expressionVector
    (42) expressionVectorAt -> . factorVar
    (43) expressionVectorAt -> . memberAccess
    (47) factorReg -> . LBRACE reg_items RBRACE
    (65) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (66) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (67) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (68) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (69) expressionFunction -> . PRINT LPAREN expression RPAREN
    (70) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (37) expressionVector -> . LBRACKET vector_items RBRACKET
    (27) factorVar -> . VAR

    AO              shift and go to state 43
    DOUBLE_AO       shift and go to state 12
    NOT             shift and go to state 11
    STRING          shift and go to state 23
    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 44
    TRUE            shift and go to state 14
    FALSE           shift and go to state 30
    LBRACE          shift and go to state 52
    MULTIPLICACIONESCALAR shift and go to state 19
    CAPITALIZAR     shift and go to state 1
    COLINEALES      shift and go to state 27
    PRINT           shift and go to state 45
    LENGTH          shift and go to state 16
    LBRACKET        shift and go to state 32
    VAR             shift and go to state 31

    factorVar                      shift and go to state 40
    expressionFunction             shift and go to state 39
    expressionTernaryCond          shift and go to state 26
    expressionComp                 shift and go to state 2
    expressionBoolOp               shift and go to state 18
    factorReg                      shift and go to state 3
    unaryExp                       shift and go to state 4
    memberAccess                   shift and go to state 17
    factorNumExp                   shift and go to state 38
    factorExp                      shift and go to state 5
    bool_atom                      shift and go to state 6
    expressionAssign               shift and go to state 29
    expression                     shift and go to state 124
    expressionVector               shift and go to state 15
    unaryExp2                      shift and go to state 42
    expressionVectorAt             shift and go to state 7
    aritExp                        shift and go to state 13

state 114

    (65) expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA . expression RPAREN
    (66) expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA . expression COMMA expression RPAREN
    (10) expression -> . expressionAssign
    (44) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (46) expressionAssign -> . expressionTernaryCond
    (60) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (61) expressionTernaryCond -> . expressionBoolOp
    (31) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (32) expressionBoolOp -> . expressionComp
    (34) expressionComp -> . expressionComp COMP aritExp
    (35) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (33) unaryExp -> . NOT unaryExp
    (36) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . memberAccess
    (20) unaryExp2 -> . factorExp
    (48) memberAccess -> . memberAccess DOT factorVar
    (49) memberAccess -> . factorExp DOT factorVar
    (21) factorExp -> . factorNumExp
    (22) factorExp -> . bool_atom
    (23) factorExp -> . expressionVectorAt
    (24) factorExp -> . factorReg
    (25) factorExp -> . LPAREN expression RPAREN
    (26) factorExp -> . expressionFunction
    (28) factorNumExp -> . NUMBER
    (29) bool_atom -> . TRUE
    (30) bool_atom -> . FALSE
    (40) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (41) expressionVectorAt -> . expressionVector
    (42) expressionVectorAt -> . factorVar
    (43) expressionVectorAt -> . memberAccess
    (47) factorReg -> . LBRACE reg_items RBRACE
    (65) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (66) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (67) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (68) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (69) expressionFunction -> . PRINT LPAREN expression RPAREN
    (70) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (37) expressionVector -> . LBRACKET vector_items RBRACKET
    (27) factorVar -> . VAR

    AO              shift and go to state 43
    DOUBLE_AO       shift and go to state 12
    NOT             shift and go to state 11
    STRING          shift and go to state 23
    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 44
    TRUE            shift and go to state 14
    FALSE           shift and go to state 30
    LBRACE          shift and go to state 52
    MULTIPLICACIONESCALAR shift and go to state 19
    CAPITALIZAR     shift and go to state 1
    COLINEALES      shift and go to state 27
    PRINT           shift and go to state 45
    LENGTH          shift and go to state 16
    LBRACKET        shift and go to state 32
    VAR             shift and go to state 31

    factorVar                      shift and go to state 40
    expressionFunction             shift and go to state 39
    expressionTernaryCond          shift and go to state 26
    expressionComp                 shift and go to state 2
    expressionBoolOp               shift and go to state 18
    factorReg                      shift and go to state 3
    unaryExp                       shift and go to state 4
    memberAccess                   shift and go to state 17
    factorNumExp                   shift and go to state 38
    factorExp                      shift and go to state 5
    bool_atom                      shift and go to state 6
    expressionAssign               shift and go to state 29
    expression                     shift and go to state 125
    expressionVector               shift and go to state 15
    unaryExp2                      shift and go to state 42
    expressionVectorAt             shift and go to state 7
    aritExp                        shift and go to state 13

state 115

    (62) while -> WHILE LPAREN expression RPAREN . singleStatement
    (55) singleStatement -> . COMMENT singleStatement
    (56) singleStatement -> . statement
    (4) statement -> . expression SEMICOLON
    (5) statement -> . block
    (6) statement -> . if
    (7) statement -> . while
    (8) statement -> . for
    (9) statement -> . do_while
    (10) expression -> . expressionAssign
    (54) block -> . LBRACE code RBRACE
    (57) if -> . IF LPAREN expression RPAREN singleStatement else
    (62) while -> . WHILE LPAREN expression RPAREN singleStatement
    (63) for -> . FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement
    (64) do_while -> . DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON
    (44) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (46) expressionAssign -> . expressionTernaryCond
    (60) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (61) expressionTernaryCond -> . expressionBoolOp
    (31) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (32) expressionBoolOp -> . expressionComp
    (34) expressionComp -> . expressionComp COMP aritExp
    (35) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (33) unaryExp -> . NOT unaryExp
    (36) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . memberAccess
    (20) unaryExp2 -> . factorExp
    (48) memberAccess -> . memberAccess DOT factorVar
    (49) memberAccess -> . factorExp DOT factorVar
    (21) factorExp -> . factorNumExp
    (22) factorExp -> . bool_atom
    (23) factorExp -> . expressionVectorAt
    (24) factorExp -> . factorReg
    (25) factorExp -> . LPAREN expression RPAREN
    (26) factorExp -> . expressionFunction
    (28) factorNumExp -> . NUMBER
    (29) bool_atom -> . TRUE
    (30) bool_atom -> . FALSE
    (40) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (41) expressionVectorAt -> . expressionVector
    (42) expressionVectorAt -> . factorVar
    (43) expressionVectorAt -> . memberAccess
    (47) factorReg -> . LBRACE reg_items RBRACE
    (65) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (66) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (67) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (68) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (69) expressionFunction -> . PRINT LPAREN expression RPAREN
    (70) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (37) expressionVector -> . LBRACKET vector_items RBRACKET
    (27) factorVar -> . VAR

    COMMENT         shift and go to state 75
    LBRACE          shift and go to state 36
    IF              shift and go to state 41
    WHILE           shift and go to state 22
    FOR             shift and go to state 10
    DO              shift and go to state 37
    AO              shift and go to state 43
    DOUBLE_AO       shift and go to state 12
    NOT             shift and go to state 11
    STRING          shift and go to state 23
    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 44
    TRUE            shift and go to state 14
    FALSE           shift and go to state 30
    MULTIPLICACIONESCALAR shift and go to state 19
    CAPITALIZAR     shift and go to state 1
    COLINEALES      shift and go to state 27
    PRINT           shift and go to state 45
    LENGTH          shift and go to state 16
    LBRACKET        shift and go to state 32
    VAR             shift and go to state 31

    if                             shift and go to state 25
    expressionTernaryCond          shift and go to state 26
    expressionComp                 shift and go to state 2
    memberAccess                   shift and go to state 17
    factorReg                      shift and go to state 3
    statement                      shift and go to state 74
    factorExp                      shift and go to state 5
    bool_atom                      shift and go to state 6
    expressionAssign               shift and go to state 29
    expression                     shift and go to state 8
    do_while                       shift and go to state 9
    aritExp                        shift and go to state 13
    expressionFunction             shift and go to state 39
    for                            shift and go to state 34
    expressionBoolOp               shift and go to state 18
    factorNumExp                   shift and go to state 38
    expressionVectorAt             shift and go to state 7
    expressionVector               shift and go to state 15
    block                          shift and go to state 21
    factorVar                      shift and go to state 40
    while                          shift and go to state 20
    unaryExp2                      shift and go to state 42
    unaryExp                       shift and go to state 4
    singleStatement                shift and go to state 126

state 116

    (68) expressionFunction -> COLINEALES LPAREN expression COMMA . expression RPAREN
    (10) expression -> . expressionAssign
    (44) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (46) expressionAssign -> . expressionTernaryCond
    (60) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (61) expressionTernaryCond -> . expressionBoolOp
    (31) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (32) expressionBoolOp -> . expressionComp
    (34) expressionComp -> . expressionComp COMP aritExp
    (35) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (33) unaryExp -> . NOT unaryExp
    (36) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . memberAccess
    (20) unaryExp2 -> . factorExp
    (48) memberAccess -> . memberAccess DOT factorVar
    (49) memberAccess -> . factorExp DOT factorVar
    (21) factorExp -> . factorNumExp
    (22) factorExp -> . bool_atom
    (23) factorExp -> . expressionVectorAt
    (24) factorExp -> . factorReg
    (25) factorExp -> . LPAREN expression RPAREN
    (26) factorExp -> . expressionFunction
    (28) factorNumExp -> . NUMBER
    (29) bool_atom -> . TRUE
    (30) bool_atom -> . FALSE
    (40) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (41) expressionVectorAt -> . expressionVector
    (42) expressionVectorAt -> . factorVar
    (43) expressionVectorAt -> . memberAccess
    (47) factorReg -> . LBRACE reg_items RBRACE
    (65) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (66) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (67) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (68) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (69) expressionFunction -> . PRINT LPAREN expression RPAREN
    (70) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (37) expressionVector -> . LBRACKET vector_items RBRACKET
    (27) factorVar -> . VAR

    AO              shift and go to state 43
    DOUBLE_AO       shift and go to state 12
    NOT             shift and go to state 11
    STRING          shift and go to state 23
    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 44
    TRUE            shift and go to state 14
    FALSE           shift and go to state 30
    LBRACE          shift and go to state 52
    MULTIPLICACIONESCALAR shift and go to state 19
    CAPITALIZAR     shift and go to state 1
    COLINEALES      shift and go to state 27
    PRINT           shift and go to state 45
    LENGTH          shift and go to state 16
    LBRACKET        shift and go to state 32
    VAR             shift and go to state 31

    factorVar                      shift and go to state 40
    expressionFunction             shift and go to state 39
    expressionTernaryCond          shift and go to state 26
    expressionComp                 shift and go to state 2
    expressionBoolOp               shift and go to state 18
    factorReg                      shift and go to state 3
    unaryExp                       shift and go to state 4
    memberAccess                   shift and go to state 17
    factorNumExp                   shift and go to state 38
    factorExp                      shift and go to state 5
    bool_atom                      shift and go to state 6
    expressionAssign               shift and go to state 29
    expression                     shift and go to state 127
    expressionVector               shift and go to state 15
    unaryExp2                      shift and go to state 42
    expressionVectorAt             shift and go to state 7
    aritExp                        shift and go to state 13

state 117

    (38) vector_items -> expression COMMA vector_items .

    RBRACKET        reduce using rule 38 (vector_items -> expression COMMA vector_items .)


state 118

    (50) reg_items -> reg_field COMMA reg_items .

    RBRACE          reduce using rule 50 (reg_items -> reg_field COMMA reg_items .)


state 119

    (52) reg_field -> factorVar COLON expression .

    COMMA           reduce using rule 52 (reg_field -> factorVar COLON expression .)
    RBRACE          reduce using rule 52 (reg_field -> factorVar COLON expression .)


state 120

    (64) do_while -> DO singleStatement WHILE LPAREN . expression RPAREN SEMICOLON
    (10) expression -> . expressionAssign
    (44) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (46) expressionAssign -> . expressionTernaryCond
    (60) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (61) expressionTernaryCond -> . expressionBoolOp
    (31) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (32) expressionBoolOp -> . expressionComp
    (34) expressionComp -> . expressionComp COMP aritExp
    (35) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (33) unaryExp -> . NOT unaryExp
    (36) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . memberAccess
    (20) unaryExp2 -> . factorExp
    (48) memberAccess -> . memberAccess DOT factorVar
    (49) memberAccess -> . factorExp DOT factorVar
    (21) factorExp -> . factorNumExp
    (22) factorExp -> . bool_atom
    (23) factorExp -> . expressionVectorAt
    (24) factorExp -> . factorReg
    (25) factorExp -> . LPAREN expression RPAREN
    (26) factorExp -> . expressionFunction
    (28) factorNumExp -> . NUMBER
    (29) bool_atom -> . TRUE
    (30) bool_atom -> . FALSE
    (40) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (41) expressionVectorAt -> . expressionVector
    (42) expressionVectorAt -> . factorVar
    (43) expressionVectorAt -> . memberAccess
    (47) factorReg -> . LBRACE reg_items RBRACE
    (65) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (66) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (67) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (68) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (69) expressionFunction -> . PRINT LPAREN expression RPAREN
    (70) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (37) expressionVector -> . LBRACKET vector_items RBRACKET
    (27) factorVar -> . VAR

    AO              shift and go to state 43
    DOUBLE_AO       shift and go to state 12
    NOT             shift and go to state 11
    STRING          shift and go to state 23
    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 44
    TRUE            shift and go to state 14
    FALSE           shift and go to state 30
    LBRACE          shift and go to state 52
    MULTIPLICACIONESCALAR shift and go to state 19
    CAPITALIZAR     shift and go to state 1
    COLINEALES      shift and go to state 27
    PRINT           shift and go to state 45
    LENGTH          shift and go to state 16
    LBRACKET        shift and go to state 32
    VAR             shift and go to state 31

    factorVar                      shift and go to state 40
    expressionFunction             shift and go to state 39
    expressionTernaryCond          shift and go to state 26
    expressionComp                 shift and go to state 2
    expressionBoolOp               shift and go to state 18
    factorReg                      shift and go to state 3
    unaryExp                       shift and go to state 4
    memberAccess                   shift and go to state 17
    factorNumExp                   shift and go to state 38
    factorExp                      shift and go to state 5
    bool_atom                      shift and go to state 6
    expressionAssign               shift and go to state 29
    expression                     shift and go to state 128
    expressionVector               shift and go to state 15
    unaryExp2                      shift and go to state 42
    expressionVectorAt             shift and go to state 7
    aritExp                        shift and go to state 13

state 121

    (57) if -> IF LPAREN expression RPAREN . singleStatement else
    (55) singleStatement -> . COMMENT singleStatement
    (56) singleStatement -> . statement
    (4) statement -> . expression SEMICOLON
    (5) statement -> . block
    (6) statement -> . if
    (7) statement -> . while
    (8) statement -> . for
    (9) statement -> . do_while
    (10) expression -> . expressionAssign
    (54) block -> . LBRACE code RBRACE
    (57) if -> . IF LPAREN expression RPAREN singleStatement else
    (62) while -> . WHILE LPAREN expression RPAREN singleStatement
    (63) for -> . FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement
    (64) do_while -> . DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON
    (44) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (46) expressionAssign -> . expressionTernaryCond
    (60) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (61) expressionTernaryCond -> . expressionBoolOp
    (31) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (32) expressionBoolOp -> . expressionComp
    (34) expressionComp -> . expressionComp COMP aritExp
    (35) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (33) unaryExp -> . NOT unaryExp
    (36) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . memberAccess
    (20) unaryExp2 -> . factorExp
    (48) memberAccess -> . memberAccess DOT factorVar
    (49) memberAccess -> . factorExp DOT factorVar
    (21) factorExp -> . factorNumExp
    (22) factorExp -> . bool_atom
    (23) factorExp -> . expressionVectorAt
    (24) factorExp -> . factorReg
    (25) factorExp -> . LPAREN expression RPAREN
    (26) factorExp -> . expressionFunction
    (28) factorNumExp -> . NUMBER
    (29) bool_atom -> . TRUE
    (30) bool_atom -> . FALSE
    (40) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (41) expressionVectorAt -> . expressionVector
    (42) expressionVectorAt -> . factorVar
    (43) expressionVectorAt -> . memberAccess
    (47) factorReg -> . LBRACE reg_items RBRACE
    (65) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (66) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (67) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (68) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (69) expressionFunction -> . PRINT LPAREN expression RPAREN
    (70) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (37) expressionVector -> . LBRACKET vector_items RBRACKET
    (27) factorVar -> . VAR

    COMMENT         shift and go to state 75
    LBRACE          shift and go to state 36
    IF              shift and go to state 41
    WHILE           shift and go to state 22
    FOR             shift and go to state 10
    DO              shift and go to state 37
    AO              shift and go to state 43
    DOUBLE_AO       shift and go to state 12
    NOT             shift and go to state 11
    STRING          shift and go to state 23
    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 44
    TRUE            shift and go to state 14
    FALSE           shift and go to state 30
    MULTIPLICACIONESCALAR shift and go to state 19
    CAPITALIZAR     shift and go to state 1
    COLINEALES      shift and go to state 27
    PRINT           shift and go to state 45
    LENGTH          shift and go to state 16
    LBRACKET        shift and go to state 32
    VAR             shift and go to state 31

    if                             shift and go to state 25
    expressionTernaryCond          shift and go to state 26
    expressionComp                 shift and go to state 2
    memberAccess                   shift and go to state 17
    factorReg                      shift and go to state 3
    statement                      shift and go to state 74
    factorExp                      shift and go to state 5
    bool_atom                      shift and go to state 6
    expressionAssign               shift and go to state 29
    expression                     shift and go to state 8
    do_while                       shift and go to state 9
    aritExp                        shift and go to state 13
    expressionFunction             shift and go to state 39
    for                            shift and go to state 34
    expressionBoolOp               shift and go to state 18
    factorNumExp                   shift and go to state 38
    expressionVectorAt             shift and go to state 7
    expressionVector               shift and go to state 15
    block                          shift and go to state 21
    factorVar                      shift and go to state 40
    while                          shift and go to state 20
    unaryExp2                      shift and go to state 42
    unaryExp                       shift and go to state 4
    singleStatement                shift and go to state 129

state 122

    (69) expressionFunction -> PRINT LPAREN expression RPAREN .

    DOT             reduce using rule 69 (expressionFunction -> PRINT LPAREN expression RPAREN .)
    DOUBLE_AO       reduce using rule 69 (expressionFunction -> PRINT LPAREN expression RPAREN .)
    AO              reduce using rule 69 (expressionFunction -> PRINT LPAREN expression RPAREN .)
    COMP            reduce using rule 69 (expressionFunction -> PRINT LPAREN expression RPAREN .)
    QUESTION        reduce using rule 69 (expressionFunction -> PRINT LPAREN expression RPAREN .)
    BOOL_OP         reduce using rule 69 (expressionFunction -> PRINT LPAREN expression RPAREN .)
    AOEQUAL         reduce using rule 69 (expressionFunction -> PRINT LPAREN expression RPAREN .)
    EQUAL           reduce using rule 69 (expressionFunction -> PRINT LPAREN expression RPAREN .)
    COMMA           reduce using rule 69 (expressionFunction -> PRINT LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 69 (expressionFunction -> PRINT LPAREN expression RPAREN .)
    RBRACE          reduce using rule 69 (expressionFunction -> PRINT LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 69 (expressionFunction -> PRINT LPAREN expression RPAREN .)
    RPAREN          reduce using rule 69 (expressionFunction -> PRINT LPAREN expression RPAREN .)
    COLON           reduce using rule 69 (expressionFunction -> PRINT LPAREN expression RPAREN .)


state 123

    (63) for -> FOR LPAREN optional_expr SEMICOLON expression . SEMICOLON optional_expr RPAREN singleStatement

    SEMICOLON       shift and go to state 130


state 124

    (60) expressionTernaryCond -> expressionBoolOp QUESTION expression COLON expression .

    AOEQUAL         reduce using rule 60 (expressionTernaryCond -> expressionBoolOp QUESTION expression COLON expression .)
    EQUAL           reduce using rule 60 (expressionTernaryCond -> expressionBoolOp QUESTION expression COLON expression .)
    SEMICOLON       reduce using rule 60 (expressionTernaryCond -> expressionBoolOp QUESTION expression COLON expression .)
    COMMA           reduce using rule 60 (expressionTernaryCond -> expressionBoolOp QUESTION expression COLON expression .)
    RBRACKET        reduce using rule 60 (expressionTernaryCond -> expressionBoolOp QUESTION expression COLON expression .)
    RPAREN          reduce using rule 60 (expressionTernaryCond -> expressionBoolOp QUESTION expression COLON expression .)
    COLON           reduce using rule 60 (expressionTernaryCond -> expressionBoolOp QUESTION expression COLON expression .)
    RBRACE          reduce using rule 60 (expressionTernaryCond -> expressionBoolOp QUESTION expression COLON expression .)


state 125

    (65) expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression . RPAREN
    (66) expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression . COMMA expression RPAREN

    RPAREN          shift and go to state 131
    COMMA           shift and go to state 132


state 126

    (62) while -> WHILE LPAREN expression RPAREN singleStatement .

    COMMENT         reduce using rule 62 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    LBRACE          reduce using rule 62 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    IF              reduce using rule 62 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    WHILE           reduce using rule 62 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    FOR             reduce using rule 62 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    DO              reduce using rule 62 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    AO              reduce using rule 62 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    DOUBLE_AO       reduce using rule 62 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    NOT             reduce using rule 62 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    STRING          reduce using rule 62 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    LPAREN          reduce using rule 62 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    NUMBER          reduce using rule 62 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    TRUE            reduce using rule 62 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    FALSE           reduce using rule 62 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    MULTIPLICACIONESCALAR reduce using rule 62 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    CAPITALIZAR     reduce using rule 62 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    COLINEALES      reduce using rule 62 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    PRINT           reduce using rule 62 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    LENGTH          reduce using rule 62 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    LBRACKET        reduce using rule 62 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    VAR             reduce using rule 62 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    $end            reduce using rule 62 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    RBRACE          reduce using rule 62 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    ELSE            reduce using rule 62 (while -> WHILE LPAREN expression RPAREN singleStatement .)


state 127

    (68) expressionFunction -> COLINEALES LPAREN expression COMMA expression . RPAREN

    RPAREN          shift and go to state 133


state 128

    (64) do_while -> DO singleStatement WHILE LPAREN expression . RPAREN SEMICOLON

    RPAREN          shift and go to state 134


state 129

    (57) if -> IF LPAREN expression RPAREN singleStatement . else
    (58) else -> . ELSE singleStatement
    (59) else -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 135
    WHILE           reduce using rule 59 (else -> .)
    COMMENT         reduce using rule 59 (else -> .)
    LBRACE          reduce using rule 59 (else -> .)
    IF              reduce using rule 59 (else -> .)
    FOR             reduce using rule 59 (else -> .)
    DO              reduce using rule 59 (else -> .)
    AO              reduce using rule 59 (else -> .)
    DOUBLE_AO       reduce using rule 59 (else -> .)
    NOT             reduce using rule 59 (else -> .)
    STRING          reduce using rule 59 (else -> .)
    LPAREN          reduce using rule 59 (else -> .)
    NUMBER          reduce using rule 59 (else -> .)
    TRUE            reduce using rule 59 (else -> .)
    FALSE           reduce using rule 59 (else -> .)
    MULTIPLICACIONESCALAR reduce using rule 59 (else -> .)
    CAPITALIZAR     reduce using rule 59 (else -> .)
    COLINEALES      reduce using rule 59 (else -> .)
    PRINT           reduce using rule 59 (else -> .)
    LENGTH          reduce using rule 59 (else -> .)
    LBRACKET        reduce using rule 59 (else -> .)
    VAR             reduce using rule 59 (else -> .)
    $end            reduce using rule 59 (else -> .)
    RBRACE          reduce using rule 59 (else -> .)

  ! ELSE            [ reduce using rule 59 (else -> .) ]

    else                           shift and go to state 136

state 130

    (63) for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON . optional_expr RPAREN singleStatement
    (11) optional_expr -> . expression
    (12) optional_expr -> .
    (10) expression -> . expressionAssign
    (44) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (46) expressionAssign -> . expressionTernaryCond
    (60) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (61) expressionTernaryCond -> . expressionBoolOp
    (31) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (32) expressionBoolOp -> . expressionComp
    (34) expressionComp -> . expressionComp COMP aritExp
    (35) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (33) unaryExp -> . NOT unaryExp
    (36) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . memberAccess
    (20) unaryExp2 -> . factorExp
    (48) memberAccess -> . memberAccess DOT factorVar
    (49) memberAccess -> . factorExp DOT factorVar
    (21) factorExp -> . factorNumExp
    (22) factorExp -> . bool_atom
    (23) factorExp -> . expressionVectorAt
    (24) factorExp -> . factorReg
    (25) factorExp -> . LPAREN expression RPAREN
    (26) factorExp -> . expressionFunction
    (28) factorNumExp -> . NUMBER
    (29) bool_atom -> . TRUE
    (30) bool_atom -> . FALSE
    (40) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (41) expressionVectorAt -> . expressionVector
    (42) expressionVectorAt -> . factorVar
    (43) expressionVectorAt -> . memberAccess
    (47) factorReg -> . LBRACE reg_items RBRACE
    (65) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (66) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (67) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (68) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (69) expressionFunction -> . PRINT LPAREN expression RPAREN
    (70) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (37) expressionVector -> . LBRACKET vector_items RBRACKET
    (27) factorVar -> . VAR

    RPAREN          reduce using rule 12 (optional_expr -> .)
    AO              shift and go to state 43
    DOUBLE_AO       shift and go to state 12
    NOT             shift and go to state 11
    STRING          shift and go to state 23
    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 44
    TRUE            shift and go to state 14
    FALSE           shift and go to state 30
    LBRACE          shift and go to state 52
    MULTIPLICACIONESCALAR shift and go to state 19
    CAPITALIZAR     shift and go to state 1
    COLINEALES      shift and go to state 27
    PRINT           shift and go to state 45
    LENGTH          shift and go to state 16
    LBRACKET        shift and go to state 32
    VAR             shift and go to state 31

    factorVar                      shift and go to state 40
    expressionFunction             shift and go to state 39
    expressionTernaryCond          shift and go to state 26
    expressionComp                 shift and go to state 2
    expressionBoolOp               shift and go to state 18
    factorReg                      shift and go to state 3
    unaryExp                       shift and go to state 4
    memberAccess                   shift and go to state 17
    factorNumExp                   shift and go to state 38
    factorExp                      shift and go to state 5
    bool_atom                      shift and go to state 6
    expressionAssign               shift and go to state 29
    expression                     shift and go to state 85
    expressionVector               shift and go to state 15
    unaryExp2                      shift and go to state 42
    expressionVectorAt             shift and go to state 7
    optional_expr                  shift and go to state 137
    aritExp                        shift and go to state 13

state 131

    (65) expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN .

    DOT             reduce using rule 65 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN .)
    DOUBLE_AO       reduce using rule 65 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN .)
    AO              reduce using rule 65 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN .)
    COMP            reduce using rule 65 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN .)
    QUESTION        reduce using rule 65 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN .)
    BOOL_OP         reduce using rule 65 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN .)
    AOEQUAL         reduce using rule 65 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN .)
    EQUAL           reduce using rule 65 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN .)
    COMMA           reduce using rule 65 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN .)
    RBRACKET        reduce using rule 65 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN .)
    RBRACE          reduce using rule 65 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN .)
    SEMICOLON       reduce using rule 65 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN .)
    RPAREN          reduce using rule 65 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN .)
    COLON           reduce using rule 65 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN .)


state 132

    (66) expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA . expression RPAREN
    (10) expression -> . expressionAssign
    (44) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (46) expressionAssign -> . expressionTernaryCond
    (60) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (61) expressionTernaryCond -> . expressionBoolOp
    (31) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (32) expressionBoolOp -> . expressionComp
    (34) expressionComp -> . expressionComp COMP aritExp
    (35) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (33) unaryExp -> . NOT unaryExp
    (36) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . memberAccess
    (20) unaryExp2 -> . factorExp
    (48) memberAccess -> . memberAccess DOT factorVar
    (49) memberAccess -> . factorExp DOT factorVar
    (21) factorExp -> . factorNumExp
    (22) factorExp -> . bool_atom
    (23) factorExp -> . expressionVectorAt
    (24) factorExp -> . factorReg
    (25) factorExp -> . LPAREN expression RPAREN
    (26) factorExp -> . expressionFunction
    (28) factorNumExp -> . NUMBER
    (29) bool_atom -> . TRUE
    (30) bool_atom -> . FALSE
    (40) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (41) expressionVectorAt -> . expressionVector
    (42) expressionVectorAt -> . factorVar
    (43) expressionVectorAt -> . memberAccess
    (47) factorReg -> . LBRACE reg_items RBRACE
    (65) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (66) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (67) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (68) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (69) expressionFunction -> . PRINT LPAREN expression RPAREN
    (70) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (37) expressionVector -> . LBRACKET vector_items RBRACKET
    (27) factorVar -> . VAR

    AO              shift and go to state 43
    DOUBLE_AO       shift and go to state 12
    NOT             shift and go to state 11
    STRING          shift and go to state 23
    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 44
    TRUE            shift and go to state 14
    FALSE           shift and go to state 30
    LBRACE          shift and go to state 52
    MULTIPLICACIONESCALAR shift and go to state 19
    CAPITALIZAR     shift and go to state 1
    COLINEALES      shift and go to state 27
    PRINT           shift and go to state 45
    LENGTH          shift and go to state 16
    LBRACKET        shift and go to state 32
    VAR             shift and go to state 31

    factorVar                      shift and go to state 40
    expressionFunction             shift and go to state 39
    expressionTernaryCond          shift and go to state 26
    expressionComp                 shift and go to state 2
    expressionBoolOp               shift and go to state 18
    factorReg                      shift and go to state 3
    unaryExp                       shift and go to state 4
    memberAccess                   shift and go to state 17
    factorNumExp                   shift and go to state 38
    factorExp                      shift and go to state 5
    bool_atom                      shift and go to state 6
    expressionAssign               shift and go to state 29
    expression                     shift and go to state 138
    expressionVector               shift and go to state 15
    unaryExp2                      shift and go to state 42
    expressionVectorAt             shift and go to state 7
    aritExp                        shift and go to state 13

state 133

    (68) expressionFunction -> COLINEALES LPAREN expression COMMA expression RPAREN .

    DOT             reduce using rule 68 (expressionFunction -> COLINEALES LPAREN expression COMMA expression RPAREN .)
    DOUBLE_AO       reduce using rule 68 (expressionFunction -> COLINEALES LPAREN expression COMMA expression RPAREN .)
    AO              reduce using rule 68 (expressionFunction -> COLINEALES LPAREN expression COMMA expression RPAREN .)
    COMP            reduce using rule 68 (expressionFunction -> COLINEALES LPAREN expression COMMA expression RPAREN .)
    QUESTION        reduce using rule 68 (expressionFunction -> COLINEALES LPAREN expression COMMA expression RPAREN .)
    BOOL_OP         reduce using rule 68 (expressionFunction -> COLINEALES LPAREN expression COMMA expression RPAREN .)
    AOEQUAL         reduce using rule 68 (expressionFunction -> COLINEALES LPAREN expression COMMA expression RPAREN .)
    EQUAL           reduce using rule 68 (expressionFunction -> COLINEALES LPAREN expression COMMA expression RPAREN .)
    COMMA           reduce using rule 68 (expressionFunction -> COLINEALES LPAREN expression COMMA expression RPAREN .)
    RBRACKET        reduce using rule 68 (expressionFunction -> COLINEALES LPAREN expression COMMA expression RPAREN .)
    RBRACE          reduce using rule 68 (expressionFunction -> COLINEALES LPAREN expression COMMA expression RPAREN .)
    SEMICOLON       reduce using rule 68 (expressionFunction -> COLINEALES LPAREN expression COMMA expression RPAREN .)
    RPAREN          reduce using rule 68 (expressionFunction -> COLINEALES LPAREN expression COMMA expression RPAREN .)
    COLON           reduce using rule 68 (expressionFunction -> COLINEALES LPAREN expression COMMA expression RPAREN .)


state 134

    (64) do_while -> DO singleStatement WHILE LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 139


state 135

    (58) else -> ELSE . singleStatement
    (55) singleStatement -> . COMMENT singleStatement
    (56) singleStatement -> . statement
    (4) statement -> . expression SEMICOLON
    (5) statement -> . block
    (6) statement -> . if
    (7) statement -> . while
    (8) statement -> . for
    (9) statement -> . do_while
    (10) expression -> . expressionAssign
    (54) block -> . LBRACE code RBRACE
    (57) if -> . IF LPAREN expression RPAREN singleStatement else
    (62) while -> . WHILE LPAREN expression RPAREN singleStatement
    (63) for -> . FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement
    (64) do_while -> . DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON
    (44) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (46) expressionAssign -> . expressionTernaryCond
    (60) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (61) expressionTernaryCond -> . expressionBoolOp
    (31) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (32) expressionBoolOp -> . expressionComp
    (34) expressionComp -> . expressionComp COMP aritExp
    (35) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (33) unaryExp -> . NOT unaryExp
    (36) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . memberAccess
    (20) unaryExp2 -> . factorExp
    (48) memberAccess -> . memberAccess DOT factorVar
    (49) memberAccess -> . factorExp DOT factorVar
    (21) factorExp -> . factorNumExp
    (22) factorExp -> . bool_atom
    (23) factorExp -> . expressionVectorAt
    (24) factorExp -> . factorReg
    (25) factorExp -> . LPAREN expression RPAREN
    (26) factorExp -> . expressionFunction
    (28) factorNumExp -> . NUMBER
    (29) bool_atom -> . TRUE
    (30) bool_atom -> . FALSE
    (40) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (41) expressionVectorAt -> . expressionVector
    (42) expressionVectorAt -> . factorVar
    (43) expressionVectorAt -> . memberAccess
    (47) factorReg -> . LBRACE reg_items RBRACE
    (65) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (66) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (67) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (68) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (69) expressionFunction -> . PRINT LPAREN expression RPAREN
    (70) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (37) expressionVector -> . LBRACKET vector_items RBRACKET
    (27) factorVar -> . VAR

    COMMENT         shift and go to state 75
    LBRACE          shift and go to state 36
    IF              shift and go to state 41
    WHILE           shift and go to state 22
    FOR             shift and go to state 10
    DO              shift and go to state 37
    AO              shift and go to state 43
    DOUBLE_AO       shift and go to state 12
    NOT             shift and go to state 11
    STRING          shift and go to state 23
    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 44
    TRUE            shift and go to state 14
    FALSE           shift and go to state 30
    MULTIPLICACIONESCALAR shift and go to state 19
    CAPITALIZAR     shift and go to state 1
    COLINEALES      shift and go to state 27
    PRINT           shift and go to state 45
    LENGTH          shift and go to state 16
    LBRACKET        shift and go to state 32
    VAR             shift and go to state 31

    if                             shift and go to state 25
    expressionTernaryCond          shift and go to state 26
    expressionComp                 shift and go to state 2
    memberAccess                   shift and go to state 17
    factorReg                      shift and go to state 3
    statement                      shift and go to state 74
    factorExp                      shift and go to state 5
    bool_atom                      shift and go to state 6
    expressionAssign               shift and go to state 29
    expression                     shift and go to state 8
    do_while                       shift and go to state 9
    aritExp                        shift and go to state 13
    expressionFunction             shift and go to state 39
    for                            shift and go to state 34
    expressionBoolOp               shift and go to state 18
    factorNumExp                   shift and go to state 38
    expressionVectorAt             shift and go to state 7
    expressionVector               shift and go to state 15
    block                          shift and go to state 21
    factorVar                      shift and go to state 40
    while                          shift and go to state 20
    unaryExp2                      shift and go to state 42
    unaryExp                       shift and go to state 4
    singleStatement                shift and go to state 140

state 136

    (57) if -> IF LPAREN expression RPAREN singleStatement else .

    COMMENT         reduce using rule 57 (if -> IF LPAREN expression RPAREN singleStatement else .)
    LBRACE          reduce using rule 57 (if -> IF LPAREN expression RPAREN singleStatement else .)
    IF              reduce using rule 57 (if -> IF LPAREN expression RPAREN singleStatement else .)
    WHILE           reduce using rule 57 (if -> IF LPAREN expression RPAREN singleStatement else .)
    FOR             reduce using rule 57 (if -> IF LPAREN expression RPAREN singleStatement else .)
    DO              reduce using rule 57 (if -> IF LPAREN expression RPAREN singleStatement else .)
    AO              reduce using rule 57 (if -> IF LPAREN expression RPAREN singleStatement else .)
    DOUBLE_AO       reduce using rule 57 (if -> IF LPAREN expression RPAREN singleStatement else .)
    NOT             reduce using rule 57 (if -> IF LPAREN expression RPAREN singleStatement else .)
    STRING          reduce using rule 57 (if -> IF LPAREN expression RPAREN singleStatement else .)
    LPAREN          reduce using rule 57 (if -> IF LPAREN expression RPAREN singleStatement else .)
    NUMBER          reduce using rule 57 (if -> IF LPAREN expression RPAREN singleStatement else .)
    TRUE            reduce using rule 57 (if -> IF LPAREN expression RPAREN singleStatement else .)
    FALSE           reduce using rule 57 (if -> IF LPAREN expression RPAREN singleStatement else .)
    MULTIPLICACIONESCALAR reduce using rule 57 (if -> IF LPAREN expression RPAREN singleStatement else .)
    CAPITALIZAR     reduce using rule 57 (if -> IF LPAREN expression RPAREN singleStatement else .)
    COLINEALES      reduce using rule 57 (if -> IF LPAREN expression RPAREN singleStatement else .)
    PRINT           reduce using rule 57 (if -> IF LPAREN expression RPAREN singleStatement else .)
    LENGTH          reduce using rule 57 (if -> IF LPAREN expression RPAREN singleStatement else .)
    LBRACKET        reduce using rule 57 (if -> IF LPAREN expression RPAREN singleStatement else .)
    VAR             reduce using rule 57 (if -> IF LPAREN expression RPAREN singleStatement else .)
    RBRACE          reduce using rule 57 (if -> IF LPAREN expression RPAREN singleStatement else .)
    $end            reduce using rule 57 (if -> IF LPAREN expression RPAREN singleStatement else .)
    ELSE            reduce using rule 57 (if -> IF LPAREN expression RPAREN singleStatement else .)


state 137

    (63) for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr . RPAREN singleStatement

    RPAREN          shift and go to state 141


state 138

    (66) expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression . RPAREN

    RPAREN          shift and go to state 142


state 139

    (64) do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .

    COMMENT         reduce using rule 64 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    LBRACE          reduce using rule 64 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 64 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 64 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    FOR             reduce using rule 64 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    DO              reduce using rule 64 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    AO              reduce using rule 64 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    DOUBLE_AO       reduce using rule 64 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    NOT             reduce using rule 64 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    STRING          reduce using rule 64 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    LPAREN          reduce using rule 64 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    NUMBER          reduce using rule 64 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    TRUE            reduce using rule 64 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    FALSE           reduce using rule 64 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    MULTIPLICACIONESCALAR reduce using rule 64 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    CAPITALIZAR     reduce using rule 64 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    COLINEALES      reduce using rule 64 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    PRINT           reduce using rule 64 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    LENGTH          reduce using rule 64 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    LBRACKET        reduce using rule 64 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    VAR             reduce using rule 64 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    $end            reduce using rule 64 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 64 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    ELSE            reduce using rule 64 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)


state 140

    (58) else -> ELSE singleStatement .

    WHILE           reduce using rule 58 (else -> ELSE singleStatement .)
    COMMENT         reduce using rule 58 (else -> ELSE singleStatement .)
    LBRACE          reduce using rule 58 (else -> ELSE singleStatement .)
    IF              reduce using rule 58 (else -> ELSE singleStatement .)
    FOR             reduce using rule 58 (else -> ELSE singleStatement .)
    DO              reduce using rule 58 (else -> ELSE singleStatement .)
    AO              reduce using rule 58 (else -> ELSE singleStatement .)
    DOUBLE_AO       reduce using rule 58 (else -> ELSE singleStatement .)
    NOT             reduce using rule 58 (else -> ELSE singleStatement .)
    STRING          reduce using rule 58 (else -> ELSE singleStatement .)
    LPAREN          reduce using rule 58 (else -> ELSE singleStatement .)
    NUMBER          reduce using rule 58 (else -> ELSE singleStatement .)
    TRUE            reduce using rule 58 (else -> ELSE singleStatement .)
    FALSE           reduce using rule 58 (else -> ELSE singleStatement .)
    MULTIPLICACIONESCALAR reduce using rule 58 (else -> ELSE singleStatement .)
    CAPITALIZAR     reduce using rule 58 (else -> ELSE singleStatement .)
    COLINEALES      reduce using rule 58 (else -> ELSE singleStatement .)
    PRINT           reduce using rule 58 (else -> ELSE singleStatement .)
    LENGTH          reduce using rule 58 (else -> ELSE singleStatement .)
    LBRACKET        reduce using rule 58 (else -> ELSE singleStatement .)
    VAR             reduce using rule 58 (else -> ELSE singleStatement .)
    $end            reduce using rule 58 (else -> ELSE singleStatement .)
    RBRACE          reduce using rule 58 (else -> ELSE singleStatement .)
    ELSE            reduce using rule 58 (else -> ELSE singleStatement .)


state 141

    (63) for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN . singleStatement
    (55) singleStatement -> . COMMENT singleStatement
    (56) singleStatement -> . statement
    (4) statement -> . expression SEMICOLON
    (5) statement -> . block
    (6) statement -> . if
    (7) statement -> . while
    (8) statement -> . for
    (9) statement -> . do_while
    (10) expression -> . expressionAssign
    (54) block -> . LBRACE code RBRACE
    (57) if -> . IF LPAREN expression RPAREN singleStatement else
    (62) while -> . WHILE LPAREN expression RPAREN singleStatement
    (63) for -> . FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement
    (64) do_while -> . DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON
    (44) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (46) expressionAssign -> . expressionTernaryCond
    (60) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (61) expressionTernaryCond -> . expressionBoolOp
    (31) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (32) expressionBoolOp -> . expressionComp
    (34) expressionComp -> . expressionComp COMP aritExp
    (35) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (33) unaryExp -> . NOT unaryExp
    (36) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . memberAccess
    (20) unaryExp2 -> . factorExp
    (48) memberAccess -> . memberAccess DOT factorVar
    (49) memberAccess -> . factorExp DOT factorVar
    (21) factorExp -> . factorNumExp
    (22) factorExp -> . bool_atom
    (23) factorExp -> . expressionVectorAt
    (24) factorExp -> . factorReg
    (25) factorExp -> . LPAREN expression RPAREN
    (26) factorExp -> . expressionFunction
    (28) factorNumExp -> . NUMBER
    (29) bool_atom -> . TRUE
    (30) bool_atom -> . FALSE
    (40) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (41) expressionVectorAt -> . expressionVector
    (42) expressionVectorAt -> . factorVar
    (43) expressionVectorAt -> . memberAccess
    (47) factorReg -> . LBRACE reg_items RBRACE
    (65) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (66) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (67) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (68) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (69) expressionFunction -> . PRINT LPAREN expression RPAREN
    (70) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (37) expressionVector -> . LBRACKET vector_items RBRACKET
    (27) factorVar -> . VAR

    COMMENT         shift and go to state 75
    LBRACE          shift and go to state 36
    IF              shift and go to state 41
    WHILE           shift and go to state 22
    FOR             shift and go to state 10
    DO              shift and go to state 37
    AO              shift and go to state 43
    DOUBLE_AO       shift and go to state 12
    NOT             shift and go to state 11
    STRING          shift and go to state 23
    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 44
    TRUE            shift and go to state 14
    FALSE           shift and go to state 30
    MULTIPLICACIONESCALAR shift and go to state 19
    CAPITALIZAR     shift and go to state 1
    COLINEALES      shift and go to state 27
    PRINT           shift and go to state 45
    LENGTH          shift and go to state 16
    LBRACKET        shift and go to state 32
    VAR             shift and go to state 31

    if                             shift and go to state 25
    expressionTernaryCond          shift and go to state 26
    expressionComp                 shift and go to state 2
    memberAccess                   shift and go to state 17
    factorReg                      shift and go to state 3
    statement                      shift and go to state 74
    factorExp                      shift and go to state 5
    bool_atom                      shift and go to state 6
    expressionAssign               shift and go to state 29
    expression                     shift and go to state 8
    do_while                       shift and go to state 9
    aritExp                        shift and go to state 13
    expressionFunction             shift and go to state 39
    for                            shift and go to state 34
    expressionBoolOp               shift and go to state 18
    factorNumExp                   shift and go to state 38
    expressionVectorAt             shift and go to state 7
    expressionVector               shift and go to state 15
    block                          shift and go to state 21
    factorVar                      shift and go to state 40
    while                          shift and go to state 20
    unaryExp2                      shift and go to state 42
    unaryExp                       shift and go to state 4
    singleStatement                shift and go to state 143

state 142

    (66) expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN .

    DOT             reduce using rule 66 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN .)
    DOUBLE_AO       reduce using rule 66 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN .)
    AO              reduce using rule 66 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN .)
    COMP            reduce using rule 66 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN .)
    QUESTION        reduce using rule 66 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN .)
    BOOL_OP         reduce using rule 66 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN .)
    AOEQUAL         reduce using rule 66 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN .)
    EQUAL           reduce using rule 66 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN .)
    COMMA           reduce using rule 66 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN .)
    RBRACKET        reduce using rule 66 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN .)
    RBRACE          reduce using rule 66 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN .)
    SEMICOLON       reduce using rule 66 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN .)
    RPAREN          reduce using rule 66 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN .)
    COLON           reduce using rule 66 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN .)


state 143

    (63) for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .

    WHILE           reduce using rule 63 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    COMMENT         reduce using rule 63 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    LBRACE          reduce using rule 63 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    IF              reduce using rule 63 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    FOR             reduce using rule 63 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    DO              reduce using rule 63 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    AO              reduce using rule 63 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    DOUBLE_AO       reduce using rule 63 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    NOT             reduce using rule 63 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    STRING          reduce using rule 63 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    LPAREN          reduce using rule 63 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    NUMBER          reduce using rule 63 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    TRUE            reduce using rule 63 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    FALSE           reduce using rule 63 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    MULTIPLICACIONESCALAR reduce using rule 63 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    CAPITALIZAR     reduce using rule 63 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    COLINEALES      reduce using rule 63 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    PRINT           reduce using rule 63 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    LENGTH          reduce using rule 63 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    LBRACKET        reduce using rule 63 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    VAR             reduce using rule 63 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    $end            reduce using rule 63 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    RBRACE          reduce using rule 63 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    ELSE            reduce using rule 63 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for DOT in state 17 resolved as shift
WARNING: shift/reduce conflict for AOEQUAL in state 26 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 26 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 129 resolved as shift
WARNING: reduce/reduce conflict in state 17 resolved using rule (unaryExp2 -> memberAccess)
WARNING: rejected rule (expressionVectorAt -> memberAccess) in state 17
