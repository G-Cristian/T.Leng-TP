Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> code
Rule 1     code -> statement code
Rule 2     code -> COMMENT code
Rule 3     code -> <empty>
Rule 4     statement -> expression SEMICOLON
Rule 5     statement -> block
Rule 6     statement -> if
Rule 7     statement -> while
Rule 8     statement -> for
Rule 9     statement -> do_while
Rule 10    expression -> expressionAssign
Rule 11    optional_expr -> expression
Rule 12    optional_expr -> <empty>
Rule 13    aritExp -> aritExp AO unaryExp
Rule 14    aritExp -> unaryExp
Rule 15    unaryExp -> AO unaryExp
Rule 16    unaryExp -> DOUBLE_AO unaryExp
Rule 17    unaryExp -> unaryExp2
Rule 18    unaryExp2 -> unaryExp2 DOUBLE_AO
Rule 19    unaryExp2 -> factorExp
Rule 20    factorExp -> factorNumExp
Rule 21    factorExp -> bool_atom
Rule 22    factorExp -> expressionVectorAt
Rule 23    factorExp -> factorReg
Rule 24    factorExp -> LPAREN expression RPAREN
Rule 25    factorExp -> expressionFunction
Rule 26    factorVar -> VAR
Rule 27    factorNumExp -> NUMBER
Rule 28    bool_atom -> TRUE
Rule 29    bool_atom -> FALSE
Rule 30    expressionBoolOp -> expressionBoolOp BOOL_OP expressionComp
Rule 31    expressionBoolOp -> expressionComp
Rule 32    unaryExp -> NOT unaryExp
Rule 33    expressionComp -> expressionComp COMP aritExp
Rule 34    expressionComp -> aritExp
Rule 35    unaryExp -> STRING
Rule 36    expressionVector -> LBRACKET vector_items RBRACKET
Rule 37    vector_items -> expression COMMA vector_items
Rule 38    vector_items -> expression
Rule 39    expressionVectorAt -> expressionVectorAt LBRACKET expression RBRACKET
Rule 40    expressionVectorAt -> expressionVector
Rule 41    expressionVectorAt -> factorVar
Rule 42    expressionVectorAt -> memberAccess
Rule 43    expressionAssign -> expressionTernaryCond AOEQUAL expressionAssign
Rule 44    expressionAssign -> expressionTernaryCond EQUAL expressionAssign
Rule 45    expressionAssign -> expressionTernaryCond
Rule 46    factorReg -> LBRACE reg_items RBRACE
Rule 47    memberAccess -> factorExp DOT factorVar
Rule 48    reg_items -> reg_field COMMA reg_items
Rule 49    reg_items -> reg_field
Rule 50    reg_field -> factorVar COLON expression
Rule 51    comments -> <empty>
Rule 52    block -> LBRACE code RBRACE
Rule 53    singleStatement -> COMMENT singleStatement
Rule 54    singleStatement -> statement
Rule 55    if -> IF LPAREN expression RPAREN singleStatement else
Rule 56    else -> ELSE singleStatement
Rule 57    else -> <empty>
Rule 58    expressionTernaryCond -> expressionTernaryCond QUESTION expressionTernaryCond COLON expressionBoolOp
Rule 59    expressionTernaryCond -> expressionBoolOp
Rule 60    while -> WHILE LPAREN expression RPAREN singleStatement
Rule 61    for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement
Rule 62    do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON
Rule 63    expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
Rule 64    expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
Rule 65    expressionFunction -> CAPITALIZAR LPAREN expression RPAREN
Rule 66    expressionFunction -> COLINEALES LPAREN expression COMMA expression RPAREN
Rule 67    expressionFunction -> PRINT LPAREN expression RPAREN
Rule 68    expressionFunction -> LENGTH LPAREN expression RPAREN

Terminals, with rules where they appear

AO                   : 13 15
AOEQUAL              : 43
BOOL_OP              : 30
CAPITALIZAR          : 65
COLINEALES           : 66
COLON                : 50 58
COMMA                : 37 48 63 64 64 66
COMMENT              : 2 53
COMP                 : 33
DO                   : 62
DOT                  : 47
DOUBLE_AO            : 16 18
ELSE                 : 56
EQUAL                : 44
FALSE                : 29
FOR                  : 61
IF                   : 55
LBRACE               : 46 52
LBRACKET             : 36 39
LENGTH               : 68
LPAREN               : 24 55 60 61 62 63 64 65 66 67 68
MULTIPLICACIONESCALAR : 63 64
NOT                  : 32
NUMBER               : 27
PRINT                : 67
QUESTION             : 58
RBRACE               : 46 52
RBRACKET             : 36 39
RPAREN               : 24 55 60 61 62 63 64 65 66 67 68
SEMICOLON            : 4 61 61 62
STRING               : 35
TRUE                 : 28
VAR                  : 26
WHILE                : 60 62
error                : 

Nonterminals, with rules where they appear

aritExp              : 13 33 34
block                : 5
bool_atom            : 21
code                 : 1 2 52 0
comments             : 
do_while             : 9
else                 : 55
expression           : 4 11 24 37 38 39 50 55 60 61 62 63 63 64 64 64 65 66 66 67 68
expressionAssign     : 10 43 44
expressionBoolOp     : 30 58 59
expressionComp       : 30 31 33
expressionFunction   : 25
expressionTernaryCond : 43 44 45 58 58
expressionVector     : 40
expressionVectorAt   : 22 39
factorExp            : 19 47
factorNumExp         : 20
factorReg            : 23
factorVar            : 41 47 50
for                  : 8
if                   : 6
memberAccess         : 42
optional_expr        : 61 61
reg_field            : 48 49
reg_items            : 46 48
singleStatement      : 53 55 56 60 61 62
statement            : 1 54
unaryExp             : 13 14 15 16 32
unaryExp2            : 17 18
vector_items         : 36 37
while                : 7

Parsing method: LALR

state 0

    (0) S' -> . code
    (1) code -> . statement code
    (2) code -> . COMMENT code
    (3) code -> .
    (4) statement -> . expression SEMICOLON
    (5) statement -> . block
    (6) statement -> . if
    (7) statement -> . while
    (8) statement -> . for
    (9) statement -> . do_while
    (10) expression -> . expressionAssign
    (52) block -> . LBRACE code RBRACE
    (55) if -> . IF LPAREN expression RPAREN singleStatement else
    (60) while -> . WHILE LPAREN expression RPAREN singleStatement
    (61) for -> . FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement
    (62) do_while -> . DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON
    (43) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (44) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond
    (58) expressionTernaryCond -> . expressionTernaryCond QUESTION expressionTernaryCond COLON expressionBoolOp
    (59) expressionTernaryCond -> . expressionBoolOp
    (30) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (31) expressionBoolOp -> . expressionComp
    (33) expressionComp -> . expressionComp COMP aritExp
    (34) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (32) unaryExp -> . NOT unaryExp
    (35) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . factorReg
    (24) factorExp -> . LPAREN expression RPAREN
    (25) factorExp -> . expressionFunction
    (27) factorNumExp -> . NUMBER
    (28) bool_atom -> . TRUE
    (29) bool_atom -> . FALSE
    (39) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (40) expressionVectorAt -> . expressionVector
    (41) expressionVectorAt -> . factorVar
    (42) expressionVectorAt -> . memberAccess
    (46) factorReg -> . LBRACE reg_items RBRACE
    (63) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (65) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (66) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (67) expressionFunction -> . PRINT LPAREN expression RPAREN
    (68) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (36) expressionVector -> . LBRACKET vector_items RBRACKET
    (26) factorVar -> . VAR
    (47) memberAccess -> . factorExp DOT factorVar

    COMMENT         shift and go to state 10
    $end            reduce using rule 3 (code -> .)
    LBRACE          shift and go to state 32
    IF              shift and go to state 30
    WHILE           shift and go to state 6
    FOR             shift and go to state 21
    DO              shift and go to state 2
    AO              shift and go to state 24
    DOUBLE_AO       shift and go to state 11
    NOT             shift and go to state 42
    STRING          shift and go to state 20
    LPAREN          shift and go to state 26
    NUMBER          shift and go to state 22
    TRUE            shift and go to state 14
    FALSE           shift and go to state 33
    MULTIPLICACIONESCALAR shift and go to state 17
    CAPITALIZAR     shift and go to state 37
    COLINEALES      shift and go to state 4
    PRINT           shift and go to state 7
    LENGTH          shift and go to state 15
    LBRACKET        shift and go to state 5
    VAR             shift and go to state 28

    factorNumExp                   shift and go to state 1
    code                           shift and go to state 3
    factorReg                      shift and go to state 8
    if                             shift and go to state 9
    expressionComp                 shift and go to state 12
    for                            shift and go to state 13
    memberAccess                   shift and go to state 16
    statement                      shift and go to state 18
    bool_atom                      shift and go to state 19
    expressionAssign               shift and go to state 23
    expressionFunction             shift and go to state 25
    factorExp                      shift and go to state 27
    aritExp                        shift and go to state 29
    expressionTernaryCond          shift and go to state 31
    expressionVector               shift and go to state 34
    unaryExp2                      shift and go to state 35
    expressionVectorAt             shift and go to state 36
    factorVar                      shift and go to state 38
    while                          shift and go to state 39
    expressionBoolOp               shift and go to state 40
    do_while                       shift and go to state 41
    unaryExp                       shift and go to state 43
    expression                     shift and go to state 44
    block                          shift and go to state 45

state 1

    (20) factorExp -> factorNumExp .

    DOT             reduce using rule 20 (factorExp -> factorNumExp .)
    DOUBLE_AO       reduce using rule 20 (factorExp -> factorNumExp .)
    AO              reduce using rule 20 (factorExp -> factorNumExp .)
    COMP            reduce using rule 20 (factorExp -> factorNumExp .)
    BOOL_OP         reduce using rule 20 (factorExp -> factorNumExp .)
    AOEQUAL         reduce using rule 20 (factorExp -> factorNumExp .)
    EQUAL           reduce using rule 20 (factorExp -> factorNumExp .)
    QUESTION        reduce using rule 20 (factorExp -> factorNumExp .)
    COMMA           reduce using rule 20 (factorExp -> factorNumExp .)
    RBRACKET        reduce using rule 20 (factorExp -> factorNumExp .)
    RBRACE          reduce using rule 20 (factorExp -> factorNumExp .)
    RPAREN          reduce using rule 20 (factorExp -> factorNumExp .)
    SEMICOLON       reduce using rule 20 (factorExp -> factorNumExp .)
    COLON           reduce using rule 20 (factorExp -> factorNumExp .)


state 2

    (62) do_while -> DO . singleStatement WHILE LPAREN expression RPAREN SEMICOLON
    (53) singleStatement -> . COMMENT singleStatement
    (54) singleStatement -> . statement
    (4) statement -> . expression SEMICOLON
    (5) statement -> . block
    (6) statement -> . if
    (7) statement -> . while
    (8) statement -> . for
    (9) statement -> . do_while
    (10) expression -> . expressionAssign
    (52) block -> . LBRACE code RBRACE
    (55) if -> . IF LPAREN expression RPAREN singleStatement else
    (60) while -> . WHILE LPAREN expression RPAREN singleStatement
    (61) for -> . FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement
    (62) do_while -> . DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON
    (43) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (44) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond
    (58) expressionTernaryCond -> . expressionTernaryCond QUESTION expressionTernaryCond COLON expressionBoolOp
    (59) expressionTernaryCond -> . expressionBoolOp
    (30) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (31) expressionBoolOp -> . expressionComp
    (33) expressionComp -> . expressionComp COMP aritExp
    (34) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (32) unaryExp -> . NOT unaryExp
    (35) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . factorReg
    (24) factorExp -> . LPAREN expression RPAREN
    (25) factorExp -> . expressionFunction
    (27) factorNumExp -> . NUMBER
    (28) bool_atom -> . TRUE
    (29) bool_atom -> . FALSE
    (39) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (40) expressionVectorAt -> . expressionVector
    (41) expressionVectorAt -> . factorVar
    (42) expressionVectorAt -> . memberAccess
    (46) factorReg -> . LBRACE reg_items RBRACE
    (63) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (65) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (66) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (67) expressionFunction -> . PRINT LPAREN expression RPAREN
    (68) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (36) expressionVector -> . LBRACKET vector_items RBRACKET
    (26) factorVar -> . VAR
    (47) memberAccess -> . factorExp DOT factorVar

    COMMENT         shift and go to state 46
    LBRACE          shift and go to state 32
    IF              shift and go to state 30
    WHILE           shift and go to state 6
    FOR             shift and go to state 21
    DO              shift and go to state 2
    AO              shift and go to state 24
    DOUBLE_AO       shift and go to state 11
    NOT             shift and go to state 42
    STRING          shift and go to state 20
    LPAREN          shift and go to state 26
    NUMBER          shift and go to state 22
    TRUE            shift and go to state 14
    FALSE           shift and go to state 33
    MULTIPLICACIONESCALAR shift and go to state 17
    CAPITALIZAR     shift and go to state 37
    COLINEALES      shift and go to state 4
    PRINT           shift and go to state 7
    LENGTH          shift and go to state 15
    LBRACKET        shift and go to state 5
    VAR             shift and go to state 28

    factorNumExp                   shift and go to state 1
    factorReg                      shift and go to state 8
    if                             shift and go to state 9
    expressionComp                 shift and go to state 12
    for                            shift and go to state 13
    memberAccess                   shift and go to state 16
    statement                      shift and go to state 47
    bool_atom                      shift and go to state 19
    expressionAssign               shift and go to state 23
    expressionFunction             shift and go to state 25
    factorExp                      shift and go to state 27
    aritExp                        shift and go to state 29
    expressionTernaryCond          shift and go to state 31
    expressionVector               shift and go to state 34
    singleStatement                shift and go to state 48
    unaryExp2                      shift and go to state 35
    expressionVectorAt             shift and go to state 36
    factorVar                      shift and go to state 38
    while                          shift and go to state 39
    expressionBoolOp               shift and go to state 40
    do_while                       shift and go to state 41
    unaryExp                       shift and go to state 43
    expression                     shift and go to state 44
    block                          shift and go to state 45

state 3

    (0) S' -> code .



state 4

    (66) expressionFunction -> COLINEALES . LPAREN expression COMMA expression RPAREN

    LPAREN          shift and go to state 49


state 5

    (36) expressionVector -> LBRACKET . vector_items RBRACKET
    (37) vector_items -> . expression COMMA vector_items
    (38) vector_items -> . expression
    (10) expression -> . expressionAssign
    (43) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (44) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond
    (58) expressionTernaryCond -> . expressionTernaryCond QUESTION expressionTernaryCond COLON expressionBoolOp
    (59) expressionTernaryCond -> . expressionBoolOp
    (30) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (31) expressionBoolOp -> . expressionComp
    (33) expressionComp -> . expressionComp COMP aritExp
    (34) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (32) unaryExp -> . NOT unaryExp
    (35) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . factorReg
    (24) factorExp -> . LPAREN expression RPAREN
    (25) factorExp -> . expressionFunction
    (27) factorNumExp -> . NUMBER
    (28) bool_atom -> . TRUE
    (29) bool_atom -> . FALSE
    (39) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (40) expressionVectorAt -> . expressionVector
    (41) expressionVectorAt -> . factorVar
    (42) expressionVectorAt -> . memberAccess
    (46) factorReg -> . LBRACE reg_items RBRACE
    (63) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (65) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (66) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (67) expressionFunction -> . PRINT LPAREN expression RPAREN
    (68) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (36) expressionVector -> . LBRACKET vector_items RBRACKET
    (26) factorVar -> . VAR
    (47) memberAccess -> . factorExp DOT factorVar

    AO              shift and go to state 24
    DOUBLE_AO       shift and go to state 11
    NOT             shift and go to state 42
    STRING          shift and go to state 20
    LPAREN          shift and go to state 26
    NUMBER          shift and go to state 22
    TRUE            shift and go to state 14
    FALSE           shift and go to state 33
    LBRACE          shift and go to state 50
    MULTIPLICACIONESCALAR shift and go to state 17
    CAPITALIZAR     shift and go to state 37
    COLINEALES      shift and go to state 4
    PRINT           shift and go to state 7
    LENGTH          shift and go to state 15
    LBRACKET        shift and go to state 5
    VAR             shift and go to state 28

    vector_items                   shift and go to state 51
    factorNumExp                   shift and go to state 1
    expressionTernaryCond          shift and go to state 31
    expressionVector               shift and go to state 34
    aritExp                        shift and go to state 29
    expressionComp                 shift and go to state 12
    expressionAssign               shift and go to state 23
    unaryExp2                      shift and go to state 35
    expressionVectorAt             shift and go to state 36
    expressionFunction             shift and go to state 25
    factorVar                      shift and go to state 38
    expressionBoolOp               shift and go to state 40
    factorExp                      shift and go to state 27
    bool_atom                      shift and go to state 19
    unaryExp                       shift and go to state 43
    expression                     shift and go to state 52
    factorReg                      shift and go to state 8
    memberAccess                   shift and go to state 16

state 6

    (60) while -> WHILE . LPAREN expression RPAREN singleStatement

    LPAREN          shift and go to state 53


state 7

    (67) expressionFunction -> PRINT . LPAREN expression RPAREN

    LPAREN          shift and go to state 54


state 8

    (23) factorExp -> factorReg .

    DOT             reduce using rule 23 (factorExp -> factorReg .)
    DOUBLE_AO       reduce using rule 23 (factorExp -> factorReg .)
    AO              reduce using rule 23 (factorExp -> factorReg .)
    COMP            reduce using rule 23 (factorExp -> factorReg .)
    BOOL_OP         reduce using rule 23 (factorExp -> factorReg .)
    AOEQUAL         reduce using rule 23 (factorExp -> factorReg .)
    EQUAL           reduce using rule 23 (factorExp -> factorReg .)
    QUESTION        reduce using rule 23 (factorExp -> factorReg .)
    COMMA           reduce using rule 23 (factorExp -> factorReg .)
    RBRACKET        reduce using rule 23 (factorExp -> factorReg .)
    RBRACE          reduce using rule 23 (factorExp -> factorReg .)
    RPAREN          reduce using rule 23 (factorExp -> factorReg .)
    SEMICOLON       reduce using rule 23 (factorExp -> factorReg .)
    COLON           reduce using rule 23 (factorExp -> factorReg .)


state 9

    (6) statement -> if .

    COMMENT         reduce using rule 6 (statement -> if .)
    LBRACE          reduce using rule 6 (statement -> if .)
    IF              reduce using rule 6 (statement -> if .)
    WHILE           reduce using rule 6 (statement -> if .)
    FOR             reduce using rule 6 (statement -> if .)
    DO              reduce using rule 6 (statement -> if .)
    AO              reduce using rule 6 (statement -> if .)
    DOUBLE_AO       reduce using rule 6 (statement -> if .)
    NOT             reduce using rule 6 (statement -> if .)
    STRING          reduce using rule 6 (statement -> if .)
    LPAREN          reduce using rule 6 (statement -> if .)
    NUMBER          reduce using rule 6 (statement -> if .)
    TRUE            reduce using rule 6 (statement -> if .)
    FALSE           reduce using rule 6 (statement -> if .)
    MULTIPLICACIONESCALAR reduce using rule 6 (statement -> if .)
    CAPITALIZAR     reduce using rule 6 (statement -> if .)
    COLINEALES      reduce using rule 6 (statement -> if .)
    PRINT           reduce using rule 6 (statement -> if .)
    LENGTH          reduce using rule 6 (statement -> if .)
    LBRACKET        reduce using rule 6 (statement -> if .)
    VAR             reduce using rule 6 (statement -> if .)
    $end            reduce using rule 6 (statement -> if .)
    RBRACE          reduce using rule 6 (statement -> if .)
    ELSE            reduce using rule 6 (statement -> if .)


state 10

    (2) code -> COMMENT . code
    (1) code -> . statement code
    (2) code -> . COMMENT code
    (3) code -> .
    (4) statement -> . expression SEMICOLON
    (5) statement -> . block
    (6) statement -> . if
    (7) statement -> . while
    (8) statement -> . for
    (9) statement -> . do_while
    (10) expression -> . expressionAssign
    (52) block -> . LBRACE code RBRACE
    (55) if -> . IF LPAREN expression RPAREN singleStatement else
    (60) while -> . WHILE LPAREN expression RPAREN singleStatement
    (61) for -> . FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement
    (62) do_while -> . DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON
    (43) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (44) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond
    (58) expressionTernaryCond -> . expressionTernaryCond QUESTION expressionTernaryCond COLON expressionBoolOp
    (59) expressionTernaryCond -> . expressionBoolOp
    (30) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (31) expressionBoolOp -> . expressionComp
    (33) expressionComp -> . expressionComp COMP aritExp
    (34) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (32) unaryExp -> . NOT unaryExp
    (35) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . factorReg
    (24) factorExp -> . LPAREN expression RPAREN
    (25) factorExp -> . expressionFunction
    (27) factorNumExp -> . NUMBER
    (28) bool_atom -> . TRUE
    (29) bool_atom -> . FALSE
    (39) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (40) expressionVectorAt -> . expressionVector
    (41) expressionVectorAt -> . factorVar
    (42) expressionVectorAt -> . memberAccess
    (46) factorReg -> . LBRACE reg_items RBRACE
    (63) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (65) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (66) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (67) expressionFunction -> . PRINT LPAREN expression RPAREN
    (68) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (36) expressionVector -> . LBRACKET vector_items RBRACKET
    (26) factorVar -> . VAR
    (47) memberAccess -> . factorExp DOT factorVar

    COMMENT         shift and go to state 10
    $end            reduce using rule 3 (code -> .)
    RBRACE          reduce using rule 3 (code -> .)
    LBRACE          shift and go to state 32
    IF              shift and go to state 30
    WHILE           shift and go to state 6
    FOR             shift and go to state 21
    DO              shift and go to state 2
    AO              shift and go to state 24
    DOUBLE_AO       shift and go to state 11
    NOT             shift and go to state 42
    STRING          shift and go to state 20
    LPAREN          shift and go to state 26
    NUMBER          shift and go to state 22
    TRUE            shift and go to state 14
    FALSE           shift and go to state 33
    MULTIPLICACIONESCALAR shift and go to state 17
    CAPITALIZAR     shift and go to state 37
    COLINEALES      shift and go to state 4
    PRINT           shift and go to state 7
    LENGTH          shift and go to state 15
    LBRACKET        shift and go to state 5
    VAR             shift and go to state 28

    factorNumExp                   shift and go to state 1
    code                           shift and go to state 55
    factorReg                      shift and go to state 8
    if                             shift and go to state 9
    expressionComp                 shift and go to state 12
    for                            shift and go to state 13
    memberAccess                   shift and go to state 16
    statement                      shift and go to state 18
    bool_atom                      shift and go to state 19
    expressionAssign               shift and go to state 23
    expressionFunction             shift and go to state 25
    factorExp                      shift and go to state 27
    aritExp                        shift and go to state 29
    expressionTernaryCond          shift and go to state 31
    expressionVector               shift and go to state 34
    unaryExp2                      shift and go to state 35
    expressionVectorAt             shift and go to state 36
    factorVar                      shift and go to state 38
    while                          shift and go to state 39
    expressionBoolOp               shift and go to state 40
    do_while                       shift and go to state 41
    unaryExp                       shift and go to state 43
    expression                     shift and go to state 44
    block                          shift and go to state 45

state 11

    (16) unaryExp -> DOUBLE_AO . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (32) unaryExp -> . NOT unaryExp
    (35) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . factorReg
    (24) factorExp -> . LPAREN expression RPAREN
    (25) factorExp -> . expressionFunction
    (27) factorNumExp -> . NUMBER
    (28) bool_atom -> . TRUE
    (29) bool_atom -> . FALSE
    (39) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (40) expressionVectorAt -> . expressionVector
    (41) expressionVectorAt -> . factorVar
    (42) expressionVectorAt -> . memberAccess
    (46) factorReg -> . LBRACE reg_items RBRACE
    (63) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (65) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (66) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (67) expressionFunction -> . PRINT LPAREN expression RPAREN
    (68) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (36) expressionVector -> . LBRACKET vector_items RBRACKET
    (26) factorVar -> . VAR
    (47) memberAccess -> . factorExp DOT factorVar

    AO              shift and go to state 24
    DOUBLE_AO       shift and go to state 11
    NOT             shift and go to state 42
    STRING          shift and go to state 20
    LPAREN          shift and go to state 26
    NUMBER          shift and go to state 22
    TRUE            shift and go to state 14
    FALSE           shift and go to state 33
    LBRACE          shift and go to state 50
    MULTIPLICACIONESCALAR shift and go to state 17
    CAPITALIZAR     shift and go to state 37
    COLINEALES      shift and go to state 4
    PRINT           shift and go to state 7
    LENGTH          shift and go to state 15
    LBRACKET        shift and go to state 5
    VAR             shift and go to state 28

    factorNumExp                   shift and go to state 1
    memberAccess                   shift and go to state 16
    expressionVector               shift and go to state 34
    unaryExp2                      shift and go to state 35
    expressionVectorAt             shift and go to state 36
    expressionFunction             shift and go to state 25
    factorVar                      shift and go to state 38
    factorExp                      shift and go to state 27
    bool_atom                      shift and go to state 19
    unaryExp                       shift and go to state 56
    factorReg                      shift and go to state 8

state 12

    (31) expressionBoolOp -> expressionComp .
    (33) expressionComp -> expressionComp . COMP aritExp

    BOOL_OP         reduce using rule 31 (expressionBoolOp -> expressionComp .)
    AOEQUAL         reduce using rule 31 (expressionBoolOp -> expressionComp .)
    EQUAL           reduce using rule 31 (expressionBoolOp -> expressionComp .)
    QUESTION        reduce using rule 31 (expressionBoolOp -> expressionComp .)
    SEMICOLON       reduce using rule 31 (expressionBoolOp -> expressionComp .)
    COMMA           reduce using rule 31 (expressionBoolOp -> expressionComp .)
    RBRACKET        reduce using rule 31 (expressionBoolOp -> expressionComp .)
    RPAREN          reduce using rule 31 (expressionBoolOp -> expressionComp .)
    COLON           reduce using rule 31 (expressionBoolOp -> expressionComp .)
    RBRACE          reduce using rule 31 (expressionBoolOp -> expressionComp .)
    COMP            shift and go to state 57


state 13

    (8) statement -> for .

    COMMENT         reduce using rule 8 (statement -> for .)
    LBRACE          reduce using rule 8 (statement -> for .)
    IF              reduce using rule 8 (statement -> for .)
    WHILE           reduce using rule 8 (statement -> for .)
    FOR             reduce using rule 8 (statement -> for .)
    DO              reduce using rule 8 (statement -> for .)
    AO              reduce using rule 8 (statement -> for .)
    DOUBLE_AO       reduce using rule 8 (statement -> for .)
    NOT             reduce using rule 8 (statement -> for .)
    STRING          reduce using rule 8 (statement -> for .)
    LPAREN          reduce using rule 8 (statement -> for .)
    NUMBER          reduce using rule 8 (statement -> for .)
    TRUE            reduce using rule 8 (statement -> for .)
    FALSE           reduce using rule 8 (statement -> for .)
    MULTIPLICACIONESCALAR reduce using rule 8 (statement -> for .)
    CAPITALIZAR     reduce using rule 8 (statement -> for .)
    COLINEALES      reduce using rule 8 (statement -> for .)
    PRINT           reduce using rule 8 (statement -> for .)
    LENGTH          reduce using rule 8 (statement -> for .)
    LBRACKET        reduce using rule 8 (statement -> for .)
    VAR             reduce using rule 8 (statement -> for .)
    $end            reduce using rule 8 (statement -> for .)
    RBRACE          reduce using rule 8 (statement -> for .)
    ELSE            reduce using rule 8 (statement -> for .)


state 14

    (28) bool_atom -> TRUE .

    DOT             reduce using rule 28 (bool_atom -> TRUE .)
    DOUBLE_AO       reduce using rule 28 (bool_atom -> TRUE .)
    AO              reduce using rule 28 (bool_atom -> TRUE .)
    COMP            reduce using rule 28 (bool_atom -> TRUE .)
    BOOL_OP         reduce using rule 28 (bool_atom -> TRUE .)
    AOEQUAL         reduce using rule 28 (bool_atom -> TRUE .)
    EQUAL           reduce using rule 28 (bool_atom -> TRUE .)
    QUESTION        reduce using rule 28 (bool_atom -> TRUE .)
    RPAREN          reduce using rule 28 (bool_atom -> TRUE .)
    SEMICOLON       reduce using rule 28 (bool_atom -> TRUE .)
    COMMA           reduce using rule 28 (bool_atom -> TRUE .)
    RBRACKET        reduce using rule 28 (bool_atom -> TRUE .)
    COLON           reduce using rule 28 (bool_atom -> TRUE .)
    RBRACE          reduce using rule 28 (bool_atom -> TRUE .)


state 15

    (68) expressionFunction -> LENGTH . LPAREN expression RPAREN

    LPAREN          shift and go to state 58


state 16

    (42) expressionVectorAt -> memberAccess .

    LBRACKET        reduce using rule 42 (expressionVectorAt -> memberAccess .)
    DOT             reduce using rule 42 (expressionVectorAt -> memberAccess .)
    DOUBLE_AO       reduce using rule 42 (expressionVectorAt -> memberAccess .)
    AO              reduce using rule 42 (expressionVectorAt -> memberAccess .)
    COMP            reduce using rule 42 (expressionVectorAt -> memberAccess .)
    BOOL_OP         reduce using rule 42 (expressionVectorAt -> memberAccess .)
    AOEQUAL         reduce using rule 42 (expressionVectorAt -> memberAccess .)
    EQUAL           reduce using rule 42 (expressionVectorAt -> memberAccess .)
    QUESTION        reduce using rule 42 (expressionVectorAt -> memberAccess .)
    RPAREN          reduce using rule 42 (expressionVectorAt -> memberAccess .)
    SEMICOLON       reduce using rule 42 (expressionVectorAt -> memberAccess .)
    COMMA           reduce using rule 42 (expressionVectorAt -> memberAccess .)
    RBRACKET        reduce using rule 42 (expressionVectorAt -> memberAccess .)
    COLON           reduce using rule 42 (expressionVectorAt -> memberAccess .)
    RBRACE          reduce using rule 42 (expressionVectorAt -> memberAccess .)


state 17

    (63) expressionFunction -> MULTIPLICACIONESCALAR . LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> MULTIPLICACIONESCALAR . LPAREN expression COMMA expression COMMA expression RPAREN

    LPAREN          shift and go to state 59


state 18

    (1) code -> statement . code
    (1) code -> . statement code
    (2) code -> . COMMENT code
    (3) code -> .
    (4) statement -> . expression SEMICOLON
    (5) statement -> . block
    (6) statement -> . if
    (7) statement -> . while
    (8) statement -> . for
    (9) statement -> . do_while
    (10) expression -> . expressionAssign
    (52) block -> . LBRACE code RBRACE
    (55) if -> . IF LPAREN expression RPAREN singleStatement else
    (60) while -> . WHILE LPAREN expression RPAREN singleStatement
    (61) for -> . FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement
    (62) do_while -> . DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON
    (43) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (44) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond
    (58) expressionTernaryCond -> . expressionTernaryCond QUESTION expressionTernaryCond COLON expressionBoolOp
    (59) expressionTernaryCond -> . expressionBoolOp
    (30) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (31) expressionBoolOp -> . expressionComp
    (33) expressionComp -> . expressionComp COMP aritExp
    (34) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (32) unaryExp -> . NOT unaryExp
    (35) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . factorReg
    (24) factorExp -> . LPAREN expression RPAREN
    (25) factorExp -> . expressionFunction
    (27) factorNumExp -> . NUMBER
    (28) bool_atom -> . TRUE
    (29) bool_atom -> . FALSE
    (39) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (40) expressionVectorAt -> . expressionVector
    (41) expressionVectorAt -> . factorVar
    (42) expressionVectorAt -> . memberAccess
    (46) factorReg -> . LBRACE reg_items RBRACE
    (63) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (65) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (66) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (67) expressionFunction -> . PRINT LPAREN expression RPAREN
    (68) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (36) expressionVector -> . LBRACKET vector_items RBRACKET
    (26) factorVar -> . VAR
    (47) memberAccess -> . factorExp DOT factorVar

    COMMENT         shift and go to state 10
    $end            reduce using rule 3 (code -> .)
    RBRACE          reduce using rule 3 (code -> .)
    LBRACE          shift and go to state 32
    IF              shift and go to state 30
    WHILE           shift and go to state 6
    FOR             shift and go to state 21
    DO              shift and go to state 2
    AO              shift and go to state 24
    DOUBLE_AO       shift and go to state 11
    NOT             shift and go to state 42
    STRING          shift and go to state 20
    LPAREN          shift and go to state 26
    NUMBER          shift and go to state 22
    TRUE            shift and go to state 14
    FALSE           shift and go to state 33
    MULTIPLICACIONESCALAR shift and go to state 17
    CAPITALIZAR     shift and go to state 37
    COLINEALES      shift and go to state 4
    PRINT           shift and go to state 7
    LENGTH          shift and go to state 15
    LBRACKET        shift and go to state 5
    VAR             shift and go to state 28

    factorNumExp                   shift and go to state 1
    code                           shift and go to state 60
    factorReg                      shift and go to state 8
    if                             shift and go to state 9
    expressionComp                 shift and go to state 12
    for                            shift and go to state 13
    memberAccess                   shift and go to state 16
    statement                      shift and go to state 18
    bool_atom                      shift and go to state 19
    expressionAssign               shift and go to state 23
    expressionFunction             shift and go to state 25
    factorExp                      shift and go to state 27
    aritExp                        shift and go to state 29
    expressionTernaryCond          shift and go to state 31
    expressionVector               shift and go to state 34
    unaryExp2                      shift and go to state 35
    expressionVectorAt             shift and go to state 36
    factorVar                      shift and go to state 38
    while                          shift and go to state 39
    expressionBoolOp               shift and go to state 40
    do_while                       shift and go to state 41
    unaryExp                       shift and go to state 43
    expression                     shift and go to state 44
    block                          shift and go to state 45

state 19

    (21) factorExp -> bool_atom .

    DOT             reduce using rule 21 (factorExp -> bool_atom .)
    DOUBLE_AO       reduce using rule 21 (factorExp -> bool_atom .)
    AO              reduce using rule 21 (factorExp -> bool_atom .)
    COMP            reduce using rule 21 (factorExp -> bool_atom .)
    BOOL_OP         reduce using rule 21 (factorExp -> bool_atom .)
    AOEQUAL         reduce using rule 21 (factorExp -> bool_atom .)
    EQUAL           reduce using rule 21 (factorExp -> bool_atom .)
    QUESTION        reduce using rule 21 (factorExp -> bool_atom .)
    COMMA           reduce using rule 21 (factorExp -> bool_atom .)
    RBRACKET        reduce using rule 21 (factorExp -> bool_atom .)
    RBRACE          reduce using rule 21 (factorExp -> bool_atom .)
    RPAREN          reduce using rule 21 (factorExp -> bool_atom .)
    SEMICOLON       reduce using rule 21 (factorExp -> bool_atom .)
    COLON           reduce using rule 21 (factorExp -> bool_atom .)


state 20

    (35) unaryExp -> STRING .

    AO              reduce using rule 35 (unaryExp -> STRING .)
    COMP            reduce using rule 35 (unaryExp -> STRING .)
    BOOL_OP         reduce using rule 35 (unaryExp -> STRING .)
    AOEQUAL         reduce using rule 35 (unaryExp -> STRING .)
    EQUAL           reduce using rule 35 (unaryExp -> STRING .)
    QUESTION        reduce using rule 35 (unaryExp -> STRING .)
    COMMA           reduce using rule 35 (unaryExp -> STRING .)
    RBRACKET        reduce using rule 35 (unaryExp -> STRING .)
    RPAREN          reduce using rule 35 (unaryExp -> STRING .)
    SEMICOLON       reduce using rule 35 (unaryExp -> STRING .)
    COLON           reduce using rule 35 (unaryExp -> STRING .)
    RBRACE          reduce using rule 35 (unaryExp -> STRING .)


state 21

    (61) for -> FOR . LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement

    LPAREN          shift and go to state 61


state 22

    (27) factorNumExp -> NUMBER .

    DOT             reduce using rule 27 (factorNumExp -> NUMBER .)
    DOUBLE_AO       reduce using rule 27 (factorNumExp -> NUMBER .)
    AO              reduce using rule 27 (factorNumExp -> NUMBER .)
    COMP            reduce using rule 27 (factorNumExp -> NUMBER .)
    BOOL_OP         reduce using rule 27 (factorNumExp -> NUMBER .)
    AOEQUAL         reduce using rule 27 (factorNumExp -> NUMBER .)
    EQUAL           reduce using rule 27 (factorNumExp -> NUMBER .)
    QUESTION        reduce using rule 27 (factorNumExp -> NUMBER .)
    SEMICOLON       reduce using rule 27 (factorNumExp -> NUMBER .)
    COMMA           reduce using rule 27 (factorNumExp -> NUMBER .)
    RBRACKET        reduce using rule 27 (factorNumExp -> NUMBER .)
    RPAREN          reduce using rule 27 (factorNumExp -> NUMBER .)
    COLON           reduce using rule 27 (factorNumExp -> NUMBER .)
    RBRACE          reduce using rule 27 (factorNumExp -> NUMBER .)


state 23

    (10) expression -> expressionAssign .

    SEMICOLON       reduce using rule 10 (expression -> expressionAssign .)
    RPAREN          reduce using rule 10 (expression -> expressionAssign .)
    COMMA           reduce using rule 10 (expression -> expressionAssign .)
    RBRACKET        reduce using rule 10 (expression -> expressionAssign .)
    RBRACE          reduce using rule 10 (expression -> expressionAssign .)


state 24

    (15) unaryExp -> AO . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (32) unaryExp -> . NOT unaryExp
    (35) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . factorReg
    (24) factorExp -> . LPAREN expression RPAREN
    (25) factorExp -> . expressionFunction
    (27) factorNumExp -> . NUMBER
    (28) bool_atom -> . TRUE
    (29) bool_atom -> . FALSE
    (39) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (40) expressionVectorAt -> . expressionVector
    (41) expressionVectorAt -> . factorVar
    (42) expressionVectorAt -> . memberAccess
    (46) factorReg -> . LBRACE reg_items RBRACE
    (63) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (65) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (66) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (67) expressionFunction -> . PRINT LPAREN expression RPAREN
    (68) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (36) expressionVector -> . LBRACKET vector_items RBRACKET
    (26) factorVar -> . VAR
    (47) memberAccess -> . factorExp DOT factorVar

    AO              shift and go to state 24
    DOUBLE_AO       shift and go to state 11
    NOT             shift and go to state 42
    STRING          shift and go to state 20
    LPAREN          shift and go to state 26
    NUMBER          shift and go to state 22
    TRUE            shift and go to state 14
    FALSE           shift and go to state 33
    LBRACE          shift and go to state 50
    MULTIPLICACIONESCALAR shift and go to state 17
    CAPITALIZAR     shift and go to state 37
    COLINEALES      shift and go to state 4
    PRINT           shift and go to state 7
    LENGTH          shift and go to state 15
    LBRACKET        shift and go to state 5
    VAR             shift and go to state 28

    factorNumExp                   shift and go to state 1
    memberAccess                   shift and go to state 16
    expressionVector               shift and go to state 34
    unaryExp2                      shift and go to state 35
    expressionVectorAt             shift and go to state 36
    expressionFunction             shift and go to state 25
    factorVar                      shift and go to state 38
    factorExp                      shift and go to state 27
    bool_atom                      shift and go to state 19
    unaryExp                       shift and go to state 62
    factorReg                      shift and go to state 8

state 25

    (25) factorExp -> expressionFunction .

    DOT             reduce using rule 25 (factorExp -> expressionFunction .)
    DOUBLE_AO       reduce using rule 25 (factorExp -> expressionFunction .)
    AO              reduce using rule 25 (factorExp -> expressionFunction .)
    COMP            reduce using rule 25 (factorExp -> expressionFunction .)
    BOOL_OP         reduce using rule 25 (factorExp -> expressionFunction .)
    AOEQUAL         reduce using rule 25 (factorExp -> expressionFunction .)
    EQUAL           reduce using rule 25 (factorExp -> expressionFunction .)
    QUESTION        reduce using rule 25 (factorExp -> expressionFunction .)
    COMMA           reduce using rule 25 (factorExp -> expressionFunction .)
    RBRACKET        reduce using rule 25 (factorExp -> expressionFunction .)
    RBRACE          reduce using rule 25 (factorExp -> expressionFunction .)
    RPAREN          reduce using rule 25 (factorExp -> expressionFunction .)
    SEMICOLON       reduce using rule 25 (factorExp -> expressionFunction .)
    COLON           reduce using rule 25 (factorExp -> expressionFunction .)


state 26

    (24) factorExp -> LPAREN . expression RPAREN
    (10) expression -> . expressionAssign
    (43) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (44) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond
    (58) expressionTernaryCond -> . expressionTernaryCond QUESTION expressionTernaryCond COLON expressionBoolOp
    (59) expressionTernaryCond -> . expressionBoolOp
    (30) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (31) expressionBoolOp -> . expressionComp
    (33) expressionComp -> . expressionComp COMP aritExp
    (34) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (32) unaryExp -> . NOT unaryExp
    (35) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . factorReg
    (24) factorExp -> . LPAREN expression RPAREN
    (25) factorExp -> . expressionFunction
    (27) factorNumExp -> . NUMBER
    (28) bool_atom -> . TRUE
    (29) bool_atom -> . FALSE
    (39) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (40) expressionVectorAt -> . expressionVector
    (41) expressionVectorAt -> . factorVar
    (42) expressionVectorAt -> . memberAccess
    (46) factorReg -> . LBRACE reg_items RBRACE
    (63) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (65) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (66) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (67) expressionFunction -> . PRINT LPAREN expression RPAREN
    (68) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (36) expressionVector -> . LBRACKET vector_items RBRACKET
    (26) factorVar -> . VAR
    (47) memberAccess -> . factorExp DOT factorVar

    AO              shift and go to state 24
    DOUBLE_AO       shift and go to state 11
    NOT             shift and go to state 42
    STRING          shift and go to state 20
    LPAREN          shift and go to state 26
    NUMBER          shift and go to state 22
    TRUE            shift and go to state 14
    FALSE           shift and go to state 33
    LBRACE          shift and go to state 50
    MULTIPLICACIONESCALAR shift and go to state 17
    CAPITALIZAR     shift and go to state 37
    COLINEALES      shift and go to state 4
    PRINT           shift and go to state 7
    LENGTH          shift and go to state 15
    LBRACKET        shift and go to state 5
    VAR             shift and go to state 28

    factorNumExp                   shift and go to state 1
    memberAccess                   shift and go to state 16
    expressionTernaryCond          shift and go to state 31
    expressionVector               shift and go to state 34
    aritExp                        shift and go to state 29
    expressionComp                 shift and go to state 12
    expressionAssign               shift and go to state 23
    unaryExp2                      shift and go to state 35
    expressionVectorAt             shift and go to state 36
    expressionFunction             shift and go to state 25
    factorVar                      shift and go to state 38
    expressionBoolOp               shift and go to state 40
    factorExp                      shift and go to state 27
    bool_atom                      shift and go to state 19
    unaryExp                       shift and go to state 43
    expression                     shift and go to state 63
    factorReg                      shift and go to state 8

state 27

    (19) unaryExp2 -> factorExp .
    (47) memberAccess -> factorExp . DOT factorVar

    DOUBLE_AO       reduce using rule 19 (unaryExp2 -> factorExp .)
    AO              reduce using rule 19 (unaryExp2 -> factorExp .)
    COMP            reduce using rule 19 (unaryExp2 -> factorExp .)
    BOOL_OP         reduce using rule 19 (unaryExp2 -> factorExp .)
    AOEQUAL         reduce using rule 19 (unaryExp2 -> factorExp .)
    EQUAL           reduce using rule 19 (unaryExp2 -> factorExp .)
    QUESTION        reduce using rule 19 (unaryExp2 -> factorExp .)
    SEMICOLON       reduce using rule 19 (unaryExp2 -> factorExp .)
    COMMA           reduce using rule 19 (unaryExp2 -> factorExp .)
    RBRACKET        reduce using rule 19 (unaryExp2 -> factorExp .)
    RPAREN          reduce using rule 19 (unaryExp2 -> factorExp .)
    COLON           reduce using rule 19 (unaryExp2 -> factorExp .)
    RBRACE          reduce using rule 19 (unaryExp2 -> factorExp .)
    DOT             shift and go to state 64


state 28

    (26) factorVar -> VAR .

    LBRACKET        reduce using rule 26 (factorVar -> VAR .)
    DOT             reduce using rule 26 (factorVar -> VAR .)
    DOUBLE_AO       reduce using rule 26 (factorVar -> VAR .)
    AO              reduce using rule 26 (factorVar -> VAR .)
    COMP            reduce using rule 26 (factorVar -> VAR .)
    BOOL_OP         reduce using rule 26 (factorVar -> VAR .)
    AOEQUAL         reduce using rule 26 (factorVar -> VAR .)
    EQUAL           reduce using rule 26 (factorVar -> VAR .)
    QUESTION        reduce using rule 26 (factorVar -> VAR .)
    SEMICOLON       reduce using rule 26 (factorVar -> VAR .)
    COMMA           reduce using rule 26 (factorVar -> VAR .)
    RBRACKET        reduce using rule 26 (factorVar -> VAR .)
    RPAREN          reduce using rule 26 (factorVar -> VAR .)
    COLON           reduce using rule 26 (factorVar -> VAR .)
    RBRACE          reduce using rule 26 (factorVar -> VAR .)


state 29

    (34) expressionComp -> aritExp .
    (13) aritExp -> aritExp . AO unaryExp

    COMP            reduce using rule 34 (expressionComp -> aritExp .)
    BOOL_OP         reduce using rule 34 (expressionComp -> aritExp .)
    AOEQUAL         reduce using rule 34 (expressionComp -> aritExp .)
    EQUAL           reduce using rule 34 (expressionComp -> aritExp .)
    QUESTION        reduce using rule 34 (expressionComp -> aritExp .)
    COMMA           reduce using rule 34 (expressionComp -> aritExp .)
    RBRACE          reduce using rule 34 (expressionComp -> aritExp .)
    SEMICOLON       reduce using rule 34 (expressionComp -> aritExp .)
    RPAREN          reduce using rule 34 (expressionComp -> aritExp .)
    RBRACKET        reduce using rule 34 (expressionComp -> aritExp .)
    COLON           reduce using rule 34 (expressionComp -> aritExp .)
    AO              shift and go to state 65


state 30

    (55) if -> IF . LPAREN expression RPAREN singleStatement else

    LPAREN          shift and go to state 66


state 31

    (43) expressionAssign -> expressionTernaryCond . AOEQUAL expressionAssign
    (44) expressionAssign -> expressionTernaryCond . EQUAL expressionAssign
    (45) expressionAssign -> expressionTernaryCond .
    (58) expressionTernaryCond -> expressionTernaryCond . QUESTION expressionTernaryCond COLON expressionBoolOp

    AOEQUAL         shift and go to state 69
    EQUAL           shift and go to state 68
    COMMA           reduce using rule 45 (expressionAssign -> expressionTernaryCond .)
    RBRACKET        reduce using rule 45 (expressionAssign -> expressionTernaryCond .)
    SEMICOLON       reduce using rule 45 (expressionAssign -> expressionTernaryCond .)
    RPAREN          reduce using rule 45 (expressionAssign -> expressionTernaryCond .)
    RBRACE          reduce using rule 45 (expressionAssign -> expressionTernaryCond .)
    QUESTION        shift and go to state 67


state 32

    (52) block -> LBRACE . code RBRACE
    (46) factorReg -> LBRACE . reg_items RBRACE
    (1) code -> . statement code
    (2) code -> . COMMENT code
    (3) code -> .
    (48) reg_items -> . reg_field COMMA reg_items
    (49) reg_items -> . reg_field
    (4) statement -> . expression SEMICOLON
    (5) statement -> . block
    (6) statement -> . if
    (7) statement -> . while
    (8) statement -> . for
    (9) statement -> . do_while
    (50) reg_field -> . factorVar COLON expression
    (10) expression -> . expressionAssign
    (52) block -> . LBRACE code RBRACE
    (55) if -> . IF LPAREN expression RPAREN singleStatement else
    (60) while -> . WHILE LPAREN expression RPAREN singleStatement
    (61) for -> . FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement
    (62) do_while -> . DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON
    (26) factorVar -> . VAR
    (43) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (44) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond
    (58) expressionTernaryCond -> . expressionTernaryCond QUESTION expressionTernaryCond COLON expressionBoolOp
    (59) expressionTernaryCond -> . expressionBoolOp
    (30) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (31) expressionBoolOp -> . expressionComp
    (33) expressionComp -> . expressionComp COMP aritExp
    (34) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (32) unaryExp -> . NOT unaryExp
    (35) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . factorReg
    (24) factorExp -> . LPAREN expression RPAREN
    (25) factorExp -> . expressionFunction
    (27) factorNumExp -> . NUMBER
    (28) bool_atom -> . TRUE
    (29) bool_atom -> . FALSE
    (39) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (40) expressionVectorAt -> . expressionVector
    (41) expressionVectorAt -> . factorVar
    (42) expressionVectorAt -> . memberAccess
    (46) factorReg -> . LBRACE reg_items RBRACE
    (63) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (65) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (66) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (67) expressionFunction -> . PRINT LPAREN expression RPAREN
    (68) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (36) expressionVector -> . LBRACKET vector_items RBRACKET
    (47) memberAccess -> . factorExp DOT factorVar

    COMMENT         shift and go to state 10
    RBRACE          reduce using rule 3 (code -> .)
    LBRACE          shift and go to state 32
    IF              shift and go to state 30
    WHILE           shift and go to state 6
    FOR             shift and go to state 21
    DO              shift and go to state 2
    VAR             shift and go to state 28
    AO              shift and go to state 24
    DOUBLE_AO       shift and go to state 11
    NOT             shift and go to state 42
    STRING          shift and go to state 20
    LPAREN          shift and go to state 26
    NUMBER          shift and go to state 22
    TRUE            shift and go to state 14
    FALSE           shift and go to state 33
    MULTIPLICACIONESCALAR shift and go to state 17
    CAPITALIZAR     shift and go to state 37
    COLINEALES      shift and go to state 4
    PRINT           shift and go to state 7
    LENGTH          shift and go to state 15
    LBRACKET        shift and go to state 5

    factorNumExp                   shift and go to state 1
    reg_items                      shift and go to state 70
    code                           shift and go to state 71
    factorReg                      shift and go to state 8
    if                             shift and go to state 9
    expressionComp                 shift and go to state 12
    for                            shift and go to state 13
    reg_field                      shift and go to state 72
    memberAccess                   shift and go to state 16
    statement                      shift and go to state 18
    bool_atom                      shift and go to state 19
    expressionAssign               shift and go to state 23
    expressionFunction             shift and go to state 25
    factorExp                      shift and go to state 27
    aritExp                        shift and go to state 29
    expressionTernaryCond          shift and go to state 31
    expressionVector               shift and go to state 34
    unaryExp2                      shift and go to state 35
    expressionVectorAt             shift and go to state 36
    factorVar                      shift and go to state 73
    while                          shift and go to state 39
    expressionBoolOp               shift and go to state 40
    do_while                       shift and go to state 41
    unaryExp                       shift and go to state 43
    expression                     shift and go to state 44
    block                          shift and go to state 45

state 33

    (29) bool_atom -> FALSE .

    DOT             reduce using rule 29 (bool_atom -> FALSE .)
    DOUBLE_AO       reduce using rule 29 (bool_atom -> FALSE .)
    AO              reduce using rule 29 (bool_atom -> FALSE .)
    COMP            reduce using rule 29 (bool_atom -> FALSE .)
    BOOL_OP         reduce using rule 29 (bool_atom -> FALSE .)
    AOEQUAL         reduce using rule 29 (bool_atom -> FALSE .)
    EQUAL           reduce using rule 29 (bool_atom -> FALSE .)
    QUESTION        reduce using rule 29 (bool_atom -> FALSE .)
    RPAREN          reduce using rule 29 (bool_atom -> FALSE .)
    SEMICOLON       reduce using rule 29 (bool_atom -> FALSE .)
    COMMA           reduce using rule 29 (bool_atom -> FALSE .)
    RBRACKET        reduce using rule 29 (bool_atom -> FALSE .)
    COLON           reduce using rule 29 (bool_atom -> FALSE .)
    RBRACE          reduce using rule 29 (bool_atom -> FALSE .)


state 34

    (40) expressionVectorAt -> expressionVector .

    LBRACKET        reduce using rule 40 (expressionVectorAt -> expressionVector .)
    DOT             reduce using rule 40 (expressionVectorAt -> expressionVector .)
    DOUBLE_AO       reduce using rule 40 (expressionVectorAt -> expressionVector .)
    AO              reduce using rule 40 (expressionVectorAt -> expressionVector .)
    COMP            reduce using rule 40 (expressionVectorAt -> expressionVector .)
    BOOL_OP         reduce using rule 40 (expressionVectorAt -> expressionVector .)
    AOEQUAL         reduce using rule 40 (expressionVectorAt -> expressionVector .)
    EQUAL           reduce using rule 40 (expressionVectorAt -> expressionVector .)
    QUESTION        reduce using rule 40 (expressionVectorAt -> expressionVector .)
    RPAREN          reduce using rule 40 (expressionVectorAt -> expressionVector .)
    SEMICOLON       reduce using rule 40 (expressionVectorAt -> expressionVector .)
    COMMA           reduce using rule 40 (expressionVectorAt -> expressionVector .)
    RBRACKET        reduce using rule 40 (expressionVectorAt -> expressionVector .)
    COLON           reduce using rule 40 (expressionVectorAt -> expressionVector .)
    RBRACE          reduce using rule 40 (expressionVectorAt -> expressionVector .)


state 35

    (17) unaryExp -> unaryExp2 .
    (18) unaryExp2 -> unaryExp2 . DOUBLE_AO

    AO              reduce using rule 17 (unaryExp -> unaryExp2 .)
    COMP            reduce using rule 17 (unaryExp -> unaryExp2 .)
    BOOL_OP         reduce using rule 17 (unaryExp -> unaryExp2 .)
    AOEQUAL         reduce using rule 17 (unaryExp -> unaryExp2 .)
    EQUAL           reduce using rule 17 (unaryExp -> unaryExp2 .)
    QUESTION        reduce using rule 17 (unaryExp -> unaryExp2 .)
    COMMA           reduce using rule 17 (unaryExp -> unaryExp2 .)
    RBRACKET        reduce using rule 17 (unaryExp -> unaryExp2 .)
    RPAREN          reduce using rule 17 (unaryExp -> unaryExp2 .)
    SEMICOLON       reduce using rule 17 (unaryExp -> unaryExp2 .)
    COLON           reduce using rule 17 (unaryExp -> unaryExp2 .)
    RBRACE          reduce using rule 17 (unaryExp -> unaryExp2 .)
    DOUBLE_AO       shift and go to state 74


state 36

    (22) factorExp -> expressionVectorAt .
    (39) expressionVectorAt -> expressionVectorAt . LBRACKET expression RBRACKET

    DOT             reduce using rule 22 (factorExp -> expressionVectorAt .)
    DOUBLE_AO       reduce using rule 22 (factorExp -> expressionVectorAt .)
    AO              reduce using rule 22 (factorExp -> expressionVectorAt .)
    COMP            reduce using rule 22 (factorExp -> expressionVectorAt .)
    BOOL_OP         reduce using rule 22 (factorExp -> expressionVectorAt .)
    AOEQUAL         reduce using rule 22 (factorExp -> expressionVectorAt .)
    EQUAL           reduce using rule 22 (factorExp -> expressionVectorAt .)
    QUESTION        reduce using rule 22 (factorExp -> expressionVectorAt .)
    COMMA           reduce using rule 22 (factorExp -> expressionVectorAt .)
    RBRACKET        reduce using rule 22 (factorExp -> expressionVectorAt .)
    RBRACE          reduce using rule 22 (factorExp -> expressionVectorAt .)
    RPAREN          reduce using rule 22 (factorExp -> expressionVectorAt .)
    SEMICOLON       reduce using rule 22 (factorExp -> expressionVectorAt .)
    COLON           reduce using rule 22 (factorExp -> expressionVectorAt .)
    LBRACKET        shift and go to state 75


state 37

    (65) expressionFunction -> CAPITALIZAR . LPAREN expression RPAREN

    LPAREN          shift and go to state 76


state 38

    (41) expressionVectorAt -> factorVar .

    LBRACKET        reduce using rule 41 (expressionVectorAt -> factorVar .)
    DOT             reduce using rule 41 (expressionVectorAt -> factorVar .)
    DOUBLE_AO       reduce using rule 41 (expressionVectorAt -> factorVar .)
    AO              reduce using rule 41 (expressionVectorAt -> factorVar .)
    COMP            reduce using rule 41 (expressionVectorAt -> factorVar .)
    BOOL_OP         reduce using rule 41 (expressionVectorAt -> factorVar .)
    AOEQUAL         reduce using rule 41 (expressionVectorAt -> factorVar .)
    EQUAL           reduce using rule 41 (expressionVectorAt -> factorVar .)
    QUESTION        reduce using rule 41 (expressionVectorAt -> factorVar .)
    RPAREN          reduce using rule 41 (expressionVectorAt -> factorVar .)
    SEMICOLON       reduce using rule 41 (expressionVectorAt -> factorVar .)
    COMMA           reduce using rule 41 (expressionVectorAt -> factorVar .)
    RBRACKET        reduce using rule 41 (expressionVectorAt -> factorVar .)
    COLON           reduce using rule 41 (expressionVectorAt -> factorVar .)
    RBRACE          reduce using rule 41 (expressionVectorAt -> factorVar .)


state 39

    (7) statement -> while .

    COMMENT         reduce using rule 7 (statement -> while .)
    LBRACE          reduce using rule 7 (statement -> while .)
    IF              reduce using rule 7 (statement -> while .)
    WHILE           reduce using rule 7 (statement -> while .)
    FOR             reduce using rule 7 (statement -> while .)
    DO              reduce using rule 7 (statement -> while .)
    AO              reduce using rule 7 (statement -> while .)
    DOUBLE_AO       reduce using rule 7 (statement -> while .)
    NOT             reduce using rule 7 (statement -> while .)
    STRING          reduce using rule 7 (statement -> while .)
    LPAREN          reduce using rule 7 (statement -> while .)
    NUMBER          reduce using rule 7 (statement -> while .)
    TRUE            reduce using rule 7 (statement -> while .)
    FALSE           reduce using rule 7 (statement -> while .)
    MULTIPLICACIONESCALAR reduce using rule 7 (statement -> while .)
    CAPITALIZAR     reduce using rule 7 (statement -> while .)
    COLINEALES      reduce using rule 7 (statement -> while .)
    PRINT           reduce using rule 7 (statement -> while .)
    LENGTH          reduce using rule 7 (statement -> while .)
    LBRACKET        reduce using rule 7 (statement -> while .)
    VAR             reduce using rule 7 (statement -> while .)
    $end            reduce using rule 7 (statement -> while .)
    RBRACE          reduce using rule 7 (statement -> while .)
    ELSE            reduce using rule 7 (statement -> while .)


state 40

    (59) expressionTernaryCond -> expressionBoolOp .
    (30) expressionBoolOp -> expressionBoolOp . BOOL_OP expressionComp

    AOEQUAL         reduce using rule 59 (expressionTernaryCond -> expressionBoolOp .)
    EQUAL           reduce using rule 59 (expressionTernaryCond -> expressionBoolOp .)
    QUESTION        reduce using rule 59 (expressionTernaryCond -> expressionBoolOp .)
    SEMICOLON       reduce using rule 59 (expressionTernaryCond -> expressionBoolOp .)
    RPAREN          reduce using rule 59 (expressionTernaryCond -> expressionBoolOp .)
    COMMA           reduce using rule 59 (expressionTernaryCond -> expressionBoolOp .)
    RBRACKET        reduce using rule 59 (expressionTernaryCond -> expressionBoolOp .)
    RBRACE          reduce using rule 59 (expressionTernaryCond -> expressionBoolOp .)
    COLON           reduce using rule 59 (expressionTernaryCond -> expressionBoolOp .)
    BOOL_OP         shift and go to state 77


state 41

    (9) statement -> do_while .

    COMMENT         reduce using rule 9 (statement -> do_while .)
    LBRACE          reduce using rule 9 (statement -> do_while .)
    IF              reduce using rule 9 (statement -> do_while .)
    WHILE           reduce using rule 9 (statement -> do_while .)
    FOR             reduce using rule 9 (statement -> do_while .)
    DO              reduce using rule 9 (statement -> do_while .)
    AO              reduce using rule 9 (statement -> do_while .)
    DOUBLE_AO       reduce using rule 9 (statement -> do_while .)
    NOT             reduce using rule 9 (statement -> do_while .)
    STRING          reduce using rule 9 (statement -> do_while .)
    LPAREN          reduce using rule 9 (statement -> do_while .)
    NUMBER          reduce using rule 9 (statement -> do_while .)
    TRUE            reduce using rule 9 (statement -> do_while .)
    FALSE           reduce using rule 9 (statement -> do_while .)
    MULTIPLICACIONESCALAR reduce using rule 9 (statement -> do_while .)
    CAPITALIZAR     reduce using rule 9 (statement -> do_while .)
    COLINEALES      reduce using rule 9 (statement -> do_while .)
    PRINT           reduce using rule 9 (statement -> do_while .)
    LENGTH          reduce using rule 9 (statement -> do_while .)
    LBRACKET        reduce using rule 9 (statement -> do_while .)
    VAR             reduce using rule 9 (statement -> do_while .)
    $end            reduce using rule 9 (statement -> do_while .)
    RBRACE          reduce using rule 9 (statement -> do_while .)
    ELSE            reduce using rule 9 (statement -> do_while .)


state 42

    (32) unaryExp -> NOT . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (32) unaryExp -> . NOT unaryExp
    (35) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . factorReg
    (24) factorExp -> . LPAREN expression RPAREN
    (25) factorExp -> . expressionFunction
    (27) factorNumExp -> . NUMBER
    (28) bool_atom -> . TRUE
    (29) bool_atom -> . FALSE
    (39) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (40) expressionVectorAt -> . expressionVector
    (41) expressionVectorAt -> . factorVar
    (42) expressionVectorAt -> . memberAccess
    (46) factorReg -> . LBRACE reg_items RBRACE
    (63) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (65) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (66) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (67) expressionFunction -> . PRINT LPAREN expression RPAREN
    (68) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (36) expressionVector -> . LBRACKET vector_items RBRACKET
    (26) factorVar -> . VAR
    (47) memberAccess -> . factorExp DOT factorVar

    AO              shift and go to state 24
    DOUBLE_AO       shift and go to state 11
    NOT             shift and go to state 42
    STRING          shift and go to state 20
    LPAREN          shift and go to state 26
    NUMBER          shift and go to state 22
    TRUE            shift and go to state 14
    FALSE           shift and go to state 33
    LBRACE          shift and go to state 50
    MULTIPLICACIONESCALAR shift and go to state 17
    CAPITALIZAR     shift and go to state 37
    COLINEALES      shift and go to state 4
    PRINT           shift and go to state 7
    LENGTH          shift and go to state 15
    LBRACKET        shift and go to state 5
    VAR             shift and go to state 28

    factorNumExp                   shift and go to state 1
    memberAccess                   shift and go to state 16
    expressionVector               shift and go to state 34
    unaryExp2                      shift and go to state 35
    expressionVectorAt             shift and go to state 36
    expressionFunction             shift and go to state 25
    factorVar                      shift and go to state 38
    factorExp                      shift and go to state 27
    bool_atom                      shift and go to state 19
    unaryExp                       shift and go to state 78
    factorReg                      shift and go to state 8

state 43

    (14) aritExp -> unaryExp .

    AO              reduce using rule 14 (aritExp -> unaryExp .)
    COMP            reduce using rule 14 (aritExp -> unaryExp .)
    BOOL_OP         reduce using rule 14 (aritExp -> unaryExp .)
    AOEQUAL         reduce using rule 14 (aritExp -> unaryExp .)
    EQUAL           reduce using rule 14 (aritExp -> unaryExp .)
    QUESTION        reduce using rule 14 (aritExp -> unaryExp .)
    SEMICOLON       reduce using rule 14 (aritExp -> unaryExp .)
    COMMA           reduce using rule 14 (aritExp -> unaryExp .)
    RBRACKET        reduce using rule 14 (aritExp -> unaryExp .)
    RPAREN          reduce using rule 14 (aritExp -> unaryExp .)
    COLON           reduce using rule 14 (aritExp -> unaryExp .)
    RBRACE          reduce using rule 14 (aritExp -> unaryExp .)


state 44

    (4) statement -> expression . SEMICOLON

    SEMICOLON       shift and go to state 79


state 45

    (5) statement -> block .

    COMMENT         reduce using rule 5 (statement -> block .)
    LBRACE          reduce using rule 5 (statement -> block .)
    IF              reduce using rule 5 (statement -> block .)
    WHILE           reduce using rule 5 (statement -> block .)
    FOR             reduce using rule 5 (statement -> block .)
    DO              reduce using rule 5 (statement -> block .)
    AO              reduce using rule 5 (statement -> block .)
    DOUBLE_AO       reduce using rule 5 (statement -> block .)
    NOT             reduce using rule 5 (statement -> block .)
    STRING          reduce using rule 5 (statement -> block .)
    LPAREN          reduce using rule 5 (statement -> block .)
    NUMBER          reduce using rule 5 (statement -> block .)
    TRUE            reduce using rule 5 (statement -> block .)
    FALSE           reduce using rule 5 (statement -> block .)
    MULTIPLICACIONESCALAR reduce using rule 5 (statement -> block .)
    CAPITALIZAR     reduce using rule 5 (statement -> block .)
    COLINEALES      reduce using rule 5 (statement -> block .)
    PRINT           reduce using rule 5 (statement -> block .)
    LENGTH          reduce using rule 5 (statement -> block .)
    LBRACKET        reduce using rule 5 (statement -> block .)
    VAR             reduce using rule 5 (statement -> block .)
    $end            reduce using rule 5 (statement -> block .)
    RBRACE          reduce using rule 5 (statement -> block .)
    ELSE            reduce using rule 5 (statement -> block .)


state 46

    (53) singleStatement -> COMMENT . singleStatement
    (53) singleStatement -> . COMMENT singleStatement
    (54) singleStatement -> . statement
    (4) statement -> . expression SEMICOLON
    (5) statement -> . block
    (6) statement -> . if
    (7) statement -> . while
    (8) statement -> . for
    (9) statement -> . do_while
    (10) expression -> . expressionAssign
    (52) block -> . LBRACE code RBRACE
    (55) if -> . IF LPAREN expression RPAREN singleStatement else
    (60) while -> . WHILE LPAREN expression RPAREN singleStatement
    (61) for -> . FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement
    (62) do_while -> . DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON
    (43) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (44) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond
    (58) expressionTernaryCond -> . expressionTernaryCond QUESTION expressionTernaryCond COLON expressionBoolOp
    (59) expressionTernaryCond -> . expressionBoolOp
    (30) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (31) expressionBoolOp -> . expressionComp
    (33) expressionComp -> . expressionComp COMP aritExp
    (34) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (32) unaryExp -> . NOT unaryExp
    (35) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . factorReg
    (24) factorExp -> . LPAREN expression RPAREN
    (25) factorExp -> . expressionFunction
    (27) factorNumExp -> . NUMBER
    (28) bool_atom -> . TRUE
    (29) bool_atom -> . FALSE
    (39) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (40) expressionVectorAt -> . expressionVector
    (41) expressionVectorAt -> . factorVar
    (42) expressionVectorAt -> . memberAccess
    (46) factorReg -> . LBRACE reg_items RBRACE
    (63) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (65) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (66) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (67) expressionFunction -> . PRINT LPAREN expression RPAREN
    (68) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (36) expressionVector -> . LBRACKET vector_items RBRACKET
    (26) factorVar -> . VAR
    (47) memberAccess -> . factorExp DOT factorVar

    COMMENT         shift and go to state 46
    LBRACE          shift and go to state 32
    IF              shift and go to state 30
    WHILE           shift and go to state 6
    FOR             shift and go to state 21
    DO              shift and go to state 2
    AO              shift and go to state 24
    DOUBLE_AO       shift and go to state 11
    NOT             shift and go to state 42
    STRING          shift and go to state 20
    LPAREN          shift and go to state 26
    NUMBER          shift and go to state 22
    TRUE            shift and go to state 14
    FALSE           shift and go to state 33
    MULTIPLICACIONESCALAR shift and go to state 17
    CAPITALIZAR     shift and go to state 37
    COLINEALES      shift and go to state 4
    PRINT           shift and go to state 7
    LENGTH          shift and go to state 15
    LBRACKET        shift and go to state 5
    VAR             shift and go to state 28

    factorNumExp                   shift and go to state 1
    factorReg                      shift and go to state 8
    if                             shift and go to state 9
    expressionComp                 shift and go to state 12
    for                            shift and go to state 13
    memberAccess                   shift and go to state 16
    statement                      shift and go to state 47
    bool_atom                      shift and go to state 19
    expressionAssign               shift and go to state 23
    expressionFunction             shift and go to state 25
    factorExp                      shift and go to state 27
    aritExp                        shift and go to state 29
    expressionTernaryCond          shift and go to state 31
    expressionVector               shift and go to state 34
    singleStatement                shift and go to state 80
    unaryExp2                      shift and go to state 35
    expressionVectorAt             shift and go to state 36
    factorVar                      shift and go to state 38
    while                          shift and go to state 39
    expressionBoolOp               shift and go to state 40
    do_while                       shift and go to state 41
    unaryExp                       shift and go to state 43
    expression                     shift and go to state 44
    block                          shift and go to state 45

state 47

    (54) singleStatement -> statement .

    WHILE           reduce using rule 54 (singleStatement -> statement .)
    COMMENT         reduce using rule 54 (singleStatement -> statement .)
    LBRACE          reduce using rule 54 (singleStatement -> statement .)
    IF              reduce using rule 54 (singleStatement -> statement .)
    FOR             reduce using rule 54 (singleStatement -> statement .)
    DO              reduce using rule 54 (singleStatement -> statement .)
    AO              reduce using rule 54 (singleStatement -> statement .)
    DOUBLE_AO       reduce using rule 54 (singleStatement -> statement .)
    NOT             reduce using rule 54 (singleStatement -> statement .)
    STRING          reduce using rule 54 (singleStatement -> statement .)
    LPAREN          reduce using rule 54 (singleStatement -> statement .)
    NUMBER          reduce using rule 54 (singleStatement -> statement .)
    TRUE            reduce using rule 54 (singleStatement -> statement .)
    FALSE           reduce using rule 54 (singleStatement -> statement .)
    MULTIPLICACIONESCALAR reduce using rule 54 (singleStatement -> statement .)
    CAPITALIZAR     reduce using rule 54 (singleStatement -> statement .)
    COLINEALES      reduce using rule 54 (singleStatement -> statement .)
    PRINT           reduce using rule 54 (singleStatement -> statement .)
    LENGTH          reduce using rule 54 (singleStatement -> statement .)
    LBRACKET        reduce using rule 54 (singleStatement -> statement .)
    VAR             reduce using rule 54 (singleStatement -> statement .)
    $end            reduce using rule 54 (singleStatement -> statement .)
    RBRACE          reduce using rule 54 (singleStatement -> statement .)
    ELSE            reduce using rule 54 (singleStatement -> statement .)


state 48

    (62) do_while -> DO singleStatement . WHILE LPAREN expression RPAREN SEMICOLON

    WHILE           shift and go to state 81


state 49

    (66) expressionFunction -> COLINEALES LPAREN . expression COMMA expression RPAREN
    (10) expression -> . expressionAssign
    (43) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (44) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond
    (58) expressionTernaryCond -> . expressionTernaryCond QUESTION expressionTernaryCond COLON expressionBoolOp
    (59) expressionTernaryCond -> . expressionBoolOp
    (30) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (31) expressionBoolOp -> . expressionComp
    (33) expressionComp -> . expressionComp COMP aritExp
    (34) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (32) unaryExp -> . NOT unaryExp
    (35) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . factorReg
    (24) factorExp -> . LPAREN expression RPAREN
    (25) factorExp -> . expressionFunction
    (27) factorNumExp -> . NUMBER
    (28) bool_atom -> . TRUE
    (29) bool_atom -> . FALSE
    (39) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (40) expressionVectorAt -> . expressionVector
    (41) expressionVectorAt -> . factorVar
    (42) expressionVectorAt -> . memberAccess
    (46) factorReg -> . LBRACE reg_items RBRACE
    (63) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (65) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (66) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (67) expressionFunction -> . PRINT LPAREN expression RPAREN
    (68) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (36) expressionVector -> . LBRACKET vector_items RBRACKET
    (26) factorVar -> . VAR
    (47) memberAccess -> . factorExp DOT factorVar

    AO              shift and go to state 24
    DOUBLE_AO       shift and go to state 11
    NOT             shift and go to state 42
    STRING          shift and go to state 20
    LPAREN          shift and go to state 26
    NUMBER          shift and go to state 22
    TRUE            shift and go to state 14
    FALSE           shift and go to state 33
    LBRACE          shift and go to state 50
    MULTIPLICACIONESCALAR shift and go to state 17
    CAPITALIZAR     shift and go to state 37
    COLINEALES      shift and go to state 4
    PRINT           shift and go to state 7
    LENGTH          shift and go to state 15
    LBRACKET        shift and go to state 5
    VAR             shift and go to state 28

    factorNumExp                   shift and go to state 1
    memberAccess                   shift and go to state 16
    expressionTernaryCond          shift and go to state 31
    expressionVector               shift and go to state 34
    aritExp                        shift and go to state 29
    expressionComp                 shift and go to state 12
    expressionAssign               shift and go to state 23
    unaryExp2                      shift and go to state 35
    expressionVectorAt             shift and go to state 36
    expressionFunction             shift and go to state 25
    factorVar                      shift and go to state 38
    expressionBoolOp               shift and go to state 40
    factorExp                      shift and go to state 27
    bool_atom                      shift and go to state 19
    unaryExp                       shift and go to state 43
    expression                     shift and go to state 82
    factorReg                      shift and go to state 8

state 50

    (46) factorReg -> LBRACE . reg_items RBRACE
    (48) reg_items -> . reg_field COMMA reg_items
    (49) reg_items -> . reg_field
    (50) reg_field -> . factorVar COLON expression
    (26) factorVar -> . VAR

    VAR             shift and go to state 28

    factorVar                      shift and go to state 83
    reg_items                      shift and go to state 70
    reg_field                      shift and go to state 72

state 51

    (36) expressionVector -> LBRACKET vector_items . RBRACKET

    RBRACKET        shift and go to state 84


state 52

    (37) vector_items -> expression . COMMA vector_items
    (38) vector_items -> expression .

    COMMA           shift and go to state 85
    RBRACKET        reduce using rule 38 (vector_items -> expression .)


state 53

    (60) while -> WHILE LPAREN . expression RPAREN singleStatement
    (10) expression -> . expressionAssign
    (43) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (44) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond
    (58) expressionTernaryCond -> . expressionTernaryCond QUESTION expressionTernaryCond COLON expressionBoolOp
    (59) expressionTernaryCond -> . expressionBoolOp
    (30) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (31) expressionBoolOp -> . expressionComp
    (33) expressionComp -> . expressionComp COMP aritExp
    (34) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (32) unaryExp -> . NOT unaryExp
    (35) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . factorReg
    (24) factorExp -> . LPAREN expression RPAREN
    (25) factorExp -> . expressionFunction
    (27) factorNumExp -> . NUMBER
    (28) bool_atom -> . TRUE
    (29) bool_atom -> . FALSE
    (39) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (40) expressionVectorAt -> . expressionVector
    (41) expressionVectorAt -> . factorVar
    (42) expressionVectorAt -> . memberAccess
    (46) factorReg -> . LBRACE reg_items RBRACE
    (63) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (65) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (66) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (67) expressionFunction -> . PRINT LPAREN expression RPAREN
    (68) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (36) expressionVector -> . LBRACKET vector_items RBRACKET
    (26) factorVar -> . VAR
    (47) memberAccess -> . factorExp DOT factorVar

    AO              shift and go to state 24
    DOUBLE_AO       shift and go to state 11
    NOT             shift and go to state 42
    STRING          shift and go to state 20
    LPAREN          shift and go to state 26
    NUMBER          shift and go to state 22
    TRUE            shift and go to state 14
    FALSE           shift and go to state 33
    LBRACE          shift and go to state 50
    MULTIPLICACIONESCALAR shift and go to state 17
    CAPITALIZAR     shift and go to state 37
    COLINEALES      shift and go to state 4
    PRINT           shift and go to state 7
    LENGTH          shift and go to state 15
    LBRACKET        shift and go to state 5
    VAR             shift and go to state 28

    factorNumExp                   shift and go to state 1
    memberAccess                   shift and go to state 16
    expressionTernaryCond          shift and go to state 31
    expressionVector               shift and go to state 34
    aritExp                        shift and go to state 29
    expressionComp                 shift and go to state 12
    expressionAssign               shift and go to state 23
    unaryExp2                      shift and go to state 35
    expressionVectorAt             shift and go to state 36
    expressionFunction             shift and go to state 25
    factorVar                      shift and go to state 38
    expressionBoolOp               shift and go to state 40
    factorExp                      shift and go to state 27
    bool_atom                      shift and go to state 19
    unaryExp                       shift and go to state 43
    expression                     shift and go to state 86
    factorReg                      shift and go to state 8

state 54

    (67) expressionFunction -> PRINT LPAREN . expression RPAREN
    (10) expression -> . expressionAssign
    (43) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (44) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond
    (58) expressionTernaryCond -> . expressionTernaryCond QUESTION expressionTernaryCond COLON expressionBoolOp
    (59) expressionTernaryCond -> . expressionBoolOp
    (30) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (31) expressionBoolOp -> . expressionComp
    (33) expressionComp -> . expressionComp COMP aritExp
    (34) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (32) unaryExp -> . NOT unaryExp
    (35) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . factorReg
    (24) factorExp -> . LPAREN expression RPAREN
    (25) factorExp -> . expressionFunction
    (27) factorNumExp -> . NUMBER
    (28) bool_atom -> . TRUE
    (29) bool_atom -> . FALSE
    (39) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (40) expressionVectorAt -> . expressionVector
    (41) expressionVectorAt -> . factorVar
    (42) expressionVectorAt -> . memberAccess
    (46) factorReg -> . LBRACE reg_items RBRACE
    (63) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (65) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (66) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (67) expressionFunction -> . PRINT LPAREN expression RPAREN
    (68) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (36) expressionVector -> . LBRACKET vector_items RBRACKET
    (26) factorVar -> . VAR
    (47) memberAccess -> . factorExp DOT factorVar

    AO              shift and go to state 24
    DOUBLE_AO       shift and go to state 11
    NOT             shift and go to state 42
    STRING          shift and go to state 20
    LPAREN          shift and go to state 26
    NUMBER          shift and go to state 22
    TRUE            shift and go to state 14
    FALSE           shift and go to state 33
    LBRACE          shift and go to state 50
    MULTIPLICACIONESCALAR shift and go to state 17
    CAPITALIZAR     shift and go to state 37
    COLINEALES      shift and go to state 4
    PRINT           shift and go to state 7
    LENGTH          shift and go to state 15
    LBRACKET        shift and go to state 5
    VAR             shift and go to state 28

    factorNumExp                   shift and go to state 1
    memberAccess                   shift and go to state 16
    expressionTernaryCond          shift and go to state 31
    expressionVector               shift and go to state 34
    aritExp                        shift and go to state 29
    expressionComp                 shift and go to state 12
    expressionAssign               shift and go to state 23
    unaryExp2                      shift and go to state 35
    expressionVectorAt             shift and go to state 36
    expressionFunction             shift and go to state 25
    factorVar                      shift and go to state 38
    expressionBoolOp               shift and go to state 40
    factorExp                      shift and go to state 27
    bool_atom                      shift and go to state 19
    unaryExp                       shift and go to state 43
    expression                     shift and go to state 87
    factorReg                      shift and go to state 8

state 55

    (2) code -> COMMENT code .

    $end            reduce using rule 2 (code -> COMMENT code .)
    RBRACE          reduce using rule 2 (code -> COMMENT code .)


state 56

    (16) unaryExp -> DOUBLE_AO unaryExp .

    AO              reduce using rule 16 (unaryExp -> DOUBLE_AO unaryExp .)
    COMP            reduce using rule 16 (unaryExp -> DOUBLE_AO unaryExp .)
    BOOL_OP         reduce using rule 16 (unaryExp -> DOUBLE_AO unaryExp .)
    AOEQUAL         reduce using rule 16 (unaryExp -> DOUBLE_AO unaryExp .)
    EQUAL           reduce using rule 16 (unaryExp -> DOUBLE_AO unaryExp .)
    QUESTION        reduce using rule 16 (unaryExp -> DOUBLE_AO unaryExp .)
    COMMA           reduce using rule 16 (unaryExp -> DOUBLE_AO unaryExp .)
    RBRACKET        reduce using rule 16 (unaryExp -> DOUBLE_AO unaryExp .)
    RPAREN          reduce using rule 16 (unaryExp -> DOUBLE_AO unaryExp .)
    SEMICOLON       reduce using rule 16 (unaryExp -> DOUBLE_AO unaryExp .)
    COLON           reduce using rule 16 (unaryExp -> DOUBLE_AO unaryExp .)
    RBRACE          reduce using rule 16 (unaryExp -> DOUBLE_AO unaryExp .)


state 57

    (33) expressionComp -> expressionComp COMP . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (32) unaryExp -> . NOT unaryExp
    (35) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . factorReg
    (24) factorExp -> . LPAREN expression RPAREN
    (25) factorExp -> . expressionFunction
    (27) factorNumExp -> . NUMBER
    (28) bool_atom -> . TRUE
    (29) bool_atom -> . FALSE
    (39) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (40) expressionVectorAt -> . expressionVector
    (41) expressionVectorAt -> . factorVar
    (42) expressionVectorAt -> . memberAccess
    (46) factorReg -> . LBRACE reg_items RBRACE
    (63) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (65) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (66) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (67) expressionFunction -> . PRINT LPAREN expression RPAREN
    (68) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (36) expressionVector -> . LBRACKET vector_items RBRACKET
    (26) factorVar -> . VAR
    (47) memberAccess -> . factorExp DOT factorVar

    AO              shift and go to state 24
    DOUBLE_AO       shift and go to state 11
    NOT             shift and go to state 42
    STRING          shift and go to state 20
    LPAREN          shift and go to state 26
    NUMBER          shift and go to state 22
    TRUE            shift and go to state 14
    FALSE           shift and go to state 33
    LBRACE          shift and go to state 50
    MULTIPLICACIONESCALAR shift and go to state 17
    CAPITALIZAR     shift and go to state 37
    COLINEALES      shift and go to state 4
    PRINT           shift and go to state 7
    LENGTH          shift and go to state 15
    LBRACKET        shift and go to state 5
    VAR             shift and go to state 28

    factorNumExp                   shift and go to state 1
    memberAccess                   shift and go to state 16
    expressionVector               shift and go to state 34
    factorReg                      shift and go to state 8
    unaryExp2                      shift and go to state 35
    expressionVectorAt             shift and go to state 36
    expressionFunction             shift and go to state 25
    factorVar                      shift and go to state 38
    factorExp                      shift and go to state 27
    bool_atom                      shift and go to state 19
    unaryExp                       shift and go to state 43
    aritExp                        shift and go to state 88

state 58

    (68) expressionFunction -> LENGTH LPAREN . expression RPAREN
    (10) expression -> . expressionAssign
    (43) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (44) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond
    (58) expressionTernaryCond -> . expressionTernaryCond QUESTION expressionTernaryCond COLON expressionBoolOp
    (59) expressionTernaryCond -> . expressionBoolOp
    (30) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (31) expressionBoolOp -> . expressionComp
    (33) expressionComp -> . expressionComp COMP aritExp
    (34) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (32) unaryExp -> . NOT unaryExp
    (35) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . factorReg
    (24) factorExp -> . LPAREN expression RPAREN
    (25) factorExp -> . expressionFunction
    (27) factorNumExp -> . NUMBER
    (28) bool_atom -> . TRUE
    (29) bool_atom -> . FALSE
    (39) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (40) expressionVectorAt -> . expressionVector
    (41) expressionVectorAt -> . factorVar
    (42) expressionVectorAt -> . memberAccess
    (46) factorReg -> . LBRACE reg_items RBRACE
    (63) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (65) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (66) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (67) expressionFunction -> . PRINT LPAREN expression RPAREN
    (68) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (36) expressionVector -> . LBRACKET vector_items RBRACKET
    (26) factorVar -> . VAR
    (47) memberAccess -> . factorExp DOT factorVar

    AO              shift and go to state 24
    DOUBLE_AO       shift and go to state 11
    NOT             shift and go to state 42
    STRING          shift and go to state 20
    LPAREN          shift and go to state 26
    NUMBER          shift and go to state 22
    TRUE            shift and go to state 14
    FALSE           shift and go to state 33
    LBRACE          shift and go to state 50
    MULTIPLICACIONESCALAR shift and go to state 17
    CAPITALIZAR     shift and go to state 37
    COLINEALES      shift and go to state 4
    PRINT           shift and go to state 7
    LENGTH          shift and go to state 15
    LBRACKET        shift and go to state 5
    VAR             shift and go to state 28

    factorNumExp                   shift and go to state 1
    memberAccess                   shift and go to state 16
    expressionTernaryCond          shift and go to state 31
    expressionVector               shift and go to state 34
    aritExp                        shift and go to state 29
    expressionComp                 shift and go to state 12
    expressionAssign               shift and go to state 23
    unaryExp2                      shift and go to state 35
    expressionVectorAt             shift and go to state 36
    expressionFunction             shift and go to state 25
    factorVar                      shift and go to state 38
    expressionBoolOp               shift and go to state 40
    factorExp                      shift and go to state 27
    bool_atom                      shift and go to state 19
    unaryExp                       shift and go to state 43
    expression                     shift and go to state 89
    factorReg                      shift and go to state 8

state 59

    (63) expressionFunction -> MULTIPLICACIONESCALAR LPAREN . expression COMMA expression RPAREN
    (64) expressionFunction -> MULTIPLICACIONESCALAR LPAREN . expression COMMA expression COMMA expression RPAREN
    (10) expression -> . expressionAssign
    (43) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (44) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond
    (58) expressionTernaryCond -> . expressionTernaryCond QUESTION expressionTernaryCond COLON expressionBoolOp
    (59) expressionTernaryCond -> . expressionBoolOp
    (30) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (31) expressionBoolOp -> . expressionComp
    (33) expressionComp -> . expressionComp COMP aritExp
    (34) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (32) unaryExp -> . NOT unaryExp
    (35) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . factorReg
    (24) factorExp -> . LPAREN expression RPAREN
    (25) factorExp -> . expressionFunction
    (27) factorNumExp -> . NUMBER
    (28) bool_atom -> . TRUE
    (29) bool_atom -> . FALSE
    (39) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (40) expressionVectorAt -> . expressionVector
    (41) expressionVectorAt -> . factorVar
    (42) expressionVectorAt -> . memberAccess
    (46) factorReg -> . LBRACE reg_items RBRACE
    (63) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (65) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (66) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (67) expressionFunction -> . PRINT LPAREN expression RPAREN
    (68) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (36) expressionVector -> . LBRACKET vector_items RBRACKET
    (26) factorVar -> . VAR
    (47) memberAccess -> . factorExp DOT factorVar

    AO              shift and go to state 24
    DOUBLE_AO       shift and go to state 11
    NOT             shift and go to state 42
    STRING          shift and go to state 20
    LPAREN          shift and go to state 26
    NUMBER          shift and go to state 22
    TRUE            shift and go to state 14
    FALSE           shift and go to state 33
    LBRACE          shift and go to state 50
    MULTIPLICACIONESCALAR shift and go to state 17
    CAPITALIZAR     shift and go to state 37
    COLINEALES      shift and go to state 4
    PRINT           shift and go to state 7
    LENGTH          shift and go to state 15
    LBRACKET        shift and go to state 5
    VAR             shift and go to state 28

    factorNumExp                   shift and go to state 1
    memberAccess                   shift and go to state 16
    expressionTernaryCond          shift and go to state 31
    expressionVector               shift and go to state 34
    aritExp                        shift and go to state 29
    expressionComp                 shift and go to state 12
    expressionAssign               shift and go to state 23
    unaryExp2                      shift and go to state 35
    expressionVectorAt             shift and go to state 36
    expressionFunction             shift and go to state 25
    factorVar                      shift and go to state 38
    expressionBoolOp               shift and go to state 40
    factorExp                      shift and go to state 27
    bool_atom                      shift and go to state 19
    unaryExp                       shift and go to state 43
    expression                     shift and go to state 90
    factorReg                      shift and go to state 8

state 60

    (1) code -> statement code .

    $end            reduce using rule 1 (code -> statement code .)
    RBRACE          reduce using rule 1 (code -> statement code .)


state 61

    (61) for -> FOR LPAREN . optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement
    (11) optional_expr -> . expression
    (12) optional_expr -> .
    (10) expression -> . expressionAssign
    (43) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (44) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond
    (58) expressionTernaryCond -> . expressionTernaryCond QUESTION expressionTernaryCond COLON expressionBoolOp
    (59) expressionTernaryCond -> . expressionBoolOp
    (30) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (31) expressionBoolOp -> . expressionComp
    (33) expressionComp -> . expressionComp COMP aritExp
    (34) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (32) unaryExp -> . NOT unaryExp
    (35) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . factorReg
    (24) factorExp -> . LPAREN expression RPAREN
    (25) factorExp -> . expressionFunction
    (27) factorNumExp -> . NUMBER
    (28) bool_atom -> . TRUE
    (29) bool_atom -> . FALSE
    (39) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (40) expressionVectorAt -> . expressionVector
    (41) expressionVectorAt -> . factorVar
    (42) expressionVectorAt -> . memberAccess
    (46) factorReg -> . LBRACE reg_items RBRACE
    (63) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (65) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (66) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (67) expressionFunction -> . PRINT LPAREN expression RPAREN
    (68) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (36) expressionVector -> . LBRACKET vector_items RBRACKET
    (26) factorVar -> . VAR
    (47) memberAccess -> . factorExp DOT factorVar

    SEMICOLON       reduce using rule 12 (optional_expr -> .)
    AO              shift and go to state 24
    DOUBLE_AO       shift and go to state 11
    NOT             shift and go to state 42
    STRING          shift and go to state 20
    LPAREN          shift and go to state 26
    NUMBER          shift and go to state 22
    TRUE            shift and go to state 14
    FALSE           shift and go to state 33
    LBRACE          shift and go to state 50
    MULTIPLICACIONESCALAR shift and go to state 17
    CAPITALIZAR     shift and go to state 37
    COLINEALES      shift and go to state 4
    PRINT           shift and go to state 7
    LENGTH          shift and go to state 15
    LBRACKET        shift and go to state 5
    VAR             shift and go to state 28

    factorNumExp                   shift and go to state 1
    memberAccess                   shift and go to state 16
    expressionTernaryCond          shift and go to state 31
    expressionVector               shift and go to state 34
    aritExp                        shift and go to state 29
    expressionComp                 shift and go to state 12
    expressionAssign               shift and go to state 23
    unaryExp2                      shift and go to state 35
    expressionVectorAt             shift and go to state 36
    expressionFunction             shift and go to state 25
    factorVar                      shift and go to state 38
    optional_expr                  shift and go to state 91
    factorExp                      shift and go to state 27
    bool_atom                      shift and go to state 19
    unaryExp                       shift and go to state 43
    expressionBoolOp               shift and go to state 40
    expression                     shift and go to state 92
    factorReg                      shift and go to state 8

state 62

    (15) unaryExp -> AO unaryExp .

    AO              reduce using rule 15 (unaryExp -> AO unaryExp .)
    COMP            reduce using rule 15 (unaryExp -> AO unaryExp .)
    BOOL_OP         reduce using rule 15 (unaryExp -> AO unaryExp .)
    AOEQUAL         reduce using rule 15 (unaryExp -> AO unaryExp .)
    EQUAL           reduce using rule 15 (unaryExp -> AO unaryExp .)
    QUESTION        reduce using rule 15 (unaryExp -> AO unaryExp .)
    COMMA           reduce using rule 15 (unaryExp -> AO unaryExp .)
    RBRACKET        reduce using rule 15 (unaryExp -> AO unaryExp .)
    RPAREN          reduce using rule 15 (unaryExp -> AO unaryExp .)
    SEMICOLON       reduce using rule 15 (unaryExp -> AO unaryExp .)
    COLON           reduce using rule 15 (unaryExp -> AO unaryExp .)
    RBRACE          reduce using rule 15 (unaryExp -> AO unaryExp .)


state 63

    (24) factorExp -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 93


state 64

    (47) memberAccess -> factorExp DOT . factorVar
    (26) factorVar -> . VAR

    VAR             shift and go to state 28

    factorVar                      shift and go to state 94

state 65

    (13) aritExp -> aritExp AO . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (32) unaryExp -> . NOT unaryExp
    (35) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . factorReg
    (24) factorExp -> . LPAREN expression RPAREN
    (25) factorExp -> . expressionFunction
    (27) factorNumExp -> . NUMBER
    (28) bool_atom -> . TRUE
    (29) bool_atom -> . FALSE
    (39) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (40) expressionVectorAt -> . expressionVector
    (41) expressionVectorAt -> . factorVar
    (42) expressionVectorAt -> . memberAccess
    (46) factorReg -> . LBRACE reg_items RBRACE
    (63) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (65) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (66) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (67) expressionFunction -> . PRINT LPAREN expression RPAREN
    (68) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (36) expressionVector -> . LBRACKET vector_items RBRACKET
    (26) factorVar -> . VAR
    (47) memberAccess -> . factorExp DOT factorVar

    AO              shift and go to state 24
    DOUBLE_AO       shift and go to state 11
    NOT             shift and go to state 42
    STRING          shift and go to state 20
    LPAREN          shift and go to state 26
    NUMBER          shift and go to state 22
    TRUE            shift and go to state 14
    FALSE           shift and go to state 33
    LBRACE          shift and go to state 50
    MULTIPLICACIONESCALAR shift and go to state 17
    CAPITALIZAR     shift and go to state 37
    COLINEALES      shift and go to state 4
    PRINT           shift and go to state 7
    LENGTH          shift and go to state 15
    LBRACKET        shift and go to state 5
    VAR             shift and go to state 28

    factorNumExp                   shift and go to state 1
    memberAccess                   shift and go to state 16
    expressionVector               shift and go to state 34
    factorReg                      shift and go to state 8
    unaryExp2                      shift and go to state 35
    expressionVectorAt             shift and go to state 36
    expressionFunction             shift and go to state 25
    factorVar                      shift and go to state 38
    factorExp                      shift and go to state 27
    bool_atom                      shift and go to state 19
    unaryExp                       shift and go to state 95

state 66

    (55) if -> IF LPAREN . expression RPAREN singleStatement else
    (10) expression -> . expressionAssign
    (43) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (44) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond
    (58) expressionTernaryCond -> . expressionTernaryCond QUESTION expressionTernaryCond COLON expressionBoolOp
    (59) expressionTernaryCond -> . expressionBoolOp
    (30) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (31) expressionBoolOp -> . expressionComp
    (33) expressionComp -> . expressionComp COMP aritExp
    (34) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (32) unaryExp -> . NOT unaryExp
    (35) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . factorReg
    (24) factorExp -> . LPAREN expression RPAREN
    (25) factorExp -> . expressionFunction
    (27) factorNumExp -> . NUMBER
    (28) bool_atom -> . TRUE
    (29) bool_atom -> . FALSE
    (39) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (40) expressionVectorAt -> . expressionVector
    (41) expressionVectorAt -> . factorVar
    (42) expressionVectorAt -> . memberAccess
    (46) factorReg -> . LBRACE reg_items RBRACE
    (63) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (65) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (66) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (67) expressionFunction -> . PRINT LPAREN expression RPAREN
    (68) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (36) expressionVector -> . LBRACKET vector_items RBRACKET
    (26) factorVar -> . VAR
    (47) memberAccess -> . factorExp DOT factorVar

    AO              shift and go to state 24
    DOUBLE_AO       shift and go to state 11
    NOT             shift and go to state 42
    STRING          shift and go to state 20
    LPAREN          shift and go to state 26
    NUMBER          shift and go to state 22
    TRUE            shift and go to state 14
    FALSE           shift and go to state 33
    LBRACE          shift and go to state 50
    MULTIPLICACIONESCALAR shift and go to state 17
    CAPITALIZAR     shift and go to state 37
    COLINEALES      shift and go to state 4
    PRINT           shift and go to state 7
    LENGTH          shift and go to state 15
    LBRACKET        shift and go to state 5
    VAR             shift and go to state 28

    factorNumExp                   shift and go to state 1
    memberAccess                   shift and go to state 16
    expressionTernaryCond          shift and go to state 31
    expressionVector               shift and go to state 34
    aritExp                        shift and go to state 29
    expressionComp                 shift and go to state 12
    expressionAssign               shift and go to state 23
    unaryExp2                      shift and go to state 35
    expressionVectorAt             shift and go to state 36
    expressionFunction             shift and go to state 25
    factorVar                      shift and go to state 38
    expressionBoolOp               shift and go to state 40
    factorExp                      shift and go to state 27
    bool_atom                      shift and go to state 19
    unaryExp                       shift and go to state 43
    expression                     shift and go to state 96
    factorReg                      shift and go to state 8

state 67

    (58) expressionTernaryCond -> expressionTernaryCond QUESTION . expressionTernaryCond COLON expressionBoolOp
    (58) expressionTernaryCond -> . expressionTernaryCond QUESTION expressionTernaryCond COLON expressionBoolOp
    (59) expressionTernaryCond -> . expressionBoolOp
    (30) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (31) expressionBoolOp -> . expressionComp
    (33) expressionComp -> . expressionComp COMP aritExp
    (34) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (32) unaryExp -> . NOT unaryExp
    (35) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . factorReg
    (24) factorExp -> . LPAREN expression RPAREN
    (25) factorExp -> . expressionFunction
    (27) factorNumExp -> . NUMBER
    (28) bool_atom -> . TRUE
    (29) bool_atom -> . FALSE
    (39) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (40) expressionVectorAt -> . expressionVector
    (41) expressionVectorAt -> . factorVar
    (42) expressionVectorAt -> . memberAccess
    (46) factorReg -> . LBRACE reg_items RBRACE
    (63) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (65) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (66) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (67) expressionFunction -> . PRINT LPAREN expression RPAREN
    (68) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (36) expressionVector -> . LBRACKET vector_items RBRACKET
    (26) factorVar -> . VAR
    (47) memberAccess -> . factorExp DOT factorVar

    AO              shift and go to state 24
    DOUBLE_AO       shift and go to state 11
    NOT             shift and go to state 42
    STRING          shift and go to state 20
    LPAREN          shift and go to state 26
    NUMBER          shift and go to state 22
    TRUE            shift and go to state 14
    FALSE           shift and go to state 33
    LBRACE          shift and go to state 50
    MULTIPLICACIONESCALAR shift and go to state 17
    CAPITALIZAR     shift and go to state 37
    COLINEALES      shift and go to state 4
    PRINT           shift and go to state 7
    LENGTH          shift and go to state 15
    LBRACKET        shift and go to state 5
    VAR             shift and go to state 28

    factorNumExp                   shift and go to state 1
    memberAccess                   shift and go to state 16
    expressionTernaryCond          shift and go to state 97
    expressionVector               shift and go to state 34
    expressionComp                 shift and go to state 12
    factorReg                      shift and go to state 8
    unaryExp2                      shift and go to state 35
    expressionVectorAt             shift and go to state 36
    expressionFunction             shift and go to state 25
    factorVar                      shift and go to state 38
    expressionBoolOp               shift and go to state 40
    factorExp                      shift and go to state 27
    bool_atom                      shift and go to state 19
    unaryExp                       shift and go to state 43
    aritExp                        shift and go to state 29

state 68

    (44) expressionAssign -> expressionTernaryCond EQUAL . expressionAssign
    (43) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (44) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond
    (58) expressionTernaryCond -> . expressionTernaryCond QUESTION expressionTernaryCond COLON expressionBoolOp
    (59) expressionTernaryCond -> . expressionBoolOp
    (30) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (31) expressionBoolOp -> . expressionComp
    (33) expressionComp -> . expressionComp COMP aritExp
    (34) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (32) unaryExp -> . NOT unaryExp
    (35) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . factorReg
    (24) factorExp -> . LPAREN expression RPAREN
    (25) factorExp -> . expressionFunction
    (27) factorNumExp -> . NUMBER
    (28) bool_atom -> . TRUE
    (29) bool_atom -> . FALSE
    (39) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (40) expressionVectorAt -> . expressionVector
    (41) expressionVectorAt -> . factorVar
    (42) expressionVectorAt -> . memberAccess
    (46) factorReg -> . LBRACE reg_items RBRACE
    (63) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (65) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (66) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (67) expressionFunction -> . PRINT LPAREN expression RPAREN
    (68) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (36) expressionVector -> . LBRACKET vector_items RBRACKET
    (26) factorVar -> . VAR
    (47) memberAccess -> . factorExp DOT factorVar

    AO              shift and go to state 24
    DOUBLE_AO       shift and go to state 11
    NOT             shift and go to state 42
    STRING          shift and go to state 20
    LPAREN          shift and go to state 26
    NUMBER          shift and go to state 22
    TRUE            shift and go to state 14
    FALSE           shift and go to state 33
    LBRACE          shift and go to state 50
    MULTIPLICACIONESCALAR shift and go to state 17
    CAPITALIZAR     shift and go to state 37
    COLINEALES      shift and go to state 4
    PRINT           shift and go to state 7
    LENGTH          shift and go to state 15
    LBRACKET        shift and go to state 5
    VAR             shift and go to state 28

    factorNumExp                   shift and go to state 1
    memberAccess                   shift and go to state 16
    expressionTernaryCond          shift and go to state 31
    expressionVector               shift and go to state 34
    expressionComp                 shift and go to state 12
    expressionAssign               shift and go to state 98
    unaryExp2                      shift and go to state 35
    expressionVectorAt             shift and go to state 36
    expressionFunction             shift and go to state 25
    factorVar                      shift and go to state 38
    expressionBoolOp               shift and go to state 40
    factorExp                      shift and go to state 27
    bool_atom                      shift and go to state 19
    unaryExp                       shift and go to state 43
    aritExp                        shift and go to state 29
    factorReg                      shift and go to state 8

state 69

    (43) expressionAssign -> expressionTernaryCond AOEQUAL . expressionAssign
    (43) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (44) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond
    (58) expressionTernaryCond -> . expressionTernaryCond QUESTION expressionTernaryCond COLON expressionBoolOp
    (59) expressionTernaryCond -> . expressionBoolOp
    (30) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (31) expressionBoolOp -> . expressionComp
    (33) expressionComp -> . expressionComp COMP aritExp
    (34) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (32) unaryExp -> . NOT unaryExp
    (35) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . factorReg
    (24) factorExp -> . LPAREN expression RPAREN
    (25) factorExp -> . expressionFunction
    (27) factorNumExp -> . NUMBER
    (28) bool_atom -> . TRUE
    (29) bool_atom -> . FALSE
    (39) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (40) expressionVectorAt -> . expressionVector
    (41) expressionVectorAt -> . factorVar
    (42) expressionVectorAt -> . memberAccess
    (46) factorReg -> . LBRACE reg_items RBRACE
    (63) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (65) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (66) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (67) expressionFunction -> . PRINT LPAREN expression RPAREN
    (68) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (36) expressionVector -> . LBRACKET vector_items RBRACKET
    (26) factorVar -> . VAR
    (47) memberAccess -> . factorExp DOT factorVar

    AO              shift and go to state 24
    DOUBLE_AO       shift and go to state 11
    NOT             shift and go to state 42
    STRING          shift and go to state 20
    LPAREN          shift and go to state 26
    NUMBER          shift and go to state 22
    TRUE            shift and go to state 14
    FALSE           shift and go to state 33
    LBRACE          shift and go to state 50
    MULTIPLICACIONESCALAR shift and go to state 17
    CAPITALIZAR     shift and go to state 37
    COLINEALES      shift and go to state 4
    PRINT           shift and go to state 7
    LENGTH          shift and go to state 15
    LBRACKET        shift and go to state 5
    VAR             shift and go to state 28

    factorNumExp                   shift and go to state 1
    memberAccess                   shift and go to state 16
    expressionTernaryCond          shift and go to state 31
    expressionVector               shift and go to state 34
    expressionComp                 shift and go to state 12
    expressionAssign               shift and go to state 99
    unaryExp2                      shift and go to state 35
    expressionVectorAt             shift and go to state 36
    expressionFunction             shift and go to state 25
    factorVar                      shift and go to state 38
    expressionBoolOp               shift and go to state 40
    factorExp                      shift and go to state 27
    bool_atom                      shift and go to state 19
    unaryExp                       shift and go to state 43
    aritExp                        shift and go to state 29
    factorReg                      shift and go to state 8

state 70

    (46) factorReg -> LBRACE reg_items . RBRACE

    RBRACE          shift and go to state 100


state 71

    (52) block -> LBRACE code . RBRACE

    RBRACE          shift and go to state 101


state 72

    (48) reg_items -> reg_field . COMMA reg_items
    (49) reg_items -> reg_field .

    COMMA           shift and go to state 102
    RBRACE          reduce using rule 49 (reg_items -> reg_field .)


state 73

    (50) reg_field -> factorVar . COLON expression
    (41) expressionVectorAt -> factorVar .

    COLON           shift and go to state 103
    LBRACKET        reduce using rule 41 (expressionVectorAt -> factorVar .)
    DOT             reduce using rule 41 (expressionVectorAt -> factorVar .)
    DOUBLE_AO       reduce using rule 41 (expressionVectorAt -> factorVar .)
    AO              reduce using rule 41 (expressionVectorAt -> factorVar .)
    COMP            reduce using rule 41 (expressionVectorAt -> factorVar .)
    BOOL_OP         reduce using rule 41 (expressionVectorAt -> factorVar .)
    AOEQUAL         reduce using rule 41 (expressionVectorAt -> factorVar .)
    EQUAL           reduce using rule 41 (expressionVectorAt -> factorVar .)
    QUESTION        reduce using rule 41 (expressionVectorAt -> factorVar .)
    SEMICOLON       reduce using rule 41 (expressionVectorAt -> factorVar .)


state 74

    (18) unaryExp2 -> unaryExp2 DOUBLE_AO .

    DOUBLE_AO       reduce using rule 18 (unaryExp2 -> unaryExp2 DOUBLE_AO .)
    AO              reduce using rule 18 (unaryExp2 -> unaryExp2 DOUBLE_AO .)
    COMP            reduce using rule 18 (unaryExp2 -> unaryExp2 DOUBLE_AO .)
    BOOL_OP         reduce using rule 18 (unaryExp2 -> unaryExp2 DOUBLE_AO .)
    AOEQUAL         reduce using rule 18 (unaryExp2 -> unaryExp2 DOUBLE_AO .)
    EQUAL           reduce using rule 18 (unaryExp2 -> unaryExp2 DOUBLE_AO .)
    QUESTION        reduce using rule 18 (unaryExp2 -> unaryExp2 DOUBLE_AO .)
    SEMICOLON       reduce using rule 18 (unaryExp2 -> unaryExp2 DOUBLE_AO .)
    COMMA           reduce using rule 18 (unaryExp2 -> unaryExp2 DOUBLE_AO .)
    RBRACKET        reduce using rule 18 (unaryExp2 -> unaryExp2 DOUBLE_AO .)
    RPAREN          reduce using rule 18 (unaryExp2 -> unaryExp2 DOUBLE_AO .)
    COLON           reduce using rule 18 (unaryExp2 -> unaryExp2 DOUBLE_AO .)
    RBRACE          reduce using rule 18 (unaryExp2 -> unaryExp2 DOUBLE_AO .)


state 75

    (39) expressionVectorAt -> expressionVectorAt LBRACKET . expression RBRACKET
    (10) expression -> . expressionAssign
    (43) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (44) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond
    (58) expressionTernaryCond -> . expressionTernaryCond QUESTION expressionTernaryCond COLON expressionBoolOp
    (59) expressionTernaryCond -> . expressionBoolOp
    (30) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (31) expressionBoolOp -> . expressionComp
    (33) expressionComp -> . expressionComp COMP aritExp
    (34) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (32) unaryExp -> . NOT unaryExp
    (35) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . factorReg
    (24) factorExp -> . LPAREN expression RPAREN
    (25) factorExp -> . expressionFunction
    (27) factorNumExp -> . NUMBER
    (28) bool_atom -> . TRUE
    (29) bool_atom -> . FALSE
    (39) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (40) expressionVectorAt -> . expressionVector
    (41) expressionVectorAt -> . factorVar
    (42) expressionVectorAt -> . memberAccess
    (46) factorReg -> . LBRACE reg_items RBRACE
    (63) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (65) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (66) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (67) expressionFunction -> . PRINT LPAREN expression RPAREN
    (68) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (36) expressionVector -> . LBRACKET vector_items RBRACKET
    (26) factorVar -> . VAR
    (47) memberAccess -> . factorExp DOT factorVar

    AO              shift and go to state 24
    DOUBLE_AO       shift and go to state 11
    NOT             shift and go to state 42
    STRING          shift and go to state 20
    LPAREN          shift and go to state 26
    NUMBER          shift and go to state 22
    TRUE            shift and go to state 14
    FALSE           shift and go to state 33
    LBRACE          shift and go to state 50
    MULTIPLICACIONESCALAR shift and go to state 17
    CAPITALIZAR     shift and go to state 37
    COLINEALES      shift and go to state 4
    PRINT           shift and go to state 7
    LENGTH          shift and go to state 15
    LBRACKET        shift and go to state 5
    VAR             shift and go to state 28

    factorNumExp                   shift and go to state 1
    memberAccess                   shift and go to state 16
    expressionTernaryCond          shift and go to state 31
    expressionVector               shift and go to state 34
    aritExp                        shift and go to state 29
    expressionComp                 shift and go to state 12
    expressionAssign               shift and go to state 23
    unaryExp2                      shift and go to state 35
    expressionVectorAt             shift and go to state 36
    expressionFunction             shift and go to state 25
    factorVar                      shift and go to state 38
    expressionBoolOp               shift and go to state 40
    factorExp                      shift and go to state 27
    bool_atom                      shift and go to state 19
    unaryExp                       shift and go to state 43
    expression                     shift and go to state 104
    factorReg                      shift and go to state 8

state 76

    (65) expressionFunction -> CAPITALIZAR LPAREN . expression RPAREN
    (10) expression -> . expressionAssign
    (43) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (44) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond
    (58) expressionTernaryCond -> . expressionTernaryCond QUESTION expressionTernaryCond COLON expressionBoolOp
    (59) expressionTernaryCond -> . expressionBoolOp
    (30) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (31) expressionBoolOp -> . expressionComp
    (33) expressionComp -> . expressionComp COMP aritExp
    (34) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (32) unaryExp -> . NOT unaryExp
    (35) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . factorReg
    (24) factorExp -> . LPAREN expression RPAREN
    (25) factorExp -> . expressionFunction
    (27) factorNumExp -> . NUMBER
    (28) bool_atom -> . TRUE
    (29) bool_atom -> . FALSE
    (39) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (40) expressionVectorAt -> . expressionVector
    (41) expressionVectorAt -> . factorVar
    (42) expressionVectorAt -> . memberAccess
    (46) factorReg -> . LBRACE reg_items RBRACE
    (63) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (65) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (66) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (67) expressionFunction -> . PRINT LPAREN expression RPAREN
    (68) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (36) expressionVector -> . LBRACKET vector_items RBRACKET
    (26) factorVar -> . VAR
    (47) memberAccess -> . factorExp DOT factorVar

    AO              shift and go to state 24
    DOUBLE_AO       shift and go to state 11
    NOT             shift and go to state 42
    STRING          shift and go to state 20
    LPAREN          shift and go to state 26
    NUMBER          shift and go to state 22
    TRUE            shift and go to state 14
    FALSE           shift and go to state 33
    LBRACE          shift and go to state 50
    MULTIPLICACIONESCALAR shift and go to state 17
    CAPITALIZAR     shift and go to state 37
    COLINEALES      shift and go to state 4
    PRINT           shift and go to state 7
    LENGTH          shift and go to state 15
    LBRACKET        shift and go to state 5
    VAR             shift and go to state 28

    factorNumExp                   shift and go to state 1
    memberAccess                   shift and go to state 16
    expressionTernaryCond          shift and go to state 31
    expressionVector               shift and go to state 34
    aritExp                        shift and go to state 29
    expressionComp                 shift and go to state 12
    expressionAssign               shift and go to state 23
    unaryExp2                      shift and go to state 35
    expressionVectorAt             shift and go to state 36
    expressionFunction             shift and go to state 25
    factorVar                      shift and go to state 38
    expressionBoolOp               shift and go to state 40
    factorExp                      shift and go to state 27
    bool_atom                      shift and go to state 19
    unaryExp                       shift and go to state 43
    expression                     shift and go to state 105
    factorReg                      shift and go to state 8

state 77

    (30) expressionBoolOp -> expressionBoolOp BOOL_OP . expressionComp
    (33) expressionComp -> . expressionComp COMP aritExp
    (34) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (32) unaryExp -> . NOT unaryExp
    (35) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . factorReg
    (24) factorExp -> . LPAREN expression RPAREN
    (25) factorExp -> . expressionFunction
    (27) factorNumExp -> . NUMBER
    (28) bool_atom -> . TRUE
    (29) bool_atom -> . FALSE
    (39) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (40) expressionVectorAt -> . expressionVector
    (41) expressionVectorAt -> . factorVar
    (42) expressionVectorAt -> . memberAccess
    (46) factorReg -> . LBRACE reg_items RBRACE
    (63) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (65) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (66) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (67) expressionFunction -> . PRINT LPAREN expression RPAREN
    (68) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (36) expressionVector -> . LBRACKET vector_items RBRACKET
    (26) factorVar -> . VAR
    (47) memberAccess -> . factorExp DOT factorVar

    AO              shift and go to state 24
    DOUBLE_AO       shift and go to state 11
    NOT             shift and go to state 42
    STRING          shift and go to state 20
    LPAREN          shift and go to state 26
    NUMBER          shift and go to state 22
    TRUE            shift and go to state 14
    FALSE           shift and go to state 33
    LBRACE          shift and go to state 50
    MULTIPLICACIONESCALAR shift and go to state 17
    CAPITALIZAR     shift and go to state 37
    COLINEALES      shift and go to state 4
    PRINT           shift and go to state 7
    LENGTH          shift and go to state 15
    LBRACKET        shift and go to state 5
    VAR             shift and go to state 28

    factorNumExp                   shift and go to state 1
    memberAccess                   shift and go to state 16
    expressionVector               shift and go to state 34
    expressionComp                 shift and go to state 106
    factorReg                      shift and go to state 8
    unaryExp2                      shift and go to state 35
    expressionVectorAt             shift and go to state 36
    expressionFunction             shift and go to state 25
    factorVar                      shift and go to state 38
    factorExp                      shift and go to state 27
    bool_atom                      shift and go to state 19
    unaryExp                       shift and go to state 43
    aritExp                        shift and go to state 29

state 78

    (32) unaryExp -> NOT unaryExp .

    AO              reduce using rule 32 (unaryExp -> NOT unaryExp .)
    COMP            reduce using rule 32 (unaryExp -> NOT unaryExp .)
    BOOL_OP         reduce using rule 32 (unaryExp -> NOT unaryExp .)
    AOEQUAL         reduce using rule 32 (unaryExp -> NOT unaryExp .)
    EQUAL           reduce using rule 32 (unaryExp -> NOT unaryExp .)
    QUESTION        reduce using rule 32 (unaryExp -> NOT unaryExp .)
    COMMA           reduce using rule 32 (unaryExp -> NOT unaryExp .)
    RBRACKET        reduce using rule 32 (unaryExp -> NOT unaryExp .)
    RPAREN          reduce using rule 32 (unaryExp -> NOT unaryExp .)
    SEMICOLON       reduce using rule 32 (unaryExp -> NOT unaryExp .)
    COLON           reduce using rule 32 (unaryExp -> NOT unaryExp .)
    RBRACE          reduce using rule 32 (unaryExp -> NOT unaryExp .)


state 79

    (4) statement -> expression SEMICOLON .

    COMMENT         reduce using rule 4 (statement -> expression SEMICOLON .)
    LBRACE          reduce using rule 4 (statement -> expression SEMICOLON .)
    IF              reduce using rule 4 (statement -> expression SEMICOLON .)
    WHILE           reduce using rule 4 (statement -> expression SEMICOLON .)
    FOR             reduce using rule 4 (statement -> expression SEMICOLON .)
    DO              reduce using rule 4 (statement -> expression SEMICOLON .)
    AO              reduce using rule 4 (statement -> expression SEMICOLON .)
    DOUBLE_AO       reduce using rule 4 (statement -> expression SEMICOLON .)
    NOT             reduce using rule 4 (statement -> expression SEMICOLON .)
    STRING          reduce using rule 4 (statement -> expression SEMICOLON .)
    LPAREN          reduce using rule 4 (statement -> expression SEMICOLON .)
    NUMBER          reduce using rule 4 (statement -> expression SEMICOLON .)
    TRUE            reduce using rule 4 (statement -> expression SEMICOLON .)
    FALSE           reduce using rule 4 (statement -> expression SEMICOLON .)
    MULTIPLICACIONESCALAR reduce using rule 4 (statement -> expression SEMICOLON .)
    CAPITALIZAR     reduce using rule 4 (statement -> expression SEMICOLON .)
    COLINEALES      reduce using rule 4 (statement -> expression SEMICOLON .)
    PRINT           reduce using rule 4 (statement -> expression SEMICOLON .)
    LENGTH          reduce using rule 4 (statement -> expression SEMICOLON .)
    LBRACKET        reduce using rule 4 (statement -> expression SEMICOLON .)
    VAR             reduce using rule 4 (statement -> expression SEMICOLON .)
    $end            reduce using rule 4 (statement -> expression SEMICOLON .)
    RBRACE          reduce using rule 4 (statement -> expression SEMICOLON .)
    ELSE            reduce using rule 4 (statement -> expression SEMICOLON .)


state 80

    (53) singleStatement -> COMMENT singleStatement .

    WHILE           reduce using rule 53 (singleStatement -> COMMENT singleStatement .)
    COMMENT         reduce using rule 53 (singleStatement -> COMMENT singleStatement .)
    LBRACE          reduce using rule 53 (singleStatement -> COMMENT singleStatement .)
    IF              reduce using rule 53 (singleStatement -> COMMENT singleStatement .)
    FOR             reduce using rule 53 (singleStatement -> COMMENT singleStatement .)
    DO              reduce using rule 53 (singleStatement -> COMMENT singleStatement .)
    AO              reduce using rule 53 (singleStatement -> COMMENT singleStatement .)
    DOUBLE_AO       reduce using rule 53 (singleStatement -> COMMENT singleStatement .)
    NOT             reduce using rule 53 (singleStatement -> COMMENT singleStatement .)
    STRING          reduce using rule 53 (singleStatement -> COMMENT singleStatement .)
    LPAREN          reduce using rule 53 (singleStatement -> COMMENT singleStatement .)
    NUMBER          reduce using rule 53 (singleStatement -> COMMENT singleStatement .)
    TRUE            reduce using rule 53 (singleStatement -> COMMENT singleStatement .)
    FALSE           reduce using rule 53 (singleStatement -> COMMENT singleStatement .)
    MULTIPLICACIONESCALAR reduce using rule 53 (singleStatement -> COMMENT singleStatement .)
    CAPITALIZAR     reduce using rule 53 (singleStatement -> COMMENT singleStatement .)
    COLINEALES      reduce using rule 53 (singleStatement -> COMMENT singleStatement .)
    PRINT           reduce using rule 53 (singleStatement -> COMMENT singleStatement .)
    LENGTH          reduce using rule 53 (singleStatement -> COMMENT singleStatement .)
    LBRACKET        reduce using rule 53 (singleStatement -> COMMENT singleStatement .)
    VAR             reduce using rule 53 (singleStatement -> COMMENT singleStatement .)
    $end            reduce using rule 53 (singleStatement -> COMMENT singleStatement .)
    RBRACE          reduce using rule 53 (singleStatement -> COMMENT singleStatement .)
    ELSE            reduce using rule 53 (singleStatement -> COMMENT singleStatement .)


state 81

    (62) do_while -> DO singleStatement WHILE . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 107


state 82

    (66) expressionFunction -> COLINEALES LPAREN expression . COMMA expression RPAREN

    COMMA           shift and go to state 108


state 83

    (50) reg_field -> factorVar . COLON expression

    COLON           shift and go to state 103


state 84

    (36) expressionVector -> LBRACKET vector_items RBRACKET .

    LBRACKET        reduce using rule 36 (expressionVector -> LBRACKET vector_items RBRACKET .)
    DOT             reduce using rule 36 (expressionVector -> LBRACKET vector_items RBRACKET .)
    DOUBLE_AO       reduce using rule 36 (expressionVector -> LBRACKET vector_items RBRACKET .)
    AO              reduce using rule 36 (expressionVector -> LBRACKET vector_items RBRACKET .)
    COMP            reduce using rule 36 (expressionVector -> LBRACKET vector_items RBRACKET .)
    BOOL_OP         reduce using rule 36 (expressionVector -> LBRACKET vector_items RBRACKET .)
    AOEQUAL         reduce using rule 36 (expressionVector -> LBRACKET vector_items RBRACKET .)
    EQUAL           reduce using rule 36 (expressionVector -> LBRACKET vector_items RBRACKET .)
    QUESTION        reduce using rule 36 (expressionVector -> LBRACKET vector_items RBRACKET .)
    SEMICOLON       reduce using rule 36 (expressionVector -> LBRACKET vector_items RBRACKET .)
    COMMA           reduce using rule 36 (expressionVector -> LBRACKET vector_items RBRACKET .)
    RBRACKET        reduce using rule 36 (expressionVector -> LBRACKET vector_items RBRACKET .)
    RPAREN          reduce using rule 36 (expressionVector -> LBRACKET vector_items RBRACKET .)
    COLON           reduce using rule 36 (expressionVector -> LBRACKET vector_items RBRACKET .)
    RBRACE          reduce using rule 36 (expressionVector -> LBRACKET vector_items RBRACKET .)


state 85

    (37) vector_items -> expression COMMA . vector_items
    (37) vector_items -> . expression COMMA vector_items
    (38) vector_items -> . expression
    (10) expression -> . expressionAssign
    (43) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (44) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond
    (58) expressionTernaryCond -> . expressionTernaryCond QUESTION expressionTernaryCond COLON expressionBoolOp
    (59) expressionTernaryCond -> . expressionBoolOp
    (30) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (31) expressionBoolOp -> . expressionComp
    (33) expressionComp -> . expressionComp COMP aritExp
    (34) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (32) unaryExp -> . NOT unaryExp
    (35) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . factorReg
    (24) factorExp -> . LPAREN expression RPAREN
    (25) factorExp -> . expressionFunction
    (27) factorNumExp -> . NUMBER
    (28) bool_atom -> . TRUE
    (29) bool_atom -> . FALSE
    (39) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (40) expressionVectorAt -> . expressionVector
    (41) expressionVectorAt -> . factorVar
    (42) expressionVectorAt -> . memberAccess
    (46) factorReg -> . LBRACE reg_items RBRACE
    (63) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (65) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (66) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (67) expressionFunction -> . PRINT LPAREN expression RPAREN
    (68) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (36) expressionVector -> . LBRACKET vector_items RBRACKET
    (26) factorVar -> . VAR
    (47) memberAccess -> . factorExp DOT factorVar

    AO              shift and go to state 24
    DOUBLE_AO       shift and go to state 11
    NOT             shift and go to state 42
    STRING          shift and go to state 20
    LPAREN          shift and go to state 26
    NUMBER          shift and go to state 22
    TRUE            shift and go to state 14
    FALSE           shift and go to state 33
    LBRACE          shift and go to state 50
    MULTIPLICACIONESCALAR shift and go to state 17
    CAPITALIZAR     shift and go to state 37
    COLINEALES      shift and go to state 4
    PRINT           shift and go to state 7
    LENGTH          shift and go to state 15
    LBRACKET        shift and go to state 5
    VAR             shift and go to state 28

    vector_items                   shift and go to state 109
    factorNumExp                   shift and go to state 1
    expressionTernaryCond          shift and go to state 31
    expressionVector               shift and go to state 34
    aritExp                        shift and go to state 29
    expressionComp                 shift and go to state 12
    expressionAssign               shift and go to state 23
    unaryExp2                      shift and go to state 35
    expressionVectorAt             shift and go to state 36
    expressionFunction             shift and go to state 25
    factorVar                      shift and go to state 38
    expressionBoolOp               shift and go to state 40
    factorExp                      shift and go to state 27
    bool_atom                      shift and go to state 19
    unaryExp                       shift and go to state 43
    expression                     shift and go to state 52
    factorReg                      shift and go to state 8
    memberAccess                   shift and go to state 16

state 86

    (60) while -> WHILE LPAREN expression . RPAREN singleStatement

    RPAREN          shift and go to state 110


state 87

    (67) expressionFunction -> PRINT LPAREN expression . RPAREN

    RPAREN          shift and go to state 111


state 88

    (33) expressionComp -> expressionComp COMP aritExp .
    (13) aritExp -> aritExp . AO unaryExp

    COMP            reduce using rule 33 (expressionComp -> expressionComp COMP aritExp .)
    BOOL_OP         reduce using rule 33 (expressionComp -> expressionComp COMP aritExp .)
    AOEQUAL         reduce using rule 33 (expressionComp -> expressionComp COMP aritExp .)
    EQUAL           reduce using rule 33 (expressionComp -> expressionComp COMP aritExp .)
    QUESTION        reduce using rule 33 (expressionComp -> expressionComp COMP aritExp .)
    COMMA           reduce using rule 33 (expressionComp -> expressionComp COMP aritExp .)
    RBRACE          reduce using rule 33 (expressionComp -> expressionComp COMP aritExp .)
    SEMICOLON       reduce using rule 33 (expressionComp -> expressionComp COMP aritExp .)
    RPAREN          reduce using rule 33 (expressionComp -> expressionComp COMP aritExp .)
    RBRACKET        reduce using rule 33 (expressionComp -> expressionComp COMP aritExp .)
    COLON           reduce using rule 33 (expressionComp -> expressionComp COMP aritExp .)
    AO              shift and go to state 65


state 89

    (68) expressionFunction -> LENGTH LPAREN expression . RPAREN

    RPAREN          shift and go to state 112


state 90

    (63) expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression . COMMA expression RPAREN
    (64) expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression . COMMA expression COMMA expression RPAREN

    COMMA           shift and go to state 113


state 91

    (61) for -> FOR LPAREN optional_expr . SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement

    SEMICOLON       shift and go to state 114


state 92

    (11) optional_expr -> expression .

    SEMICOLON       reduce using rule 11 (optional_expr -> expression .)
    RPAREN          reduce using rule 11 (optional_expr -> expression .)


state 93

    (24) factorExp -> LPAREN expression RPAREN .

    DOT             reduce using rule 24 (factorExp -> LPAREN expression RPAREN .)
    DOUBLE_AO       reduce using rule 24 (factorExp -> LPAREN expression RPAREN .)
    AO              reduce using rule 24 (factorExp -> LPAREN expression RPAREN .)
    COMP            reduce using rule 24 (factorExp -> LPAREN expression RPAREN .)
    BOOL_OP         reduce using rule 24 (factorExp -> LPAREN expression RPAREN .)
    AOEQUAL         reduce using rule 24 (factorExp -> LPAREN expression RPAREN .)
    EQUAL           reduce using rule 24 (factorExp -> LPAREN expression RPAREN .)
    QUESTION        reduce using rule 24 (factorExp -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 24 (factorExp -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 24 (factorExp -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 24 (factorExp -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 24 (factorExp -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 24 (factorExp -> LPAREN expression RPAREN .)
    COLON           reduce using rule 24 (factorExp -> LPAREN expression RPAREN .)


state 94

    (47) memberAccess -> factorExp DOT factorVar .

    LBRACKET        reduce using rule 47 (memberAccess -> factorExp DOT factorVar .)
    DOT             reduce using rule 47 (memberAccess -> factorExp DOT factorVar .)
    DOUBLE_AO       reduce using rule 47 (memberAccess -> factorExp DOT factorVar .)
    AO              reduce using rule 47 (memberAccess -> factorExp DOT factorVar .)
    COMP            reduce using rule 47 (memberAccess -> factorExp DOT factorVar .)
    BOOL_OP         reduce using rule 47 (memberAccess -> factorExp DOT factorVar .)
    AOEQUAL         reduce using rule 47 (memberAccess -> factorExp DOT factorVar .)
    EQUAL           reduce using rule 47 (memberAccess -> factorExp DOT factorVar .)
    QUESTION        reduce using rule 47 (memberAccess -> factorExp DOT factorVar .)
    RPAREN          reduce using rule 47 (memberAccess -> factorExp DOT factorVar .)
    SEMICOLON       reduce using rule 47 (memberAccess -> factorExp DOT factorVar .)
    COMMA           reduce using rule 47 (memberAccess -> factorExp DOT factorVar .)
    RBRACKET        reduce using rule 47 (memberAccess -> factorExp DOT factorVar .)
    RBRACE          reduce using rule 47 (memberAccess -> factorExp DOT factorVar .)
    COLON           reduce using rule 47 (memberAccess -> factorExp DOT factorVar .)


state 95

    (13) aritExp -> aritExp AO unaryExp .

    AO              reduce using rule 13 (aritExp -> aritExp AO unaryExp .)
    COMP            reduce using rule 13 (aritExp -> aritExp AO unaryExp .)
    BOOL_OP         reduce using rule 13 (aritExp -> aritExp AO unaryExp .)
    AOEQUAL         reduce using rule 13 (aritExp -> aritExp AO unaryExp .)
    EQUAL           reduce using rule 13 (aritExp -> aritExp AO unaryExp .)
    QUESTION        reduce using rule 13 (aritExp -> aritExp AO unaryExp .)
    SEMICOLON       reduce using rule 13 (aritExp -> aritExp AO unaryExp .)
    COMMA           reduce using rule 13 (aritExp -> aritExp AO unaryExp .)
    RBRACKET        reduce using rule 13 (aritExp -> aritExp AO unaryExp .)
    RPAREN          reduce using rule 13 (aritExp -> aritExp AO unaryExp .)
    COLON           reduce using rule 13 (aritExp -> aritExp AO unaryExp .)
    RBRACE          reduce using rule 13 (aritExp -> aritExp AO unaryExp .)


state 96

    (55) if -> IF LPAREN expression . RPAREN singleStatement else

    RPAREN          shift and go to state 115


state 97

    (58) expressionTernaryCond -> expressionTernaryCond QUESTION expressionTernaryCond . COLON expressionBoolOp
    (58) expressionTernaryCond -> expressionTernaryCond . QUESTION expressionTernaryCond COLON expressionBoolOp

    COLON           shift and go to state 116
    QUESTION        shift and go to state 67


state 98

    (44) expressionAssign -> expressionTernaryCond EQUAL expressionAssign .

    COMMA           reduce using rule 44 (expressionAssign -> expressionTernaryCond EQUAL expressionAssign .)
    RBRACKET        reduce using rule 44 (expressionAssign -> expressionTernaryCond EQUAL expressionAssign .)
    SEMICOLON       reduce using rule 44 (expressionAssign -> expressionTernaryCond EQUAL expressionAssign .)
    RPAREN          reduce using rule 44 (expressionAssign -> expressionTernaryCond EQUAL expressionAssign .)
    RBRACE          reduce using rule 44 (expressionAssign -> expressionTernaryCond EQUAL expressionAssign .)


state 99

    (43) expressionAssign -> expressionTernaryCond AOEQUAL expressionAssign .

    COMMA           reduce using rule 43 (expressionAssign -> expressionTernaryCond AOEQUAL expressionAssign .)
    RBRACKET        reduce using rule 43 (expressionAssign -> expressionTernaryCond AOEQUAL expressionAssign .)
    SEMICOLON       reduce using rule 43 (expressionAssign -> expressionTernaryCond AOEQUAL expressionAssign .)
    RPAREN          reduce using rule 43 (expressionAssign -> expressionTernaryCond AOEQUAL expressionAssign .)
    RBRACE          reduce using rule 43 (expressionAssign -> expressionTernaryCond AOEQUAL expressionAssign .)


state 100

    (46) factorReg -> LBRACE reg_items RBRACE .

    DOT             reduce using rule 46 (factorReg -> LBRACE reg_items RBRACE .)
    DOUBLE_AO       reduce using rule 46 (factorReg -> LBRACE reg_items RBRACE .)
    AO              reduce using rule 46 (factorReg -> LBRACE reg_items RBRACE .)
    COMP            reduce using rule 46 (factorReg -> LBRACE reg_items RBRACE .)
    BOOL_OP         reduce using rule 46 (factorReg -> LBRACE reg_items RBRACE .)
    AOEQUAL         reduce using rule 46 (factorReg -> LBRACE reg_items RBRACE .)
    EQUAL           reduce using rule 46 (factorReg -> LBRACE reg_items RBRACE .)
    QUESTION        reduce using rule 46 (factorReg -> LBRACE reg_items RBRACE .)
    SEMICOLON       reduce using rule 46 (factorReg -> LBRACE reg_items RBRACE .)
    COMMA           reduce using rule 46 (factorReg -> LBRACE reg_items RBRACE .)
    RBRACKET        reduce using rule 46 (factorReg -> LBRACE reg_items RBRACE .)
    RPAREN          reduce using rule 46 (factorReg -> LBRACE reg_items RBRACE .)
    COLON           reduce using rule 46 (factorReg -> LBRACE reg_items RBRACE .)
    RBRACE          reduce using rule 46 (factorReg -> LBRACE reg_items RBRACE .)


state 101

    (52) block -> LBRACE code RBRACE .

    WHILE           reduce using rule 52 (block -> LBRACE code RBRACE .)
    COMMENT         reduce using rule 52 (block -> LBRACE code RBRACE .)
    LBRACE          reduce using rule 52 (block -> LBRACE code RBRACE .)
    IF              reduce using rule 52 (block -> LBRACE code RBRACE .)
    FOR             reduce using rule 52 (block -> LBRACE code RBRACE .)
    DO              reduce using rule 52 (block -> LBRACE code RBRACE .)
    AO              reduce using rule 52 (block -> LBRACE code RBRACE .)
    DOUBLE_AO       reduce using rule 52 (block -> LBRACE code RBRACE .)
    NOT             reduce using rule 52 (block -> LBRACE code RBRACE .)
    STRING          reduce using rule 52 (block -> LBRACE code RBRACE .)
    LPAREN          reduce using rule 52 (block -> LBRACE code RBRACE .)
    NUMBER          reduce using rule 52 (block -> LBRACE code RBRACE .)
    TRUE            reduce using rule 52 (block -> LBRACE code RBRACE .)
    FALSE           reduce using rule 52 (block -> LBRACE code RBRACE .)
    MULTIPLICACIONESCALAR reduce using rule 52 (block -> LBRACE code RBRACE .)
    CAPITALIZAR     reduce using rule 52 (block -> LBRACE code RBRACE .)
    COLINEALES      reduce using rule 52 (block -> LBRACE code RBRACE .)
    PRINT           reduce using rule 52 (block -> LBRACE code RBRACE .)
    LENGTH          reduce using rule 52 (block -> LBRACE code RBRACE .)
    LBRACKET        reduce using rule 52 (block -> LBRACE code RBRACE .)
    VAR             reduce using rule 52 (block -> LBRACE code RBRACE .)
    $end            reduce using rule 52 (block -> LBRACE code RBRACE .)
    RBRACE          reduce using rule 52 (block -> LBRACE code RBRACE .)
    ELSE            reduce using rule 52 (block -> LBRACE code RBRACE .)


state 102

    (48) reg_items -> reg_field COMMA . reg_items
    (48) reg_items -> . reg_field COMMA reg_items
    (49) reg_items -> . reg_field
    (50) reg_field -> . factorVar COLON expression
    (26) factorVar -> . VAR

    VAR             shift and go to state 28

    factorVar                      shift and go to state 83
    reg_field                      shift and go to state 72
    reg_items                      shift and go to state 117

state 103

    (50) reg_field -> factorVar COLON . expression
    (10) expression -> . expressionAssign
    (43) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (44) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond
    (58) expressionTernaryCond -> . expressionTernaryCond QUESTION expressionTernaryCond COLON expressionBoolOp
    (59) expressionTernaryCond -> . expressionBoolOp
    (30) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (31) expressionBoolOp -> . expressionComp
    (33) expressionComp -> . expressionComp COMP aritExp
    (34) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (32) unaryExp -> . NOT unaryExp
    (35) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . factorReg
    (24) factorExp -> . LPAREN expression RPAREN
    (25) factorExp -> . expressionFunction
    (27) factorNumExp -> . NUMBER
    (28) bool_atom -> . TRUE
    (29) bool_atom -> . FALSE
    (39) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (40) expressionVectorAt -> . expressionVector
    (41) expressionVectorAt -> . factorVar
    (42) expressionVectorAt -> . memberAccess
    (46) factorReg -> . LBRACE reg_items RBRACE
    (63) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (65) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (66) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (67) expressionFunction -> . PRINT LPAREN expression RPAREN
    (68) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (36) expressionVector -> . LBRACKET vector_items RBRACKET
    (26) factorVar -> . VAR
    (47) memberAccess -> . factorExp DOT factorVar

    AO              shift and go to state 24
    DOUBLE_AO       shift and go to state 11
    NOT             shift and go to state 42
    STRING          shift and go to state 20
    LPAREN          shift and go to state 26
    NUMBER          shift and go to state 22
    TRUE            shift and go to state 14
    FALSE           shift and go to state 33
    LBRACE          shift and go to state 50
    MULTIPLICACIONESCALAR shift and go to state 17
    CAPITALIZAR     shift and go to state 37
    COLINEALES      shift and go to state 4
    PRINT           shift and go to state 7
    LENGTH          shift and go to state 15
    LBRACKET        shift and go to state 5
    VAR             shift and go to state 28

    factorNumExp                   shift and go to state 1
    memberAccess                   shift and go to state 16
    expressionTernaryCond          shift and go to state 31
    expressionVector               shift and go to state 34
    aritExp                        shift and go to state 29
    expressionComp                 shift and go to state 12
    expressionAssign               shift and go to state 23
    unaryExp2                      shift and go to state 35
    expressionVectorAt             shift and go to state 36
    expressionFunction             shift and go to state 25
    factorVar                      shift and go to state 38
    expressionBoolOp               shift and go to state 40
    factorExp                      shift and go to state 27
    bool_atom                      shift and go to state 19
    unaryExp                       shift and go to state 43
    expression                     shift and go to state 118
    factorReg                      shift and go to state 8

state 104

    (39) expressionVectorAt -> expressionVectorAt LBRACKET expression . RBRACKET

    RBRACKET        shift and go to state 119


state 105

    (65) expressionFunction -> CAPITALIZAR LPAREN expression . RPAREN

    RPAREN          shift and go to state 120


state 106

    (30) expressionBoolOp -> expressionBoolOp BOOL_OP expressionComp .
    (33) expressionComp -> expressionComp . COMP aritExp

    BOOL_OP         reduce using rule 30 (expressionBoolOp -> expressionBoolOp BOOL_OP expressionComp .)
    AOEQUAL         reduce using rule 30 (expressionBoolOp -> expressionBoolOp BOOL_OP expressionComp .)
    EQUAL           reduce using rule 30 (expressionBoolOp -> expressionBoolOp BOOL_OP expressionComp .)
    QUESTION        reduce using rule 30 (expressionBoolOp -> expressionBoolOp BOOL_OP expressionComp .)
    SEMICOLON       reduce using rule 30 (expressionBoolOp -> expressionBoolOp BOOL_OP expressionComp .)
    COMMA           reduce using rule 30 (expressionBoolOp -> expressionBoolOp BOOL_OP expressionComp .)
    RBRACKET        reduce using rule 30 (expressionBoolOp -> expressionBoolOp BOOL_OP expressionComp .)
    RPAREN          reduce using rule 30 (expressionBoolOp -> expressionBoolOp BOOL_OP expressionComp .)
    COLON           reduce using rule 30 (expressionBoolOp -> expressionBoolOp BOOL_OP expressionComp .)
    RBRACE          reduce using rule 30 (expressionBoolOp -> expressionBoolOp BOOL_OP expressionComp .)
    COMP            shift and go to state 57


state 107

    (62) do_while -> DO singleStatement WHILE LPAREN . expression RPAREN SEMICOLON
    (10) expression -> . expressionAssign
    (43) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (44) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond
    (58) expressionTernaryCond -> . expressionTernaryCond QUESTION expressionTernaryCond COLON expressionBoolOp
    (59) expressionTernaryCond -> . expressionBoolOp
    (30) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (31) expressionBoolOp -> . expressionComp
    (33) expressionComp -> . expressionComp COMP aritExp
    (34) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (32) unaryExp -> . NOT unaryExp
    (35) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . factorReg
    (24) factorExp -> . LPAREN expression RPAREN
    (25) factorExp -> . expressionFunction
    (27) factorNumExp -> . NUMBER
    (28) bool_atom -> . TRUE
    (29) bool_atom -> . FALSE
    (39) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (40) expressionVectorAt -> . expressionVector
    (41) expressionVectorAt -> . factorVar
    (42) expressionVectorAt -> . memberAccess
    (46) factorReg -> . LBRACE reg_items RBRACE
    (63) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (65) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (66) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (67) expressionFunction -> . PRINT LPAREN expression RPAREN
    (68) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (36) expressionVector -> . LBRACKET vector_items RBRACKET
    (26) factorVar -> . VAR
    (47) memberAccess -> . factorExp DOT factorVar

    AO              shift and go to state 24
    DOUBLE_AO       shift and go to state 11
    NOT             shift and go to state 42
    STRING          shift and go to state 20
    LPAREN          shift and go to state 26
    NUMBER          shift and go to state 22
    TRUE            shift and go to state 14
    FALSE           shift and go to state 33
    LBRACE          shift and go to state 50
    MULTIPLICACIONESCALAR shift and go to state 17
    CAPITALIZAR     shift and go to state 37
    COLINEALES      shift and go to state 4
    PRINT           shift and go to state 7
    LENGTH          shift and go to state 15
    LBRACKET        shift and go to state 5
    VAR             shift and go to state 28

    factorNumExp                   shift and go to state 1
    memberAccess                   shift and go to state 16
    expressionTernaryCond          shift and go to state 31
    expressionVector               shift and go to state 34
    aritExp                        shift and go to state 29
    expressionComp                 shift and go to state 12
    expressionAssign               shift and go to state 23
    unaryExp2                      shift and go to state 35
    expressionVectorAt             shift and go to state 36
    expressionFunction             shift and go to state 25
    factorVar                      shift and go to state 38
    expressionBoolOp               shift and go to state 40
    factorExp                      shift and go to state 27
    bool_atom                      shift and go to state 19
    unaryExp                       shift and go to state 43
    expression                     shift and go to state 121
    factorReg                      shift and go to state 8

state 108

    (66) expressionFunction -> COLINEALES LPAREN expression COMMA . expression RPAREN
    (10) expression -> . expressionAssign
    (43) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (44) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond
    (58) expressionTernaryCond -> . expressionTernaryCond QUESTION expressionTernaryCond COLON expressionBoolOp
    (59) expressionTernaryCond -> . expressionBoolOp
    (30) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (31) expressionBoolOp -> . expressionComp
    (33) expressionComp -> . expressionComp COMP aritExp
    (34) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (32) unaryExp -> . NOT unaryExp
    (35) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . factorReg
    (24) factorExp -> . LPAREN expression RPAREN
    (25) factorExp -> . expressionFunction
    (27) factorNumExp -> . NUMBER
    (28) bool_atom -> . TRUE
    (29) bool_atom -> . FALSE
    (39) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (40) expressionVectorAt -> . expressionVector
    (41) expressionVectorAt -> . factorVar
    (42) expressionVectorAt -> . memberAccess
    (46) factorReg -> . LBRACE reg_items RBRACE
    (63) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (65) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (66) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (67) expressionFunction -> . PRINT LPAREN expression RPAREN
    (68) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (36) expressionVector -> . LBRACKET vector_items RBRACKET
    (26) factorVar -> . VAR
    (47) memberAccess -> . factorExp DOT factorVar

    AO              shift and go to state 24
    DOUBLE_AO       shift and go to state 11
    NOT             shift and go to state 42
    STRING          shift and go to state 20
    LPAREN          shift and go to state 26
    NUMBER          shift and go to state 22
    TRUE            shift and go to state 14
    FALSE           shift and go to state 33
    LBRACE          shift and go to state 50
    MULTIPLICACIONESCALAR shift and go to state 17
    CAPITALIZAR     shift and go to state 37
    COLINEALES      shift and go to state 4
    PRINT           shift and go to state 7
    LENGTH          shift and go to state 15
    LBRACKET        shift and go to state 5
    VAR             shift and go to state 28

    factorNumExp                   shift and go to state 1
    memberAccess                   shift and go to state 16
    expressionTernaryCond          shift and go to state 31
    expressionVector               shift and go to state 34
    aritExp                        shift and go to state 29
    expressionComp                 shift and go to state 12
    expressionAssign               shift and go to state 23
    unaryExp2                      shift and go to state 35
    expressionVectorAt             shift and go to state 36
    expressionFunction             shift and go to state 25
    factorVar                      shift and go to state 38
    expressionBoolOp               shift and go to state 40
    factorExp                      shift and go to state 27
    bool_atom                      shift and go to state 19
    unaryExp                       shift and go to state 43
    expression                     shift and go to state 122
    factorReg                      shift and go to state 8

state 109

    (37) vector_items -> expression COMMA vector_items .

    RBRACKET        reduce using rule 37 (vector_items -> expression COMMA vector_items .)


state 110

    (60) while -> WHILE LPAREN expression RPAREN . singleStatement
    (53) singleStatement -> . COMMENT singleStatement
    (54) singleStatement -> . statement
    (4) statement -> . expression SEMICOLON
    (5) statement -> . block
    (6) statement -> . if
    (7) statement -> . while
    (8) statement -> . for
    (9) statement -> . do_while
    (10) expression -> . expressionAssign
    (52) block -> . LBRACE code RBRACE
    (55) if -> . IF LPAREN expression RPAREN singleStatement else
    (60) while -> . WHILE LPAREN expression RPAREN singleStatement
    (61) for -> . FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement
    (62) do_while -> . DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON
    (43) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (44) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond
    (58) expressionTernaryCond -> . expressionTernaryCond QUESTION expressionTernaryCond COLON expressionBoolOp
    (59) expressionTernaryCond -> . expressionBoolOp
    (30) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (31) expressionBoolOp -> . expressionComp
    (33) expressionComp -> . expressionComp COMP aritExp
    (34) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (32) unaryExp -> . NOT unaryExp
    (35) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . factorReg
    (24) factorExp -> . LPAREN expression RPAREN
    (25) factorExp -> . expressionFunction
    (27) factorNumExp -> . NUMBER
    (28) bool_atom -> . TRUE
    (29) bool_atom -> . FALSE
    (39) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (40) expressionVectorAt -> . expressionVector
    (41) expressionVectorAt -> . factorVar
    (42) expressionVectorAt -> . memberAccess
    (46) factorReg -> . LBRACE reg_items RBRACE
    (63) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (65) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (66) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (67) expressionFunction -> . PRINT LPAREN expression RPAREN
    (68) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (36) expressionVector -> . LBRACKET vector_items RBRACKET
    (26) factorVar -> . VAR
    (47) memberAccess -> . factorExp DOT factorVar

    COMMENT         shift and go to state 46
    LBRACE          shift and go to state 32
    IF              shift and go to state 30
    WHILE           shift and go to state 6
    FOR             shift and go to state 21
    DO              shift and go to state 2
    AO              shift and go to state 24
    DOUBLE_AO       shift and go to state 11
    NOT             shift and go to state 42
    STRING          shift and go to state 20
    LPAREN          shift and go to state 26
    NUMBER          shift and go to state 22
    TRUE            shift and go to state 14
    FALSE           shift and go to state 33
    MULTIPLICACIONESCALAR shift and go to state 17
    CAPITALIZAR     shift and go to state 37
    COLINEALES      shift and go to state 4
    PRINT           shift and go to state 7
    LENGTH          shift and go to state 15
    LBRACKET        shift and go to state 5
    VAR             shift and go to state 28

    factorNumExp                   shift and go to state 1
    factorReg                      shift and go to state 8
    if                             shift and go to state 9
    expressionComp                 shift and go to state 12
    for                            shift and go to state 13
    memberAccess                   shift and go to state 16
    statement                      shift and go to state 47
    bool_atom                      shift and go to state 19
    expressionAssign               shift and go to state 23
    expressionFunction             shift and go to state 25
    factorExp                      shift and go to state 27
    aritExp                        shift and go to state 29
    expressionTernaryCond          shift and go to state 31
    expressionVector               shift and go to state 34
    singleStatement                shift and go to state 123
    unaryExp2                      shift and go to state 35
    expressionVectorAt             shift and go to state 36
    factorVar                      shift and go to state 38
    while                          shift and go to state 39
    expressionBoolOp               shift and go to state 40
    do_while                       shift and go to state 41
    unaryExp                       shift and go to state 43
    expression                     shift and go to state 44
    block                          shift and go to state 45

state 111

    (67) expressionFunction -> PRINT LPAREN expression RPAREN .

    DOT             reduce using rule 67 (expressionFunction -> PRINT LPAREN expression RPAREN .)
    DOUBLE_AO       reduce using rule 67 (expressionFunction -> PRINT LPAREN expression RPAREN .)
    AO              reduce using rule 67 (expressionFunction -> PRINT LPAREN expression RPAREN .)
    COMP            reduce using rule 67 (expressionFunction -> PRINT LPAREN expression RPAREN .)
    BOOL_OP         reduce using rule 67 (expressionFunction -> PRINT LPAREN expression RPAREN .)
    AOEQUAL         reduce using rule 67 (expressionFunction -> PRINT LPAREN expression RPAREN .)
    EQUAL           reduce using rule 67 (expressionFunction -> PRINT LPAREN expression RPAREN .)
    QUESTION        reduce using rule 67 (expressionFunction -> PRINT LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 67 (expressionFunction -> PRINT LPAREN expression RPAREN .)
    RPAREN          reduce using rule 67 (expressionFunction -> PRINT LPAREN expression RPAREN .)
    COMMA           reduce using rule 67 (expressionFunction -> PRINT LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 67 (expressionFunction -> PRINT LPAREN expression RPAREN .)
    COLON           reduce using rule 67 (expressionFunction -> PRINT LPAREN expression RPAREN .)
    RBRACE          reduce using rule 67 (expressionFunction -> PRINT LPAREN expression RPAREN .)


state 112

    (68) expressionFunction -> LENGTH LPAREN expression RPAREN .

    DOT             reduce using rule 68 (expressionFunction -> LENGTH LPAREN expression RPAREN .)
    DOUBLE_AO       reduce using rule 68 (expressionFunction -> LENGTH LPAREN expression RPAREN .)
    AO              reduce using rule 68 (expressionFunction -> LENGTH LPAREN expression RPAREN .)
    COMP            reduce using rule 68 (expressionFunction -> LENGTH LPAREN expression RPAREN .)
    BOOL_OP         reduce using rule 68 (expressionFunction -> LENGTH LPAREN expression RPAREN .)
    AOEQUAL         reduce using rule 68 (expressionFunction -> LENGTH LPAREN expression RPAREN .)
    EQUAL           reduce using rule 68 (expressionFunction -> LENGTH LPAREN expression RPAREN .)
    QUESTION        reduce using rule 68 (expressionFunction -> LENGTH LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 68 (expressionFunction -> LENGTH LPAREN expression RPAREN .)
    RPAREN          reduce using rule 68 (expressionFunction -> LENGTH LPAREN expression RPAREN .)
    COMMA           reduce using rule 68 (expressionFunction -> LENGTH LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 68 (expressionFunction -> LENGTH LPAREN expression RPAREN .)
    COLON           reduce using rule 68 (expressionFunction -> LENGTH LPAREN expression RPAREN .)
    RBRACE          reduce using rule 68 (expressionFunction -> LENGTH LPAREN expression RPAREN .)


state 113

    (63) expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA . expression RPAREN
    (64) expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA . expression COMMA expression RPAREN
    (10) expression -> . expressionAssign
    (43) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (44) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond
    (58) expressionTernaryCond -> . expressionTernaryCond QUESTION expressionTernaryCond COLON expressionBoolOp
    (59) expressionTernaryCond -> . expressionBoolOp
    (30) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (31) expressionBoolOp -> . expressionComp
    (33) expressionComp -> . expressionComp COMP aritExp
    (34) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (32) unaryExp -> . NOT unaryExp
    (35) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . factorReg
    (24) factorExp -> . LPAREN expression RPAREN
    (25) factorExp -> . expressionFunction
    (27) factorNumExp -> . NUMBER
    (28) bool_atom -> . TRUE
    (29) bool_atom -> . FALSE
    (39) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (40) expressionVectorAt -> . expressionVector
    (41) expressionVectorAt -> . factorVar
    (42) expressionVectorAt -> . memberAccess
    (46) factorReg -> . LBRACE reg_items RBRACE
    (63) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (65) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (66) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (67) expressionFunction -> . PRINT LPAREN expression RPAREN
    (68) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (36) expressionVector -> . LBRACKET vector_items RBRACKET
    (26) factorVar -> . VAR
    (47) memberAccess -> . factorExp DOT factorVar

    AO              shift and go to state 24
    DOUBLE_AO       shift and go to state 11
    NOT             shift and go to state 42
    STRING          shift and go to state 20
    LPAREN          shift and go to state 26
    NUMBER          shift and go to state 22
    TRUE            shift and go to state 14
    FALSE           shift and go to state 33
    LBRACE          shift and go to state 50
    MULTIPLICACIONESCALAR shift and go to state 17
    CAPITALIZAR     shift and go to state 37
    COLINEALES      shift and go to state 4
    PRINT           shift and go to state 7
    LENGTH          shift and go to state 15
    LBRACKET        shift and go to state 5
    VAR             shift and go to state 28

    factorNumExp                   shift and go to state 1
    memberAccess                   shift and go to state 16
    expressionTernaryCond          shift and go to state 31
    expressionVector               shift and go to state 34
    aritExp                        shift and go to state 29
    expressionComp                 shift and go to state 12
    expressionAssign               shift and go to state 23
    unaryExp2                      shift and go to state 35
    expressionVectorAt             shift and go to state 36
    expressionFunction             shift and go to state 25
    factorVar                      shift and go to state 38
    expressionBoolOp               shift and go to state 40
    factorExp                      shift and go to state 27
    bool_atom                      shift and go to state 19
    unaryExp                       shift and go to state 43
    expression                     shift and go to state 124
    factorReg                      shift and go to state 8

state 114

    (61) for -> FOR LPAREN optional_expr SEMICOLON . expression SEMICOLON optional_expr RPAREN singleStatement
    (10) expression -> . expressionAssign
    (43) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (44) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond
    (58) expressionTernaryCond -> . expressionTernaryCond QUESTION expressionTernaryCond COLON expressionBoolOp
    (59) expressionTernaryCond -> . expressionBoolOp
    (30) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (31) expressionBoolOp -> . expressionComp
    (33) expressionComp -> . expressionComp COMP aritExp
    (34) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (32) unaryExp -> . NOT unaryExp
    (35) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . factorReg
    (24) factorExp -> . LPAREN expression RPAREN
    (25) factorExp -> . expressionFunction
    (27) factorNumExp -> . NUMBER
    (28) bool_atom -> . TRUE
    (29) bool_atom -> . FALSE
    (39) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (40) expressionVectorAt -> . expressionVector
    (41) expressionVectorAt -> . factorVar
    (42) expressionVectorAt -> . memberAccess
    (46) factorReg -> . LBRACE reg_items RBRACE
    (63) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (65) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (66) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (67) expressionFunction -> . PRINT LPAREN expression RPAREN
    (68) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (36) expressionVector -> . LBRACKET vector_items RBRACKET
    (26) factorVar -> . VAR
    (47) memberAccess -> . factorExp DOT factorVar

    AO              shift and go to state 24
    DOUBLE_AO       shift and go to state 11
    NOT             shift and go to state 42
    STRING          shift and go to state 20
    LPAREN          shift and go to state 26
    NUMBER          shift and go to state 22
    TRUE            shift and go to state 14
    FALSE           shift and go to state 33
    LBRACE          shift and go to state 50
    MULTIPLICACIONESCALAR shift and go to state 17
    CAPITALIZAR     shift and go to state 37
    COLINEALES      shift and go to state 4
    PRINT           shift and go to state 7
    LENGTH          shift and go to state 15
    LBRACKET        shift and go to state 5
    VAR             shift and go to state 28

    factorNumExp                   shift and go to state 1
    memberAccess                   shift and go to state 16
    expressionTernaryCond          shift and go to state 31
    expressionVector               shift and go to state 34
    aritExp                        shift and go to state 29
    expressionComp                 shift and go to state 12
    expressionAssign               shift and go to state 23
    unaryExp2                      shift and go to state 35
    expressionVectorAt             shift and go to state 36
    expressionFunction             shift and go to state 25
    factorVar                      shift and go to state 38
    factorExp                      shift and go to state 27
    bool_atom                      shift and go to state 19
    unaryExp                       shift and go to state 43
    expressionBoolOp               shift and go to state 40
    expression                     shift and go to state 125
    factorReg                      shift and go to state 8

state 115

    (55) if -> IF LPAREN expression RPAREN . singleStatement else
    (53) singleStatement -> . COMMENT singleStatement
    (54) singleStatement -> . statement
    (4) statement -> . expression SEMICOLON
    (5) statement -> . block
    (6) statement -> . if
    (7) statement -> . while
    (8) statement -> . for
    (9) statement -> . do_while
    (10) expression -> . expressionAssign
    (52) block -> . LBRACE code RBRACE
    (55) if -> . IF LPAREN expression RPAREN singleStatement else
    (60) while -> . WHILE LPAREN expression RPAREN singleStatement
    (61) for -> . FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement
    (62) do_while -> . DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON
    (43) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (44) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond
    (58) expressionTernaryCond -> . expressionTernaryCond QUESTION expressionTernaryCond COLON expressionBoolOp
    (59) expressionTernaryCond -> . expressionBoolOp
    (30) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (31) expressionBoolOp -> . expressionComp
    (33) expressionComp -> . expressionComp COMP aritExp
    (34) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (32) unaryExp -> . NOT unaryExp
    (35) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . factorReg
    (24) factorExp -> . LPAREN expression RPAREN
    (25) factorExp -> . expressionFunction
    (27) factorNumExp -> . NUMBER
    (28) bool_atom -> . TRUE
    (29) bool_atom -> . FALSE
    (39) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (40) expressionVectorAt -> . expressionVector
    (41) expressionVectorAt -> . factorVar
    (42) expressionVectorAt -> . memberAccess
    (46) factorReg -> . LBRACE reg_items RBRACE
    (63) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (65) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (66) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (67) expressionFunction -> . PRINT LPAREN expression RPAREN
    (68) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (36) expressionVector -> . LBRACKET vector_items RBRACKET
    (26) factorVar -> . VAR
    (47) memberAccess -> . factorExp DOT factorVar

    COMMENT         shift and go to state 46
    LBRACE          shift and go to state 32
    IF              shift and go to state 30
    WHILE           shift and go to state 6
    FOR             shift and go to state 21
    DO              shift and go to state 2
    AO              shift and go to state 24
    DOUBLE_AO       shift and go to state 11
    NOT             shift and go to state 42
    STRING          shift and go to state 20
    LPAREN          shift and go to state 26
    NUMBER          shift and go to state 22
    TRUE            shift and go to state 14
    FALSE           shift and go to state 33
    MULTIPLICACIONESCALAR shift and go to state 17
    CAPITALIZAR     shift and go to state 37
    COLINEALES      shift and go to state 4
    PRINT           shift and go to state 7
    LENGTH          shift and go to state 15
    LBRACKET        shift and go to state 5
    VAR             shift and go to state 28

    factorNumExp                   shift and go to state 1
    factorReg                      shift and go to state 8
    if                             shift and go to state 9
    expressionComp                 shift and go to state 12
    for                            shift and go to state 13
    memberAccess                   shift and go to state 16
    statement                      shift and go to state 47
    bool_atom                      shift and go to state 19
    expressionAssign               shift and go to state 23
    expressionFunction             shift and go to state 25
    factorExp                      shift and go to state 27
    aritExp                        shift and go to state 29
    expressionTernaryCond          shift and go to state 31
    expressionVector               shift and go to state 34
    singleStatement                shift and go to state 126
    unaryExp2                      shift and go to state 35
    expressionVectorAt             shift and go to state 36
    factorVar                      shift and go to state 38
    while                          shift and go to state 39
    expressionBoolOp               shift and go to state 40
    do_while                       shift and go to state 41
    unaryExp                       shift and go to state 43
    expression                     shift and go to state 44
    block                          shift and go to state 45

state 116

    (58) expressionTernaryCond -> expressionTernaryCond QUESTION expressionTernaryCond COLON . expressionBoolOp
    (30) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (31) expressionBoolOp -> . expressionComp
    (33) expressionComp -> . expressionComp COMP aritExp
    (34) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (32) unaryExp -> . NOT unaryExp
    (35) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . factorReg
    (24) factorExp -> . LPAREN expression RPAREN
    (25) factorExp -> . expressionFunction
    (27) factorNumExp -> . NUMBER
    (28) bool_atom -> . TRUE
    (29) bool_atom -> . FALSE
    (39) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (40) expressionVectorAt -> . expressionVector
    (41) expressionVectorAt -> . factorVar
    (42) expressionVectorAt -> . memberAccess
    (46) factorReg -> . LBRACE reg_items RBRACE
    (63) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (65) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (66) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (67) expressionFunction -> . PRINT LPAREN expression RPAREN
    (68) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (36) expressionVector -> . LBRACKET vector_items RBRACKET
    (26) factorVar -> . VAR
    (47) memberAccess -> . factorExp DOT factorVar

    AO              shift and go to state 24
    DOUBLE_AO       shift and go to state 11
    NOT             shift and go to state 42
    STRING          shift and go to state 20
    LPAREN          shift and go to state 26
    NUMBER          shift and go to state 22
    TRUE            shift and go to state 14
    FALSE           shift and go to state 33
    LBRACE          shift and go to state 50
    MULTIPLICACIONESCALAR shift and go to state 17
    CAPITALIZAR     shift and go to state 37
    COLINEALES      shift and go to state 4
    PRINT           shift and go to state 7
    LENGTH          shift and go to state 15
    LBRACKET        shift and go to state 5
    VAR             shift and go to state 28

    factorNumExp                   shift and go to state 1
    memberAccess                   shift and go to state 16
    expressionVector               shift and go to state 34
    expressionComp                 shift and go to state 12
    factorReg                      shift and go to state 8
    unaryExp2                      shift and go to state 35
    expressionVectorAt             shift and go to state 36
    expressionFunction             shift and go to state 25
    factorVar                      shift and go to state 38
    expressionBoolOp               shift and go to state 127
    factorExp                      shift and go to state 27
    bool_atom                      shift and go to state 19
    unaryExp                       shift and go to state 43
    aritExp                        shift and go to state 29

state 117

    (48) reg_items -> reg_field COMMA reg_items .

    RBRACE          reduce using rule 48 (reg_items -> reg_field COMMA reg_items .)


state 118

    (50) reg_field -> factorVar COLON expression .

    COMMA           reduce using rule 50 (reg_field -> factorVar COLON expression .)
    RBRACE          reduce using rule 50 (reg_field -> factorVar COLON expression .)


state 119

    (39) expressionVectorAt -> expressionVectorAt LBRACKET expression RBRACKET .

    LBRACKET        reduce using rule 39 (expressionVectorAt -> expressionVectorAt LBRACKET expression RBRACKET .)
    DOT             reduce using rule 39 (expressionVectorAt -> expressionVectorAt LBRACKET expression RBRACKET .)
    DOUBLE_AO       reduce using rule 39 (expressionVectorAt -> expressionVectorAt LBRACKET expression RBRACKET .)
    AO              reduce using rule 39 (expressionVectorAt -> expressionVectorAt LBRACKET expression RBRACKET .)
    COMP            reduce using rule 39 (expressionVectorAt -> expressionVectorAt LBRACKET expression RBRACKET .)
    BOOL_OP         reduce using rule 39 (expressionVectorAt -> expressionVectorAt LBRACKET expression RBRACKET .)
    AOEQUAL         reduce using rule 39 (expressionVectorAt -> expressionVectorAt LBRACKET expression RBRACKET .)
    EQUAL           reduce using rule 39 (expressionVectorAt -> expressionVectorAt LBRACKET expression RBRACKET .)
    QUESTION        reduce using rule 39 (expressionVectorAt -> expressionVectorAt LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 39 (expressionVectorAt -> expressionVectorAt LBRACKET expression RBRACKET .)
    SEMICOLON       reduce using rule 39 (expressionVectorAt -> expressionVectorAt LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 39 (expressionVectorAt -> expressionVectorAt LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 39 (expressionVectorAt -> expressionVectorAt LBRACKET expression RBRACKET .)
    COLON           reduce using rule 39 (expressionVectorAt -> expressionVectorAt LBRACKET expression RBRACKET .)
    RBRACE          reduce using rule 39 (expressionVectorAt -> expressionVectorAt LBRACKET expression RBRACKET .)


state 120

    (65) expressionFunction -> CAPITALIZAR LPAREN expression RPAREN .

    DOT             reduce using rule 65 (expressionFunction -> CAPITALIZAR LPAREN expression RPAREN .)
    DOUBLE_AO       reduce using rule 65 (expressionFunction -> CAPITALIZAR LPAREN expression RPAREN .)
    AO              reduce using rule 65 (expressionFunction -> CAPITALIZAR LPAREN expression RPAREN .)
    COMP            reduce using rule 65 (expressionFunction -> CAPITALIZAR LPAREN expression RPAREN .)
    BOOL_OP         reduce using rule 65 (expressionFunction -> CAPITALIZAR LPAREN expression RPAREN .)
    AOEQUAL         reduce using rule 65 (expressionFunction -> CAPITALIZAR LPAREN expression RPAREN .)
    EQUAL           reduce using rule 65 (expressionFunction -> CAPITALIZAR LPAREN expression RPAREN .)
    QUESTION        reduce using rule 65 (expressionFunction -> CAPITALIZAR LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 65 (expressionFunction -> CAPITALIZAR LPAREN expression RPAREN .)
    RPAREN          reduce using rule 65 (expressionFunction -> CAPITALIZAR LPAREN expression RPAREN .)
    COMMA           reduce using rule 65 (expressionFunction -> CAPITALIZAR LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 65 (expressionFunction -> CAPITALIZAR LPAREN expression RPAREN .)
    COLON           reduce using rule 65 (expressionFunction -> CAPITALIZAR LPAREN expression RPAREN .)
    RBRACE          reduce using rule 65 (expressionFunction -> CAPITALIZAR LPAREN expression RPAREN .)


state 121

    (62) do_while -> DO singleStatement WHILE LPAREN expression . RPAREN SEMICOLON

    RPAREN          shift and go to state 128


state 122

    (66) expressionFunction -> COLINEALES LPAREN expression COMMA expression . RPAREN

    RPAREN          shift and go to state 129


state 123

    (60) while -> WHILE LPAREN expression RPAREN singleStatement .

    COMMENT         reduce using rule 60 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    LBRACE          reduce using rule 60 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    IF              reduce using rule 60 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    WHILE           reduce using rule 60 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    FOR             reduce using rule 60 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    DO              reduce using rule 60 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    AO              reduce using rule 60 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    DOUBLE_AO       reduce using rule 60 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    NOT             reduce using rule 60 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    STRING          reduce using rule 60 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    LPAREN          reduce using rule 60 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    NUMBER          reduce using rule 60 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    TRUE            reduce using rule 60 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    FALSE           reduce using rule 60 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    MULTIPLICACIONESCALAR reduce using rule 60 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    CAPITALIZAR     reduce using rule 60 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    COLINEALES      reduce using rule 60 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    PRINT           reduce using rule 60 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    LENGTH          reduce using rule 60 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    LBRACKET        reduce using rule 60 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    VAR             reduce using rule 60 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    $end            reduce using rule 60 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    RBRACE          reduce using rule 60 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    ELSE            reduce using rule 60 (while -> WHILE LPAREN expression RPAREN singleStatement .)


state 124

    (63) expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression . RPAREN
    (64) expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression . COMMA expression RPAREN

    RPAREN          shift and go to state 131
    COMMA           shift and go to state 130


state 125

    (61) for -> FOR LPAREN optional_expr SEMICOLON expression . SEMICOLON optional_expr RPAREN singleStatement

    SEMICOLON       shift and go to state 132


state 126

    (55) if -> IF LPAREN expression RPAREN singleStatement . else
    (56) else -> . ELSE singleStatement
    (57) else -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 134
    WHILE           reduce using rule 57 (else -> .)
    COMMENT         reduce using rule 57 (else -> .)
    LBRACE          reduce using rule 57 (else -> .)
    IF              reduce using rule 57 (else -> .)
    FOR             reduce using rule 57 (else -> .)
    DO              reduce using rule 57 (else -> .)
    AO              reduce using rule 57 (else -> .)
    DOUBLE_AO       reduce using rule 57 (else -> .)
    NOT             reduce using rule 57 (else -> .)
    STRING          reduce using rule 57 (else -> .)
    LPAREN          reduce using rule 57 (else -> .)
    NUMBER          reduce using rule 57 (else -> .)
    TRUE            reduce using rule 57 (else -> .)
    FALSE           reduce using rule 57 (else -> .)
    MULTIPLICACIONESCALAR reduce using rule 57 (else -> .)
    CAPITALIZAR     reduce using rule 57 (else -> .)
    COLINEALES      reduce using rule 57 (else -> .)
    PRINT           reduce using rule 57 (else -> .)
    LENGTH          reduce using rule 57 (else -> .)
    LBRACKET        reduce using rule 57 (else -> .)
    VAR             reduce using rule 57 (else -> .)
    $end            reduce using rule 57 (else -> .)
    RBRACE          reduce using rule 57 (else -> .)

  ! ELSE            [ reduce using rule 57 (else -> .) ]

    else                           shift and go to state 133

state 127

    (58) expressionTernaryCond -> expressionTernaryCond QUESTION expressionTernaryCond COLON expressionBoolOp .
    (30) expressionBoolOp -> expressionBoolOp . BOOL_OP expressionComp

    AOEQUAL         reduce using rule 58 (expressionTernaryCond -> expressionTernaryCond QUESTION expressionTernaryCond COLON expressionBoolOp .)
    EQUAL           reduce using rule 58 (expressionTernaryCond -> expressionTernaryCond QUESTION expressionTernaryCond COLON expressionBoolOp .)
    QUESTION        reduce using rule 58 (expressionTernaryCond -> expressionTernaryCond QUESTION expressionTernaryCond COLON expressionBoolOp .)
    SEMICOLON       reduce using rule 58 (expressionTernaryCond -> expressionTernaryCond QUESTION expressionTernaryCond COLON expressionBoolOp .)
    RPAREN          reduce using rule 58 (expressionTernaryCond -> expressionTernaryCond QUESTION expressionTernaryCond COLON expressionBoolOp .)
    COMMA           reduce using rule 58 (expressionTernaryCond -> expressionTernaryCond QUESTION expressionTernaryCond COLON expressionBoolOp .)
    RBRACKET        reduce using rule 58 (expressionTernaryCond -> expressionTernaryCond QUESTION expressionTernaryCond COLON expressionBoolOp .)
    RBRACE          reduce using rule 58 (expressionTernaryCond -> expressionTernaryCond QUESTION expressionTernaryCond COLON expressionBoolOp .)
    COLON           reduce using rule 58 (expressionTernaryCond -> expressionTernaryCond QUESTION expressionTernaryCond COLON expressionBoolOp .)
    BOOL_OP         shift and go to state 77


state 128

    (62) do_while -> DO singleStatement WHILE LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 135


state 129

    (66) expressionFunction -> COLINEALES LPAREN expression COMMA expression RPAREN .

    DOT             reduce using rule 66 (expressionFunction -> COLINEALES LPAREN expression COMMA expression RPAREN .)
    DOUBLE_AO       reduce using rule 66 (expressionFunction -> COLINEALES LPAREN expression COMMA expression RPAREN .)
    AO              reduce using rule 66 (expressionFunction -> COLINEALES LPAREN expression COMMA expression RPAREN .)
    COMP            reduce using rule 66 (expressionFunction -> COLINEALES LPAREN expression COMMA expression RPAREN .)
    BOOL_OP         reduce using rule 66 (expressionFunction -> COLINEALES LPAREN expression COMMA expression RPAREN .)
    AOEQUAL         reduce using rule 66 (expressionFunction -> COLINEALES LPAREN expression COMMA expression RPAREN .)
    EQUAL           reduce using rule 66 (expressionFunction -> COLINEALES LPAREN expression COMMA expression RPAREN .)
    QUESTION        reduce using rule 66 (expressionFunction -> COLINEALES LPAREN expression COMMA expression RPAREN .)
    SEMICOLON       reduce using rule 66 (expressionFunction -> COLINEALES LPAREN expression COMMA expression RPAREN .)
    RPAREN          reduce using rule 66 (expressionFunction -> COLINEALES LPAREN expression COMMA expression RPAREN .)
    COMMA           reduce using rule 66 (expressionFunction -> COLINEALES LPAREN expression COMMA expression RPAREN .)
    RBRACKET        reduce using rule 66 (expressionFunction -> COLINEALES LPAREN expression COMMA expression RPAREN .)
    COLON           reduce using rule 66 (expressionFunction -> COLINEALES LPAREN expression COMMA expression RPAREN .)
    RBRACE          reduce using rule 66 (expressionFunction -> COLINEALES LPAREN expression COMMA expression RPAREN .)


state 130

    (64) expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA . expression RPAREN
    (10) expression -> . expressionAssign
    (43) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (44) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond
    (58) expressionTernaryCond -> . expressionTernaryCond QUESTION expressionTernaryCond COLON expressionBoolOp
    (59) expressionTernaryCond -> . expressionBoolOp
    (30) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (31) expressionBoolOp -> . expressionComp
    (33) expressionComp -> . expressionComp COMP aritExp
    (34) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (32) unaryExp -> . NOT unaryExp
    (35) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . factorReg
    (24) factorExp -> . LPAREN expression RPAREN
    (25) factorExp -> . expressionFunction
    (27) factorNumExp -> . NUMBER
    (28) bool_atom -> . TRUE
    (29) bool_atom -> . FALSE
    (39) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (40) expressionVectorAt -> . expressionVector
    (41) expressionVectorAt -> . factorVar
    (42) expressionVectorAt -> . memberAccess
    (46) factorReg -> . LBRACE reg_items RBRACE
    (63) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (65) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (66) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (67) expressionFunction -> . PRINT LPAREN expression RPAREN
    (68) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (36) expressionVector -> . LBRACKET vector_items RBRACKET
    (26) factorVar -> . VAR
    (47) memberAccess -> . factorExp DOT factorVar

    AO              shift and go to state 24
    DOUBLE_AO       shift and go to state 11
    NOT             shift and go to state 42
    STRING          shift and go to state 20
    LPAREN          shift and go to state 26
    NUMBER          shift and go to state 22
    TRUE            shift and go to state 14
    FALSE           shift and go to state 33
    LBRACE          shift and go to state 50
    MULTIPLICACIONESCALAR shift and go to state 17
    CAPITALIZAR     shift and go to state 37
    COLINEALES      shift and go to state 4
    PRINT           shift and go to state 7
    LENGTH          shift and go to state 15
    LBRACKET        shift and go to state 5
    VAR             shift and go to state 28

    factorNumExp                   shift and go to state 1
    memberAccess                   shift and go to state 16
    expressionTernaryCond          shift and go to state 31
    expressionVector               shift and go to state 34
    aritExp                        shift and go to state 29
    expressionComp                 shift and go to state 12
    expressionAssign               shift and go to state 23
    unaryExp2                      shift and go to state 35
    expressionVectorAt             shift and go to state 36
    expressionFunction             shift and go to state 25
    factorVar                      shift and go to state 38
    expressionBoolOp               shift and go to state 40
    factorExp                      shift and go to state 27
    bool_atom                      shift and go to state 19
    unaryExp                       shift and go to state 43
    expression                     shift and go to state 136
    factorReg                      shift and go to state 8

state 131

    (63) expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN .

    DOT             reduce using rule 63 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN .)
    DOUBLE_AO       reduce using rule 63 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN .)
    AO              reduce using rule 63 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN .)
    COMP            reduce using rule 63 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN .)
    BOOL_OP         reduce using rule 63 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN .)
    AOEQUAL         reduce using rule 63 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN .)
    EQUAL           reduce using rule 63 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN .)
    QUESTION        reduce using rule 63 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN .)
    SEMICOLON       reduce using rule 63 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN .)
    RPAREN          reduce using rule 63 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN .)
    COMMA           reduce using rule 63 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN .)
    RBRACKET        reduce using rule 63 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN .)
    COLON           reduce using rule 63 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN .)
    RBRACE          reduce using rule 63 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN .)


state 132

    (61) for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON . optional_expr RPAREN singleStatement
    (11) optional_expr -> . expression
    (12) optional_expr -> .
    (10) expression -> . expressionAssign
    (43) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (44) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond
    (58) expressionTernaryCond -> . expressionTernaryCond QUESTION expressionTernaryCond COLON expressionBoolOp
    (59) expressionTernaryCond -> . expressionBoolOp
    (30) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (31) expressionBoolOp -> . expressionComp
    (33) expressionComp -> . expressionComp COMP aritExp
    (34) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (32) unaryExp -> . NOT unaryExp
    (35) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . factorReg
    (24) factorExp -> . LPAREN expression RPAREN
    (25) factorExp -> . expressionFunction
    (27) factorNumExp -> . NUMBER
    (28) bool_atom -> . TRUE
    (29) bool_atom -> . FALSE
    (39) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (40) expressionVectorAt -> . expressionVector
    (41) expressionVectorAt -> . factorVar
    (42) expressionVectorAt -> . memberAccess
    (46) factorReg -> . LBRACE reg_items RBRACE
    (63) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (65) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (66) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (67) expressionFunction -> . PRINT LPAREN expression RPAREN
    (68) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (36) expressionVector -> . LBRACKET vector_items RBRACKET
    (26) factorVar -> . VAR
    (47) memberAccess -> . factorExp DOT factorVar

    RPAREN          reduce using rule 12 (optional_expr -> .)
    AO              shift and go to state 24
    DOUBLE_AO       shift and go to state 11
    NOT             shift and go to state 42
    STRING          shift and go to state 20
    LPAREN          shift and go to state 26
    NUMBER          shift and go to state 22
    TRUE            shift and go to state 14
    FALSE           shift and go to state 33
    LBRACE          shift and go to state 50
    MULTIPLICACIONESCALAR shift and go to state 17
    CAPITALIZAR     shift and go to state 37
    COLINEALES      shift and go to state 4
    PRINT           shift and go to state 7
    LENGTH          shift and go to state 15
    LBRACKET        shift and go to state 5
    VAR             shift and go to state 28

    factorNumExp                   shift and go to state 1
    memberAccess                   shift and go to state 16
    expressionTernaryCond          shift and go to state 31
    expressionVector               shift and go to state 34
    aritExp                        shift and go to state 29
    expressionComp                 shift and go to state 12
    expressionAssign               shift and go to state 23
    unaryExp2                      shift and go to state 35
    expressionVectorAt             shift and go to state 36
    expressionFunction             shift and go to state 25
    factorVar                      shift and go to state 38
    optional_expr                  shift and go to state 137
    factorExp                      shift and go to state 27
    bool_atom                      shift and go to state 19
    unaryExp                       shift and go to state 43
    expressionBoolOp               shift and go to state 40
    expression                     shift and go to state 92
    factorReg                      shift and go to state 8

state 133

    (55) if -> IF LPAREN expression RPAREN singleStatement else .

    WHILE           reduce using rule 55 (if -> IF LPAREN expression RPAREN singleStatement else .)
    COMMENT         reduce using rule 55 (if -> IF LPAREN expression RPAREN singleStatement else .)
    LBRACE          reduce using rule 55 (if -> IF LPAREN expression RPAREN singleStatement else .)
    IF              reduce using rule 55 (if -> IF LPAREN expression RPAREN singleStatement else .)
    FOR             reduce using rule 55 (if -> IF LPAREN expression RPAREN singleStatement else .)
    DO              reduce using rule 55 (if -> IF LPAREN expression RPAREN singleStatement else .)
    AO              reduce using rule 55 (if -> IF LPAREN expression RPAREN singleStatement else .)
    DOUBLE_AO       reduce using rule 55 (if -> IF LPAREN expression RPAREN singleStatement else .)
    NOT             reduce using rule 55 (if -> IF LPAREN expression RPAREN singleStatement else .)
    STRING          reduce using rule 55 (if -> IF LPAREN expression RPAREN singleStatement else .)
    LPAREN          reduce using rule 55 (if -> IF LPAREN expression RPAREN singleStatement else .)
    NUMBER          reduce using rule 55 (if -> IF LPAREN expression RPAREN singleStatement else .)
    TRUE            reduce using rule 55 (if -> IF LPAREN expression RPAREN singleStatement else .)
    FALSE           reduce using rule 55 (if -> IF LPAREN expression RPAREN singleStatement else .)
    MULTIPLICACIONESCALAR reduce using rule 55 (if -> IF LPAREN expression RPAREN singleStatement else .)
    CAPITALIZAR     reduce using rule 55 (if -> IF LPAREN expression RPAREN singleStatement else .)
    COLINEALES      reduce using rule 55 (if -> IF LPAREN expression RPAREN singleStatement else .)
    PRINT           reduce using rule 55 (if -> IF LPAREN expression RPAREN singleStatement else .)
    LENGTH          reduce using rule 55 (if -> IF LPAREN expression RPAREN singleStatement else .)
    LBRACKET        reduce using rule 55 (if -> IF LPAREN expression RPAREN singleStatement else .)
    VAR             reduce using rule 55 (if -> IF LPAREN expression RPAREN singleStatement else .)
    $end            reduce using rule 55 (if -> IF LPAREN expression RPAREN singleStatement else .)
    RBRACE          reduce using rule 55 (if -> IF LPAREN expression RPAREN singleStatement else .)
    ELSE            reduce using rule 55 (if -> IF LPAREN expression RPAREN singleStatement else .)


state 134

    (56) else -> ELSE . singleStatement
    (53) singleStatement -> . COMMENT singleStatement
    (54) singleStatement -> . statement
    (4) statement -> . expression SEMICOLON
    (5) statement -> . block
    (6) statement -> . if
    (7) statement -> . while
    (8) statement -> . for
    (9) statement -> . do_while
    (10) expression -> . expressionAssign
    (52) block -> . LBRACE code RBRACE
    (55) if -> . IF LPAREN expression RPAREN singleStatement else
    (60) while -> . WHILE LPAREN expression RPAREN singleStatement
    (61) for -> . FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement
    (62) do_while -> . DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON
    (43) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (44) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond
    (58) expressionTernaryCond -> . expressionTernaryCond QUESTION expressionTernaryCond COLON expressionBoolOp
    (59) expressionTernaryCond -> . expressionBoolOp
    (30) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (31) expressionBoolOp -> . expressionComp
    (33) expressionComp -> . expressionComp COMP aritExp
    (34) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (32) unaryExp -> . NOT unaryExp
    (35) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . factorReg
    (24) factorExp -> . LPAREN expression RPAREN
    (25) factorExp -> . expressionFunction
    (27) factorNumExp -> . NUMBER
    (28) bool_atom -> . TRUE
    (29) bool_atom -> . FALSE
    (39) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (40) expressionVectorAt -> . expressionVector
    (41) expressionVectorAt -> . factorVar
    (42) expressionVectorAt -> . memberAccess
    (46) factorReg -> . LBRACE reg_items RBRACE
    (63) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (65) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (66) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (67) expressionFunction -> . PRINT LPAREN expression RPAREN
    (68) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (36) expressionVector -> . LBRACKET vector_items RBRACKET
    (26) factorVar -> . VAR
    (47) memberAccess -> . factorExp DOT factorVar

    COMMENT         shift and go to state 46
    LBRACE          shift and go to state 32
    IF              shift and go to state 30
    WHILE           shift and go to state 6
    FOR             shift and go to state 21
    DO              shift and go to state 2
    AO              shift and go to state 24
    DOUBLE_AO       shift and go to state 11
    NOT             shift and go to state 42
    STRING          shift and go to state 20
    LPAREN          shift and go to state 26
    NUMBER          shift and go to state 22
    TRUE            shift and go to state 14
    FALSE           shift and go to state 33
    MULTIPLICACIONESCALAR shift and go to state 17
    CAPITALIZAR     shift and go to state 37
    COLINEALES      shift and go to state 4
    PRINT           shift and go to state 7
    LENGTH          shift and go to state 15
    LBRACKET        shift and go to state 5
    VAR             shift and go to state 28

    factorNumExp                   shift and go to state 1
    factorReg                      shift and go to state 8
    if                             shift and go to state 9
    expressionComp                 shift and go to state 12
    for                            shift and go to state 13
    memberAccess                   shift and go to state 16
    statement                      shift and go to state 47
    bool_atom                      shift and go to state 19
    expressionAssign               shift and go to state 23
    expressionFunction             shift and go to state 25
    factorExp                      shift and go to state 27
    aritExp                        shift and go to state 29
    expressionTernaryCond          shift and go to state 31
    expressionVector               shift and go to state 34
    singleStatement                shift and go to state 138
    unaryExp2                      shift and go to state 35
    expressionVectorAt             shift and go to state 36
    factorVar                      shift and go to state 38
    while                          shift and go to state 39
    expressionBoolOp               shift and go to state 40
    do_while                       shift and go to state 41
    unaryExp                       shift and go to state 43
    expression                     shift and go to state 44
    block                          shift and go to state 45

state 135

    (62) do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .

    WHILE           reduce using rule 62 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    COMMENT         reduce using rule 62 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    LBRACE          reduce using rule 62 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 62 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    FOR             reduce using rule 62 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    DO              reduce using rule 62 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    AO              reduce using rule 62 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    DOUBLE_AO       reduce using rule 62 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    NOT             reduce using rule 62 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    STRING          reduce using rule 62 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    LPAREN          reduce using rule 62 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    NUMBER          reduce using rule 62 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    TRUE            reduce using rule 62 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    FALSE           reduce using rule 62 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    MULTIPLICACIONESCALAR reduce using rule 62 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    CAPITALIZAR     reduce using rule 62 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    COLINEALES      reduce using rule 62 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    PRINT           reduce using rule 62 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    LENGTH          reduce using rule 62 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    LBRACKET        reduce using rule 62 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    VAR             reduce using rule 62 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    $end            reduce using rule 62 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 62 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    ELSE            reduce using rule 62 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)


state 136

    (64) expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression . RPAREN

    RPAREN          shift and go to state 139


state 137

    (61) for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr . RPAREN singleStatement

    RPAREN          shift and go to state 140


state 138

    (56) else -> ELSE singleStatement .

    WHILE           reduce using rule 56 (else -> ELSE singleStatement .)
    COMMENT         reduce using rule 56 (else -> ELSE singleStatement .)
    LBRACE          reduce using rule 56 (else -> ELSE singleStatement .)
    IF              reduce using rule 56 (else -> ELSE singleStatement .)
    FOR             reduce using rule 56 (else -> ELSE singleStatement .)
    DO              reduce using rule 56 (else -> ELSE singleStatement .)
    AO              reduce using rule 56 (else -> ELSE singleStatement .)
    DOUBLE_AO       reduce using rule 56 (else -> ELSE singleStatement .)
    NOT             reduce using rule 56 (else -> ELSE singleStatement .)
    STRING          reduce using rule 56 (else -> ELSE singleStatement .)
    LPAREN          reduce using rule 56 (else -> ELSE singleStatement .)
    NUMBER          reduce using rule 56 (else -> ELSE singleStatement .)
    TRUE            reduce using rule 56 (else -> ELSE singleStatement .)
    FALSE           reduce using rule 56 (else -> ELSE singleStatement .)
    MULTIPLICACIONESCALAR reduce using rule 56 (else -> ELSE singleStatement .)
    CAPITALIZAR     reduce using rule 56 (else -> ELSE singleStatement .)
    COLINEALES      reduce using rule 56 (else -> ELSE singleStatement .)
    PRINT           reduce using rule 56 (else -> ELSE singleStatement .)
    LENGTH          reduce using rule 56 (else -> ELSE singleStatement .)
    LBRACKET        reduce using rule 56 (else -> ELSE singleStatement .)
    VAR             reduce using rule 56 (else -> ELSE singleStatement .)
    $end            reduce using rule 56 (else -> ELSE singleStatement .)
    RBRACE          reduce using rule 56 (else -> ELSE singleStatement .)
    ELSE            reduce using rule 56 (else -> ELSE singleStatement .)


state 139

    (64) expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN .

    DOT             reduce using rule 64 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN .)
    DOUBLE_AO       reduce using rule 64 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN .)
    AO              reduce using rule 64 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN .)
    COMP            reduce using rule 64 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN .)
    BOOL_OP         reduce using rule 64 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN .)
    AOEQUAL         reduce using rule 64 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN .)
    EQUAL           reduce using rule 64 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN .)
    QUESTION        reduce using rule 64 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN .)
    SEMICOLON       reduce using rule 64 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN .)
    RPAREN          reduce using rule 64 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN .)
    COMMA           reduce using rule 64 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN .)
    RBRACKET        reduce using rule 64 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN .)
    COLON           reduce using rule 64 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN .)
    RBRACE          reduce using rule 64 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN .)


state 140

    (61) for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN . singleStatement
    (53) singleStatement -> . COMMENT singleStatement
    (54) singleStatement -> . statement
    (4) statement -> . expression SEMICOLON
    (5) statement -> . block
    (6) statement -> . if
    (7) statement -> . while
    (8) statement -> . for
    (9) statement -> . do_while
    (10) expression -> . expressionAssign
    (52) block -> . LBRACE code RBRACE
    (55) if -> . IF LPAREN expression RPAREN singleStatement else
    (60) while -> . WHILE LPAREN expression RPAREN singleStatement
    (61) for -> . FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement
    (62) do_while -> . DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON
    (43) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (44) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (45) expressionAssign -> . expressionTernaryCond
    (58) expressionTernaryCond -> . expressionTernaryCond QUESTION expressionTernaryCond COLON expressionBoolOp
    (59) expressionTernaryCond -> . expressionBoolOp
    (30) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (31) expressionBoolOp -> . expressionComp
    (33) expressionComp -> . expressionComp COMP aritExp
    (34) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (32) unaryExp -> . NOT unaryExp
    (35) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . factorReg
    (24) factorExp -> . LPAREN expression RPAREN
    (25) factorExp -> . expressionFunction
    (27) factorNumExp -> . NUMBER
    (28) bool_atom -> . TRUE
    (29) bool_atom -> . FALSE
    (39) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (40) expressionVectorAt -> . expressionVector
    (41) expressionVectorAt -> . factorVar
    (42) expressionVectorAt -> . memberAccess
    (46) factorReg -> . LBRACE reg_items RBRACE
    (63) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (65) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (66) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (67) expressionFunction -> . PRINT LPAREN expression RPAREN
    (68) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (36) expressionVector -> . LBRACKET vector_items RBRACKET
    (26) factorVar -> . VAR
    (47) memberAccess -> . factorExp DOT factorVar

    COMMENT         shift and go to state 46
    LBRACE          shift and go to state 32
    IF              shift and go to state 30
    WHILE           shift and go to state 6
    FOR             shift and go to state 21
    DO              shift and go to state 2
    AO              shift and go to state 24
    DOUBLE_AO       shift and go to state 11
    NOT             shift and go to state 42
    STRING          shift and go to state 20
    LPAREN          shift and go to state 26
    NUMBER          shift and go to state 22
    TRUE            shift and go to state 14
    FALSE           shift and go to state 33
    MULTIPLICACIONESCALAR shift and go to state 17
    CAPITALIZAR     shift and go to state 37
    COLINEALES      shift and go to state 4
    PRINT           shift and go to state 7
    LENGTH          shift and go to state 15
    LBRACKET        shift and go to state 5
    VAR             shift and go to state 28

    factorNumExp                   shift and go to state 1
    factorReg                      shift and go to state 8
    if                             shift and go to state 9
    expressionComp                 shift and go to state 12
    for                            shift and go to state 13
    memberAccess                   shift and go to state 16
    statement                      shift and go to state 47
    bool_atom                      shift and go to state 19
    expressionAssign               shift and go to state 23
    expressionFunction             shift and go to state 25
    factorExp                      shift and go to state 27
    aritExp                        shift and go to state 29
    expressionTernaryCond          shift and go to state 31
    expressionVector               shift and go to state 34
    singleStatement                shift and go to state 141
    unaryExp2                      shift and go to state 35
    expressionVectorAt             shift and go to state 36
    factorVar                      shift and go to state 38
    while                          shift and go to state 39
    expressionBoolOp               shift and go to state 40
    do_while                       shift and go to state 41
    unaryExp                       shift and go to state 43
    expression                     shift and go to state 44
    block                          shift and go to state 45

state 141

    (61) for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .

    WHILE           reduce using rule 61 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    COMMENT         reduce using rule 61 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    LBRACE          reduce using rule 61 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    IF              reduce using rule 61 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    FOR             reduce using rule 61 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    DO              reduce using rule 61 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    AO              reduce using rule 61 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    DOUBLE_AO       reduce using rule 61 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    NOT             reduce using rule 61 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    STRING          reduce using rule 61 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    LPAREN          reduce using rule 61 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    NUMBER          reduce using rule 61 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    TRUE            reduce using rule 61 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    FALSE           reduce using rule 61 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    MULTIPLICACIONESCALAR reduce using rule 61 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    CAPITALIZAR     reduce using rule 61 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    COLINEALES      reduce using rule 61 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    PRINT           reduce using rule 61 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    LENGTH          reduce using rule 61 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    LBRACKET        reduce using rule 61 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    VAR             reduce using rule 61 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    $end            reduce using rule 61 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    RBRACE          reduce using rule 61 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    ELSE            reduce using rule 61 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 126 resolved as shift
