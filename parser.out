Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Unused terminals:

    DOT
    COMMA

Grammar

Rule 0     S' -> codeIni
Rule 1     codeIni -> comments code
Rule 2     codeIni -> code
Rule 3     code -> statement code
Rule 4     code -> <empty>
Rule 5     statement -> expression SEMICOLON comments
Rule 6     expression -> aritExp
Rule 7     aritExp -> aritExp AO unaryExp
Rule 8     aritExp -> unaryExp
Rule 9     unaryExp -> AO unaryExp
Rule 10    unaryExp -> DOUBLE_AO unaryExp
Rule 11    unaryExp -> unaryExp2
Rule 12    unaryExp2 -> unaryExp2 DOUBLE_AO
Rule 13    unaryExp2 -> factorExp
Rule 14    factorExp -> NUMBER
Rule 15    factorExp -> LPAREN expression RPAREN
Rule 16    comments -> COMMENT comments
Rule 17    comments -> <empty>

Terminals, with rules where they appear

AO                   : 7 9
COMMA                : 
COMMENT              : 16
DOT                  : 
DOUBLE_AO            : 10 12
LPAREN               : 15
NUMBER               : 14
RPAREN               : 15
SEMICOLON            : 5
error                : 

Nonterminals, with rules where they appear

aritExp              : 6 7
code                 : 1 2 3
codeIni              : 0
comments             : 1 5 16
expression           : 5 15
factorExp            : 13
statement            : 3
unaryExp             : 7 8 9 10
unaryExp2            : 11 12

Parsing method: LALR

state 0

    (0) S' -> . codeIni
    (1) codeIni -> . comments code
    (2) codeIni -> . code
    (16) comments -> . COMMENT comments
    (17) comments -> .
    (3) code -> . statement code
    (4) code -> .
    (5) statement -> . expression SEMICOLON comments
    (6) expression -> . aritExp
    (7) aritExp -> . aritExp AO unaryExp
    (8) aritExp -> . unaryExp
    (9) unaryExp -> . AO unaryExp
    (10) unaryExp -> . DOUBLE_AO unaryExp
    (11) unaryExp -> . unaryExp2
    (12) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (13) unaryExp2 -> . factorExp
    (14) factorExp -> . NUMBER
    (15) factorExp -> . LPAREN expression RPAREN

  ! reduce/reduce conflict for $end resolved using rule 4 (code -> .)
  ! shift/reduce conflict for AO resolved as shift
  ! shift/reduce conflict for DOUBLE_AO resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
    COMMENT         shift and go to state 10
    $end            reduce using rule 4 (code -> .)
    AO              shift and go to state 3
    DOUBLE_AO       shift and go to state 1
    NUMBER          shift and go to state 5
    LPAREN          shift and go to state 8

  ! AO              [ reduce using rule 17 (comments -> .) ]
  ! DOUBLE_AO       [ reduce using rule 17 (comments -> .) ]
  ! NUMBER          [ reduce using rule 17 (comments -> .) ]
  ! LPAREN          [ reduce using rule 17 (comments -> .) ]
  ! $end            [ reduce using rule 17 (comments -> .) ]

    codeIni                        shift and go to state 2
    unaryExp2                      shift and go to state 6
    unaryExp                       shift and go to state 9
    statement                      shift and go to state 11
    expression                     shift and go to state 4
    comments                       shift and go to state 12
    code                           shift and go to state 7
    factorExp                      shift and go to state 14
    aritExp                        shift and go to state 13

state 1

    (10) unaryExp -> DOUBLE_AO . unaryExp
    (9) unaryExp -> . AO unaryExp
    (10) unaryExp -> . DOUBLE_AO unaryExp
    (11) unaryExp -> . unaryExp2
    (12) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (13) unaryExp2 -> . factorExp
    (14) factorExp -> . NUMBER
    (15) factorExp -> . LPAREN expression RPAREN

    AO              shift and go to state 3
    DOUBLE_AO       shift and go to state 1
    NUMBER          shift and go to state 5
    LPAREN          shift and go to state 8

    unaryExp2                      shift and go to state 6
    factorExp                      shift and go to state 14
    unaryExp                       shift and go to state 15

state 2

    (0) S' -> codeIni .



state 3

    (9) unaryExp -> AO . unaryExp
    (9) unaryExp -> . AO unaryExp
    (10) unaryExp -> . DOUBLE_AO unaryExp
    (11) unaryExp -> . unaryExp2
    (12) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (13) unaryExp2 -> . factorExp
    (14) factorExp -> . NUMBER
    (15) factorExp -> . LPAREN expression RPAREN

    AO              shift and go to state 3
    DOUBLE_AO       shift and go to state 1
    NUMBER          shift and go to state 5
    LPAREN          shift and go to state 8

    unaryExp2                      shift and go to state 6
    factorExp                      shift and go to state 14
    unaryExp                       shift and go to state 16

state 4

    (5) statement -> expression . SEMICOLON comments

    SEMICOLON       shift and go to state 17


state 5

    (14) factorExp -> NUMBER .

    DOUBLE_AO       reduce using rule 14 (factorExp -> NUMBER .)
    AO              reduce using rule 14 (factorExp -> NUMBER .)
    SEMICOLON       reduce using rule 14 (factorExp -> NUMBER .)
    RPAREN          reduce using rule 14 (factorExp -> NUMBER .)


state 6

    (11) unaryExp -> unaryExp2 .
    (12) unaryExp2 -> unaryExp2 . DOUBLE_AO

    AO              reduce using rule 11 (unaryExp -> unaryExp2 .)
    SEMICOLON       reduce using rule 11 (unaryExp -> unaryExp2 .)
    RPAREN          reduce using rule 11 (unaryExp -> unaryExp2 .)
    DOUBLE_AO       shift and go to state 18


state 7

    (2) codeIni -> code .

    $end            reduce using rule 2 (codeIni -> code .)


state 8

    (15) factorExp -> LPAREN . expression RPAREN
    (6) expression -> . aritExp
    (7) aritExp -> . aritExp AO unaryExp
    (8) aritExp -> . unaryExp
    (9) unaryExp -> . AO unaryExp
    (10) unaryExp -> . DOUBLE_AO unaryExp
    (11) unaryExp -> . unaryExp2
    (12) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (13) unaryExp2 -> . factorExp
    (14) factorExp -> . NUMBER
    (15) factorExp -> . LPAREN expression RPAREN

    AO              shift and go to state 3
    DOUBLE_AO       shift and go to state 1
    NUMBER          shift and go to state 5
    LPAREN          shift and go to state 8

    expression                     shift and go to state 19
    unaryExp2                      shift and go to state 6
    factorExp                      shift and go to state 14
    aritExp                        shift and go to state 13
    unaryExp                       shift and go to state 9

state 9

    (8) aritExp -> unaryExp .

    AO              reduce using rule 8 (aritExp -> unaryExp .)
    SEMICOLON       reduce using rule 8 (aritExp -> unaryExp .)
    RPAREN          reduce using rule 8 (aritExp -> unaryExp .)


state 10

    (16) comments -> COMMENT . comments
    (16) comments -> . COMMENT comments
    (17) comments -> .

    COMMENT         shift and go to state 10
    AO              reduce using rule 17 (comments -> .)
    DOUBLE_AO       reduce using rule 17 (comments -> .)
    NUMBER          reduce using rule 17 (comments -> .)
    LPAREN          reduce using rule 17 (comments -> .)
    $end            reduce using rule 17 (comments -> .)

    comments                       shift and go to state 20

state 11

    (3) code -> statement . code
    (3) code -> . statement code
    (4) code -> .
    (5) statement -> . expression SEMICOLON comments
    (6) expression -> . aritExp
    (7) aritExp -> . aritExp AO unaryExp
    (8) aritExp -> . unaryExp
    (9) unaryExp -> . AO unaryExp
    (10) unaryExp -> . DOUBLE_AO unaryExp
    (11) unaryExp -> . unaryExp2
    (12) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (13) unaryExp2 -> . factorExp
    (14) factorExp -> . NUMBER
    (15) factorExp -> . LPAREN expression RPAREN

    $end            reduce using rule 4 (code -> .)
    AO              shift and go to state 3
    DOUBLE_AO       shift and go to state 1
    NUMBER          shift and go to state 5
    LPAREN          shift and go to state 8

    unaryExp2                      shift and go to state 6
    unaryExp                       shift and go to state 9
    expression                     shift and go to state 4
    statement                      shift and go to state 11
    aritExp                        shift and go to state 13
    factorExp                      shift and go to state 14
    code                           shift and go to state 21

state 12

    (1) codeIni -> comments . code
    (3) code -> . statement code
    (4) code -> .
    (5) statement -> . expression SEMICOLON comments
    (6) expression -> . aritExp
    (7) aritExp -> . aritExp AO unaryExp
    (8) aritExp -> . unaryExp
    (9) unaryExp -> . AO unaryExp
    (10) unaryExp -> . DOUBLE_AO unaryExp
    (11) unaryExp -> . unaryExp2
    (12) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (13) unaryExp2 -> . factorExp
    (14) factorExp -> . NUMBER
    (15) factorExp -> . LPAREN expression RPAREN

    $end            reduce using rule 4 (code -> .)
    AO              shift and go to state 3
    DOUBLE_AO       shift and go to state 1
    NUMBER          shift and go to state 5
    LPAREN          shift and go to state 8

    unaryExp2                      shift and go to state 6
    unaryExp                       shift and go to state 9
    expression                     shift and go to state 4
    statement                      shift and go to state 11
    aritExp                        shift and go to state 13
    factorExp                      shift and go to state 14
    code                           shift and go to state 22

state 13

    (6) expression -> aritExp .
    (7) aritExp -> aritExp . AO unaryExp

    SEMICOLON       reduce using rule 6 (expression -> aritExp .)
    RPAREN          reduce using rule 6 (expression -> aritExp .)
    AO              shift and go to state 23


state 14

    (13) unaryExp2 -> factorExp .

    DOUBLE_AO       reduce using rule 13 (unaryExp2 -> factorExp .)
    AO              reduce using rule 13 (unaryExp2 -> factorExp .)
    SEMICOLON       reduce using rule 13 (unaryExp2 -> factorExp .)
    RPAREN          reduce using rule 13 (unaryExp2 -> factorExp .)


state 15

    (10) unaryExp -> DOUBLE_AO unaryExp .

    AO              reduce using rule 10 (unaryExp -> DOUBLE_AO unaryExp .)
    SEMICOLON       reduce using rule 10 (unaryExp -> DOUBLE_AO unaryExp .)
    RPAREN          reduce using rule 10 (unaryExp -> DOUBLE_AO unaryExp .)


state 16

    (9) unaryExp -> AO unaryExp .

    AO              reduce using rule 9 (unaryExp -> AO unaryExp .)
    SEMICOLON       reduce using rule 9 (unaryExp -> AO unaryExp .)
    RPAREN          reduce using rule 9 (unaryExp -> AO unaryExp .)


state 17

    (5) statement -> expression SEMICOLON . comments
    (16) comments -> . COMMENT comments
    (17) comments -> .

    COMMENT         shift and go to state 10
    AO              reduce using rule 17 (comments -> .)
    DOUBLE_AO       reduce using rule 17 (comments -> .)
    NUMBER          reduce using rule 17 (comments -> .)
    LPAREN          reduce using rule 17 (comments -> .)
    $end            reduce using rule 17 (comments -> .)

    comments                       shift and go to state 24

state 18

    (12) unaryExp2 -> unaryExp2 DOUBLE_AO .

    DOUBLE_AO       reduce using rule 12 (unaryExp2 -> unaryExp2 DOUBLE_AO .)
    AO              reduce using rule 12 (unaryExp2 -> unaryExp2 DOUBLE_AO .)
    SEMICOLON       reduce using rule 12 (unaryExp2 -> unaryExp2 DOUBLE_AO .)
    RPAREN          reduce using rule 12 (unaryExp2 -> unaryExp2 DOUBLE_AO .)


state 19

    (15) factorExp -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 25


state 20

    (16) comments -> COMMENT comments .

    AO              reduce using rule 16 (comments -> COMMENT comments .)
    DOUBLE_AO       reduce using rule 16 (comments -> COMMENT comments .)
    NUMBER          reduce using rule 16 (comments -> COMMENT comments .)
    LPAREN          reduce using rule 16 (comments -> COMMENT comments .)
    $end            reduce using rule 16 (comments -> COMMENT comments .)


state 21

    (3) code -> statement code .

    $end            reduce using rule 3 (code -> statement code .)


state 22

    (1) codeIni -> comments code .

    $end            reduce using rule 1 (codeIni -> comments code .)


state 23

    (7) aritExp -> aritExp AO . unaryExp
    (9) unaryExp -> . AO unaryExp
    (10) unaryExp -> . DOUBLE_AO unaryExp
    (11) unaryExp -> . unaryExp2
    (12) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (13) unaryExp2 -> . factorExp
    (14) factorExp -> . NUMBER
    (15) factorExp -> . LPAREN expression RPAREN

    AO              shift and go to state 3
    DOUBLE_AO       shift and go to state 1
    NUMBER          shift and go to state 5
    LPAREN          shift and go to state 8

    unaryExp2                      shift and go to state 6
    factorExp                      shift and go to state 14
    unaryExp                       shift and go to state 26

state 24

    (5) statement -> expression SEMICOLON comments .

    AO              reduce using rule 5 (statement -> expression SEMICOLON comments .)
    DOUBLE_AO       reduce using rule 5 (statement -> expression SEMICOLON comments .)
    NUMBER          reduce using rule 5 (statement -> expression SEMICOLON comments .)
    LPAREN          reduce using rule 5 (statement -> expression SEMICOLON comments .)
    $end            reduce using rule 5 (statement -> expression SEMICOLON comments .)


state 25

    (15) factorExp -> LPAREN expression RPAREN .

    DOUBLE_AO       reduce using rule 15 (factorExp -> LPAREN expression RPAREN .)
    AO              reduce using rule 15 (factorExp -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 15 (factorExp -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 15 (factorExp -> LPAREN expression RPAREN .)


state 26

    (7) aritExp -> aritExp AO unaryExp .

    AO              reduce using rule 7 (aritExp -> aritExp AO unaryExp .)
    SEMICOLON       reduce using rule 7 (aritExp -> aritExp AO unaryExp .)
    RPAREN          reduce using rule 7 (aritExp -> aritExp AO unaryExp .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for AO in state 0 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_AO in state 0 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 0 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 0 resolved as shift
WARNING: reduce/reduce conflict in state 0 resolved using rule (code -> <empty>)
WARNING: rejected rule (comments -> <empty>) in state 0
