Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Unused terminals:

    BEGIN
    RBRACKET
    ID
    LBRACE
    NOT
    ELSE
    FALSE
    WHILE
    RETURN
    COMMENT
    TRUE
    LEQUALS
    RBRACE
    RES
    TYPE
    LBRACKET
    COMMA
    IF
    END
    DO
    GEQUALS
    NEWLINE
    FOR

Grammar

Rule 0     S' -> statement
Rule 1     statement -> expressionStatement
Rule 2     expressionStatement -> expression SEMICOLON
Rule 3     statements -> statement statements
Rule 4     statements -> <empty>
Rule 5     expression -> orExpression
Rule 6     orExpression -> orExpression OR andExpression
Rule 7     orExpression -> andExpression
Rule 8     andExpression -> andExpression AND eqeqExpression
Rule 9     andExpression -> eqeqExpression
Rule 10    eqeqExpression -> eqeqExpression EQUALS EQUALS noteqExpression
Rule 11    eqeqExpression -> noteqExpression
Rule 12    noteqExpression -> noteqExpression NOTEQUALS lessExpression
Rule 13    noteqExpression -> lessExpression
Rule 14    lessExpression -> lessExpression LESS greaterExpression
Rule 15    lessExpression -> greaterExpression
Rule 16    greaterExpression -> greaterExpression GREATER plusExpression
Rule 17    greaterExpression -> plusExpression
Rule 18    plusExpression -> plusExpression PLUS minusExpression
Rule 19    plusExpression -> minusExpression
Rule 20    minusExpression -> minusExpression MINUS timesExpression
Rule 21    minusExpression -> timesExpression
Rule 22    timesExpression -> timesExpression TIMES divExpression
Rule 23    timesExpression -> divExpression
Rule 24    divExpression -> divExpression DIV unaryMinusExpression
Rule 25    divExpression -> <empty>
Rule 26    unaryMinusExpression -> MINUS factorExpression
Rule 27    unaryMinusExpression -> factorExpression
Rule 28    factorExpression -> LPAREN expression RPAREN
Rule 29    factorExpression -> NUMBER

Terminals, with rules where they appear

AND                  : 8
BEGIN                : 
COMMA                : 
COMMENT              : 
DIV                  : 24
DO                   : 
ELSE                 : 
END                  : 
EQUALS               : 10 10
FALSE                : 
FOR                  : 
GEQUALS              : 
GREATER              : 16
ID                   : 
IF                   : 
LBRACE               : 
LBRACKET             : 
LEQUALS              : 
LESS                 : 14
LPAREN               : 28
MINUS                : 20 26
NEWLINE              : 
NOT                  : 
NOTEQUALS            : 12
NUMBER               : 29
OR                   : 6
PLUS                 : 18
RBRACE               : 
RBRACKET             : 
RES                  : 
RETURN               : 
RPAREN               : 28
SEMICOLON            : 2
TIMES                : 22
TRUE                 : 
TYPE                 : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

andExpression        : 6 7 8
divExpression        : 22 23 24
eqeqExpression       : 8 9 10
expression           : 2 28
expressionStatement  : 1
factorExpression     : 26 27
greaterExpression    : 14 15 16
lessExpression       : 12 13 14
minusExpression      : 18 19 20
noteqExpression      : 10 11 12
orExpression         : 5 6
plusExpression       : 16 17 18
statement            : 3 0
statements           : 3
timesExpression      : 20 21 22
unaryMinusExpression : 24

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . expressionStatement
    (2) expressionStatement -> . expression SEMICOLON
    (5) expression -> . orExpression
    (6) orExpression -> . orExpression OR andExpression
    (7) orExpression -> . andExpression
    (8) andExpression -> . andExpression AND eqeqExpression
    (9) andExpression -> . eqeqExpression
    (10) eqeqExpression -> . eqeqExpression EQUALS EQUALS noteqExpression
    (11) eqeqExpression -> . noteqExpression
    (12) noteqExpression -> . noteqExpression NOTEQUALS lessExpression
    (13) noteqExpression -> . lessExpression
    (14) lessExpression -> . lessExpression LESS greaterExpression
    (15) lessExpression -> . greaterExpression
    (16) greaterExpression -> . greaterExpression GREATER plusExpression
    (17) greaterExpression -> . plusExpression
    (18) plusExpression -> . plusExpression PLUS minusExpression
    (19) plusExpression -> . minusExpression
    (20) minusExpression -> . minusExpression MINUS timesExpression
    (21) minusExpression -> . timesExpression
    (22) timesExpression -> . timesExpression TIMES divExpression
    (23) timesExpression -> . divExpression
    (24) divExpression -> . divExpression DIV unaryMinusExpression
    (25) divExpression -> .

    DIV             reduce using rule 25 (divExpression -> .)
    TIMES           reduce using rule 25 (divExpression -> .)
    MINUS           reduce using rule 25 (divExpression -> .)
    PLUS            reduce using rule 25 (divExpression -> .)
    GREATER         reduce using rule 25 (divExpression -> .)
    LESS            reduce using rule 25 (divExpression -> .)
    NOTEQUALS       reduce using rule 25 (divExpression -> .)
    EQUALS          reduce using rule 25 (divExpression -> .)
    AND             reduce using rule 25 (divExpression -> .)
    OR              reduce using rule 25 (divExpression -> .)
    SEMICOLON       reduce using rule 25 (divExpression -> .)

    statement                      shift and go to state 7
    eqeqExpression                 shift and go to state 1
    orExpression                   shift and go to state 3
    plusExpression                 shift and go to state 11
    noteqExpression                shift and go to state 4
    divExpression                  shift and go to state 13
    timesExpression                shift and go to state 2
    expression                     shift and go to state 8
    expressionStatement            shift and go to state 9
    lessExpression                 shift and go to state 10
    greaterExpression              shift and go to state 5
    minusExpression                shift and go to state 12
    andExpression                  shift and go to state 6

state 1

    (9) andExpression -> eqeqExpression .
    (10) eqeqExpression -> eqeqExpression . EQUALS EQUALS noteqExpression

    AND             reduce using rule 9 (andExpression -> eqeqExpression .)
    OR              reduce using rule 9 (andExpression -> eqeqExpression .)
    RPAREN          reduce using rule 9 (andExpression -> eqeqExpression .)
    SEMICOLON       reduce using rule 9 (andExpression -> eqeqExpression .)
    EQUALS          shift and go to state 14


state 2

    (21) minusExpression -> timesExpression .
    (22) timesExpression -> timesExpression . TIMES divExpression

    MINUS           reduce using rule 21 (minusExpression -> timesExpression .)
    PLUS            reduce using rule 21 (minusExpression -> timesExpression .)
    GREATER         reduce using rule 21 (minusExpression -> timesExpression .)
    LESS            reduce using rule 21 (minusExpression -> timesExpression .)
    NOTEQUALS       reduce using rule 21 (minusExpression -> timesExpression .)
    EQUALS          reduce using rule 21 (minusExpression -> timesExpression .)
    AND             reduce using rule 21 (minusExpression -> timesExpression .)
    OR              reduce using rule 21 (minusExpression -> timesExpression .)
    SEMICOLON       reduce using rule 21 (minusExpression -> timesExpression .)
    RPAREN          reduce using rule 21 (minusExpression -> timesExpression .)
    TIMES           shift and go to state 15


state 3

    (5) expression -> orExpression .
    (6) orExpression -> orExpression . OR andExpression

    SEMICOLON       reduce using rule 5 (expression -> orExpression .)
    RPAREN          reduce using rule 5 (expression -> orExpression .)
    OR              shift and go to state 16


state 4

    (11) eqeqExpression -> noteqExpression .
    (12) noteqExpression -> noteqExpression . NOTEQUALS lessExpression

    EQUALS          reduce using rule 11 (eqeqExpression -> noteqExpression .)
    AND             reduce using rule 11 (eqeqExpression -> noteqExpression .)
    OR              reduce using rule 11 (eqeqExpression -> noteqExpression .)
    SEMICOLON       reduce using rule 11 (eqeqExpression -> noteqExpression .)
    RPAREN          reduce using rule 11 (eqeqExpression -> noteqExpression .)
    NOTEQUALS       shift and go to state 17


state 5

    (15) lessExpression -> greaterExpression .
    (16) greaterExpression -> greaterExpression . GREATER plusExpression

    LESS            reduce using rule 15 (lessExpression -> greaterExpression .)
    NOTEQUALS       reduce using rule 15 (lessExpression -> greaterExpression .)
    EQUALS          reduce using rule 15 (lessExpression -> greaterExpression .)
    AND             reduce using rule 15 (lessExpression -> greaterExpression .)
    OR              reduce using rule 15 (lessExpression -> greaterExpression .)
    SEMICOLON       reduce using rule 15 (lessExpression -> greaterExpression .)
    RPAREN          reduce using rule 15 (lessExpression -> greaterExpression .)
    GREATER         shift and go to state 18


state 6

    (7) orExpression -> andExpression .
    (8) andExpression -> andExpression . AND eqeqExpression

    OR              reduce using rule 7 (orExpression -> andExpression .)
    RPAREN          reduce using rule 7 (orExpression -> andExpression .)
    SEMICOLON       reduce using rule 7 (orExpression -> andExpression .)
    AND             shift and go to state 19


state 7

    (0) S' -> statement .



state 8

    (2) expressionStatement -> expression . SEMICOLON

    SEMICOLON       shift and go to state 20


state 9

    (1) statement -> expressionStatement .

    $end            reduce using rule 1 (statement -> expressionStatement .)


state 10

    (13) noteqExpression -> lessExpression .
    (14) lessExpression -> lessExpression . LESS greaterExpression

    NOTEQUALS       reduce using rule 13 (noteqExpression -> lessExpression .)
    EQUALS          reduce using rule 13 (noteqExpression -> lessExpression .)
    AND             reduce using rule 13 (noteqExpression -> lessExpression .)
    OR              reduce using rule 13 (noteqExpression -> lessExpression .)
    SEMICOLON       reduce using rule 13 (noteqExpression -> lessExpression .)
    RPAREN          reduce using rule 13 (noteqExpression -> lessExpression .)
    LESS            shift and go to state 21


state 11

    (17) greaterExpression -> plusExpression .
    (18) plusExpression -> plusExpression . PLUS minusExpression

    GREATER         reduce using rule 17 (greaterExpression -> plusExpression .)
    LESS            reduce using rule 17 (greaterExpression -> plusExpression .)
    NOTEQUALS       reduce using rule 17 (greaterExpression -> plusExpression .)
    EQUALS          reduce using rule 17 (greaterExpression -> plusExpression .)
    AND             reduce using rule 17 (greaterExpression -> plusExpression .)
    OR              reduce using rule 17 (greaterExpression -> plusExpression .)
    SEMICOLON       reduce using rule 17 (greaterExpression -> plusExpression .)
    RPAREN          reduce using rule 17 (greaterExpression -> plusExpression .)
    PLUS            shift and go to state 22


state 12

    (19) plusExpression -> minusExpression .
    (20) minusExpression -> minusExpression . MINUS timesExpression

    PLUS            reduce using rule 19 (plusExpression -> minusExpression .)
    GREATER         reduce using rule 19 (plusExpression -> minusExpression .)
    LESS            reduce using rule 19 (plusExpression -> minusExpression .)
    NOTEQUALS       reduce using rule 19 (plusExpression -> minusExpression .)
    EQUALS          reduce using rule 19 (plusExpression -> minusExpression .)
    AND             reduce using rule 19 (plusExpression -> minusExpression .)
    OR              reduce using rule 19 (plusExpression -> minusExpression .)
    SEMICOLON       reduce using rule 19 (plusExpression -> minusExpression .)
    RPAREN          reduce using rule 19 (plusExpression -> minusExpression .)
    MINUS           shift and go to state 23


state 13

    (23) timesExpression -> divExpression .
    (24) divExpression -> divExpression . DIV unaryMinusExpression

    TIMES           reduce using rule 23 (timesExpression -> divExpression .)
    MINUS           reduce using rule 23 (timesExpression -> divExpression .)
    PLUS            reduce using rule 23 (timesExpression -> divExpression .)
    GREATER         reduce using rule 23 (timesExpression -> divExpression .)
    LESS            reduce using rule 23 (timesExpression -> divExpression .)
    NOTEQUALS       reduce using rule 23 (timesExpression -> divExpression .)
    EQUALS          reduce using rule 23 (timesExpression -> divExpression .)
    AND             reduce using rule 23 (timesExpression -> divExpression .)
    OR              reduce using rule 23 (timesExpression -> divExpression .)
    RPAREN          reduce using rule 23 (timesExpression -> divExpression .)
    SEMICOLON       reduce using rule 23 (timesExpression -> divExpression .)
    DIV             shift and go to state 24


state 14

    (10) eqeqExpression -> eqeqExpression EQUALS . EQUALS noteqExpression

    EQUALS          shift and go to state 25


state 15

    (22) timesExpression -> timesExpression TIMES . divExpression
    (24) divExpression -> . divExpression DIV unaryMinusExpression
    (25) divExpression -> .

    DIV             reduce using rule 25 (divExpression -> .)
    TIMES           reduce using rule 25 (divExpression -> .)
    MINUS           reduce using rule 25 (divExpression -> .)
    PLUS            reduce using rule 25 (divExpression -> .)
    GREATER         reduce using rule 25 (divExpression -> .)
    LESS            reduce using rule 25 (divExpression -> .)
    NOTEQUALS       reduce using rule 25 (divExpression -> .)
    EQUALS          reduce using rule 25 (divExpression -> .)
    AND             reduce using rule 25 (divExpression -> .)
    OR              reduce using rule 25 (divExpression -> .)
    SEMICOLON       reduce using rule 25 (divExpression -> .)
    RPAREN          reduce using rule 25 (divExpression -> .)

    divExpression                  shift and go to state 26

state 16

    (6) orExpression -> orExpression OR . andExpression
    (8) andExpression -> . andExpression AND eqeqExpression
    (9) andExpression -> . eqeqExpression
    (10) eqeqExpression -> . eqeqExpression EQUALS EQUALS noteqExpression
    (11) eqeqExpression -> . noteqExpression
    (12) noteqExpression -> . noteqExpression NOTEQUALS lessExpression
    (13) noteqExpression -> . lessExpression
    (14) lessExpression -> . lessExpression LESS greaterExpression
    (15) lessExpression -> . greaterExpression
    (16) greaterExpression -> . greaterExpression GREATER plusExpression
    (17) greaterExpression -> . plusExpression
    (18) plusExpression -> . plusExpression PLUS minusExpression
    (19) plusExpression -> . minusExpression
    (20) minusExpression -> . minusExpression MINUS timesExpression
    (21) minusExpression -> . timesExpression
    (22) timesExpression -> . timesExpression TIMES divExpression
    (23) timesExpression -> . divExpression
    (24) divExpression -> . divExpression DIV unaryMinusExpression
    (25) divExpression -> .

    DIV             reduce using rule 25 (divExpression -> .)
    TIMES           reduce using rule 25 (divExpression -> .)
    MINUS           reduce using rule 25 (divExpression -> .)
    PLUS            reduce using rule 25 (divExpression -> .)
    GREATER         reduce using rule 25 (divExpression -> .)
    LESS            reduce using rule 25 (divExpression -> .)
    NOTEQUALS       reduce using rule 25 (divExpression -> .)
    EQUALS          reduce using rule 25 (divExpression -> .)
    AND             reduce using rule 25 (divExpression -> .)
    OR              reduce using rule 25 (divExpression -> .)
    SEMICOLON       reduce using rule 25 (divExpression -> .)
    RPAREN          reduce using rule 25 (divExpression -> .)

    eqeqExpression                 shift and go to state 1
    lessExpression                 shift and go to state 10
    plusExpression                 shift and go to state 11
    greaterExpression              shift and go to state 5
    noteqExpression                shift and go to state 4
    divExpression                  shift and go to state 13
    timesExpression                shift and go to state 2
    minusExpression                shift and go to state 12
    andExpression                  shift and go to state 27

state 17

    (12) noteqExpression -> noteqExpression NOTEQUALS . lessExpression
    (14) lessExpression -> . lessExpression LESS greaterExpression
    (15) lessExpression -> . greaterExpression
    (16) greaterExpression -> . greaterExpression GREATER plusExpression
    (17) greaterExpression -> . plusExpression
    (18) plusExpression -> . plusExpression PLUS minusExpression
    (19) plusExpression -> . minusExpression
    (20) minusExpression -> . minusExpression MINUS timesExpression
    (21) minusExpression -> . timesExpression
    (22) timesExpression -> . timesExpression TIMES divExpression
    (23) timesExpression -> . divExpression
    (24) divExpression -> . divExpression DIV unaryMinusExpression
    (25) divExpression -> .

    DIV             reduce using rule 25 (divExpression -> .)
    TIMES           reduce using rule 25 (divExpression -> .)
    MINUS           reduce using rule 25 (divExpression -> .)
    PLUS            reduce using rule 25 (divExpression -> .)
    GREATER         reduce using rule 25 (divExpression -> .)
    LESS            reduce using rule 25 (divExpression -> .)
    NOTEQUALS       reduce using rule 25 (divExpression -> .)
    EQUALS          reduce using rule 25 (divExpression -> .)
    AND             reduce using rule 25 (divExpression -> .)
    OR              reduce using rule 25 (divExpression -> .)
    SEMICOLON       reduce using rule 25 (divExpression -> .)
    RPAREN          reduce using rule 25 (divExpression -> .)

    plusExpression                 shift and go to state 11
    lessExpression                 shift and go to state 28
    greaterExpression              shift and go to state 5
    divExpression                  shift and go to state 13
    timesExpression                shift and go to state 2
    minusExpression                shift and go to state 12

state 18

    (16) greaterExpression -> greaterExpression GREATER . plusExpression
    (18) plusExpression -> . plusExpression PLUS minusExpression
    (19) plusExpression -> . minusExpression
    (20) minusExpression -> . minusExpression MINUS timesExpression
    (21) minusExpression -> . timesExpression
    (22) timesExpression -> . timesExpression TIMES divExpression
    (23) timesExpression -> . divExpression
    (24) divExpression -> . divExpression DIV unaryMinusExpression
    (25) divExpression -> .

    DIV             reduce using rule 25 (divExpression -> .)
    TIMES           reduce using rule 25 (divExpression -> .)
    MINUS           reduce using rule 25 (divExpression -> .)
    PLUS            reduce using rule 25 (divExpression -> .)
    GREATER         reduce using rule 25 (divExpression -> .)
    LESS            reduce using rule 25 (divExpression -> .)
    NOTEQUALS       reduce using rule 25 (divExpression -> .)
    EQUALS          reduce using rule 25 (divExpression -> .)
    AND             reduce using rule 25 (divExpression -> .)
    OR              reduce using rule 25 (divExpression -> .)
    SEMICOLON       reduce using rule 25 (divExpression -> .)
    RPAREN          reduce using rule 25 (divExpression -> .)

    plusExpression                 shift and go to state 29
    divExpression                  shift and go to state 13
    timesExpression                shift and go to state 2
    minusExpression                shift and go to state 12

state 19

    (8) andExpression -> andExpression AND . eqeqExpression
    (10) eqeqExpression -> . eqeqExpression EQUALS EQUALS noteqExpression
    (11) eqeqExpression -> . noteqExpression
    (12) noteqExpression -> . noteqExpression NOTEQUALS lessExpression
    (13) noteqExpression -> . lessExpression
    (14) lessExpression -> . lessExpression LESS greaterExpression
    (15) lessExpression -> . greaterExpression
    (16) greaterExpression -> . greaterExpression GREATER plusExpression
    (17) greaterExpression -> . plusExpression
    (18) plusExpression -> . plusExpression PLUS minusExpression
    (19) plusExpression -> . minusExpression
    (20) minusExpression -> . minusExpression MINUS timesExpression
    (21) minusExpression -> . timesExpression
    (22) timesExpression -> . timesExpression TIMES divExpression
    (23) timesExpression -> . divExpression
    (24) divExpression -> . divExpression DIV unaryMinusExpression
    (25) divExpression -> .

    DIV             reduce using rule 25 (divExpression -> .)
    TIMES           reduce using rule 25 (divExpression -> .)
    MINUS           reduce using rule 25 (divExpression -> .)
    PLUS            reduce using rule 25 (divExpression -> .)
    GREATER         reduce using rule 25 (divExpression -> .)
    LESS            reduce using rule 25 (divExpression -> .)
    NOTEQUALS       reduce using rule 25 (divExpression -> .)
    EQUALS          reduce using rule 25 (divExpression -> .)
    AND             reduce using rule 25 (divExpression -> .)
    OR              reduce using rule 25 (divExpression -> .)
    SEMICOLON       reduce using rule 25 (divExpression -> .)
    RPAREN          reduce using rule 25 (divExpression -> .)

    eqeqExpression                 shift and go to state 30
    lessExpression                 shift and go to state 10
    plusExpression                 shift and go to state 11
    greaterExpression              shift and go to state 5
    noteqExpression                shift and go to state 4
    divExpression                  shift and go to state 13
    timesExpression                shift and go to state 2
    minusExpression                shift and go to state 12

state 20

    (2) expressionStatement -> expression SEMICOLON .

    $end            reduce using rule 2 (expressionStatement -> expression SEMICOLON .)


state 21

    (14) lessExpression -> lessExpression LESS . greaterExpression
    (16) greaterExpression -> . greaterExpression GREATER plusExpression
    (17) greaterExpression -> . plusExpression
    (18) plusExpression -> . plusExpression PLUS minusExpression
    (19) plusExpression -> . minusExpression
    (20) minusExpression -> . minusExpression MINUS timesExpression
    (21) minusExpression -> . timesExpression
    (22) timesExpression -> . timesExpression TIMES divExpression
    (23) timesExpression -> . divExpression
    (24) divExpression -> . divExpression DIV unaryMinusExpression
    (25) divExpression -> .

    DIV             reduce using rule 25 (divExpression -> .)
    TIMES           reduce using rule 25 (divExpression -> .)
    MINUS           reduce using rule 25 (divExpression -> .)
    PLUS            reduce using rule 25 (divExpression -> .)
    GREATER         reduce using rule 25 (divExpression -> .)
    LESS            reduce using rule 25 (divExpression -> .)
    NOTEQUALS       reduce using rule 25 (divExpression -> .)
    EQUALS          reduce using rule 25 (divExpression -> .)
    AND             reduce using rule 25 (divExpression -> .)
    OR              reduce using rule 25 (divExpression -> .)
    SEMICOLON       reduce using rule 25 (divExpression -> .)
    RPAREN          reduce using rule 25 (divExpression -> .)

    plusExpression                 shift and go to state 11
    greaterExpression              shift and go to state 31
    divExpression                  shift and go to state 13
    timesExpression                shift and go to state 2
    minusExpression                shift and go to state 12

state 22

    (18) plusExpression -> plusExpression PLUS . minusExpression
    (20) minusExpression -> . minusExpression MINUS timesExpression
    (21) minusExpression -> . timesExpression
    (22) timesExpression -> . timesExpression TIMES divExpression
    (23) timesExpression -> . divExpression
    (24) divExpression -> . divExpression DIV unaryMinusExpression
    (25) divExpression -> .

    DIV             reduce using rule 25 (divExpression -> .)
    TIMES           reduce using rule 25 (divExpression -> .)
    MINUS           reduce using rule 25 (divExpression -> .)
    PLUS            reduce using rule 25 (divExpression -> .)
    GREATER         reduce using rule 25 (divExpression -> .)
    LESS            reduce using rule 25 (divExpression -> .)
    NOTEQUALS       reduce using rule 25 (divExpression -> .)
    EQUALS          reduce using rule 25 (divExpression -> .)
    AND             reduce using rule 25 (divExpression -> .)
    OR              reduce using rule 25 (divExpression -> .)
    SEMICOLON       reduce using rule 25 (divExpression -> .)
    RPAREN          reduce using rule 25 (divExpression -> .)

    divExpression                  shift and go to state 13
    timesExpression                shift and go to state 2
    minusExpression                shift and go to state 32

state 23

    (20) minusExpression -> minusExpression MINUS . timesExpression
    (22) timesExpression -> . timesExpression TIMES divExpression
    (23) timesExpression -> . divExpression
    (24) divExpression -> . divExpression DIV unaryMinusExpression
    (25) divExpression -> .

    DIV             reduce using rule 25 (divExpression -> .)
    TIMES           reduce using rule 25 (divExpression -> .)
    MINUS           reduce using rule 25 (divExpression -> .)
    PLUS            reduce using rule 25 (divExpression -> .)
    GREATER         reduce using rule 25 (divExpression -> .)
    LESS            reduce using rule 25 (divExpression -> .)
    NOTEQUALS       reduce using rule 25 (divExpression -> .)
    EQUALS          reduce using rule 25 (divExpression -> .)
    AND             reduce using rule 25 (divExpression -> .)
    OR              reduce using rule 25 (divExpression -> .)
    SEMICOLON       reduce using rule 25 (divExpression -> .)
    RPAREN          reduce using rule 25 (divExpression -> .)

    divExpression                  shift and go to state 13
    timesExpression                shift and go to state 33

state 24

    (24) divExpression -> divExpression DIV . unaryMinusExpression
    (26) unaryMinusExpression -> . MINUS factorExpression
    (27) unaryMinusExpression -> . factorExpression
    (28) factorExpression -> . LPAREN expression RPAREN
    (29) factorExpression -> . NUMBER

    MINUS           shift and go to state 34
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 36

    unaryMinusExpression           shift and go to state 35
    factorExpression               shift and go to state 38

state 25

    (10) eqeqExpression -> eqeqExpression EQUALS EQUALS . noteqExpression
    (12) noteqExpression -> . noteqExpression NOTEQUALS lessExpression
    (13) noteqExpression -> . lessExpression
    (14) lessExpression -> . lessExpression LESS greaterExpression
    (15) lessExpression -> . greaterExpression
    (16) greaterExpression -> . greaterExpression GREATER plusExpression
    (17) greaterExpression -> . plusExpression
    (18) plusExpression -> . plusExpression PLUS minusExpression
    (19) plusExpression -> . minusExpression
    (20) minusExpression -> . minusExpression MINUS timesExpression
    (21) minusExpression -> . timesExpression
    (22) timesExpression -> . timesExpression TIMES divExpression
    (23) timesExpression -> . divExpression
    (24) divExpression -> . divExpression DIV unaryMinusExpression
    (25) divExpression -> .

    DIV             reduce using rule 25 (divExpression -> .)
    TIMES           reduce using rule 25 (divExpression -> .)
    MINUS           reduce using rule 25 (divExpression -> .)
    PLUS            reduce using rule 25 (divExpression -> .)
    GREATER         reduce using rule 25 (divExpression -> .)
    LESS            reduce using rule 25 (divExpression -> .)
    NOTEQUALS       reduce using rule 25 (divExpression -> .)
    EQUALS          reduce using rule 25 (divExpression -> .)
    AND             reduce using rule 25 (divExpression -> .)
    OR              reduce using rule 25 (divExpression -> .)
    SEMICOLON       reduce using rule 25 (divExpression -> .)
    RPAREN          reduce using rule 25 (divExpression -> .)

    plusExpression                 shift and go to state 11
    lessExpression                 shift and go to state 10
    greaterExpression              shift and go to state 5
    noteqExpression                shift and go to state 39
    divExpression                  shift and go to state 13
    timesExpression                shift and go to state 2
    minusExpression                shift and go to state 12

state 26

    (22) timesExpression -> timesExpression TIMES divExpression .
    (24) divExpression -> divExpression . DIV unaryMinusExpression

    TIMES           reduce using rule 22 (timesExpression -> timesExpression TIMES divExpression .)
    MINUS           reduce using rule 22 (timesExpression -> timesExpression TIMES divExpression .)
    PLUS            reduce using rule 22 (timesExpression -> timesExpression TIMES divExpression .)
    GREATER         reduce using rule 22 (timesExpression -> timesExpression TIMES divExpression .)
    LESS            reduce using rule 22 (timesExpression -> timesExpression TIMES divExpression .)
    NOTEQUALS       reduce using rule 22 (timesExpression -> timesExpression TIMES divExpression .)
    EQUALS          reduce using rule 22 (timesExpression -> timesExpression TIMES divExpression .)
    AND             reduce using rule 22 (timesExpression -> timesExpression TIMES divExpression .)
    OR              reduce using rule 22 (timesExpression -> timesExpression TIMES divExpression .)
    RPAREN          reduce using rule 22 (timesExpression -> timesExpression TIMES divExpression .)
    SEMICOLON       reduce using rule 22 (timesExpression -> timesExpression TIMES divExpression .)
    DIV             shift and go to state 24


state 27

    (6) orExpression -> orExpression OR andExpression .
    (8) andExpression -> andExpression . AND eqeqExpression

    OR              reduce using rule 6 (orExpression -> orExpression OR andExpression .)
    RPAREN          reduce using rule 6 (orExpression -> orExpression OR andExpression .)
    SEMICOLON       reduce using rule 6 (orExpression -> orExpression OR andExpression .)
    AND             shift and go to state 19


state 28

    (12) noteqExpression -> noteqExpression NOTEQUALS lessExpression .
    (14) lessExpression -> lessExpression . LESS greaterExpression

    NOTEQUALS       reduce using rule 12 (noteqExpression -> noteqExpression NOTEQUALS lessExpression .)
    EQUALS          reduce using rule 12 (noteqExpression -> noteqExpression NOTEQUALS lessExpression .)
    AND             reduce using rule 12 (noteqExpression -> noteqExpression NOTEQUALS lessExpression .)
    OR              reduce using rule 12 (noteqExpression -> noteqExpression NOTEQUALS lessExpression .)
    SEMICOLON       reduce using rule 12 (noteqExpression -> noteqExpression NOTEQUALS lessExpression .)
    RPAREN          reduce using rule 12 (noteqExpression -> noteqExpression NOTEQUALS lessExpression .)
    LESS            shift and go to state 21


state 29

    (16) greaterExpression -> greaterExpression GREATER plusExpression .
    (18) plusExpression -> plusExpression . PLUS minusExpression

    GREATER         reduce using rule 16 (greaterExpression -> greaterExpression GREATER plusExpression .)
    LESS            reduce using rule 16 (greaterExpression -> greaterExpression GREATER plusExpression .)
    NOTEQUALS       reduce using rule 16 (greaterExpression -> greaterExpression GREATER plusExpression .)
    EQUALS          reduce using rule 16 (greaterExpression -> greaterExpression GREATER plusExpression .)
    AND             reduce using rule 16 (greaterExpression -> greaterExpression GREATER plusExpression .)
    OR              reduce using rule 16 (greaterExpression -> greaterExpression GREATER plusExpression .)
    SEMICOLON       reduce using rule 16 (greaterExpression -> greaterExpression GREATER plusExpression .)
    RPAREN          reduce using rule 16 (greaterExpression -> greaterExpression GREATER plusExpression .)
    PLUS            shift and go to state 22


state 30

    (8) andExpression -> andExpression AND eqeqExpression .
    (10) eqeqExpression -> eqeqExpression . EQUALS EQUALS noteqExpression

    AND             reduce using rule 8 (andExpression -> andExpression AND eqeqExpression .)
    OR              reduce using rule 8 (andExpression -> andExpression AND eqeqExpression .)
    RPAREN          reduce using rule 8 (andExpression -> andExpression AND eqeqExpression .)
    SEMICOLON       reduce using rule 8 (andExpression -> andExpression AND eqeqExpression .)
    EQUALS          shift and go to state 14


state 31

    (14) lessExpression -> lessExpression LESS greaterExpression .
    (16) greaterExpression -> greaterExpression . GREATER plusExpression

    LESS            reduce using rule 14 (lessExpression -> lessExpression LESS greaterExpression .)
    NOTEQUALS       reduce using rule 14 (lessExpression -> lessExpression LESS greaterExpression .)
    EQUALS          reduce using rule 14 (lessExpression -> lessExpression LESS greaterExpression .)
    AND             reduce using rule 14 (lessExpression -> lessExpression LESS greaterExpression .)
    OR              reduce using rule 14 (lessExpression -> lessExpression LESS greaterExpression .)
    SEMICOLON       reduce using rule 14 (lessExpression -> lessExpression LESS greaterExpression .)
    RPAREN          reduce using rule 14 (lessExpression -> lessExpression LESS greaterExpression .)
    GREATER         shift and go to state 18


state 32

    (18) plusExpression -> plusExpression PLUS minusExpression .
    (20) minusExpression -> minusExpression . MINUS timesExpression

    PLUS            reduce using rule 18 (plusExpression -> plusExpression PLUS minusExpression .)
    GREATER         reduce using rule 18 (plusExpression -> plusExpression PLUS minusExpression .)
    LESS            reduce using rule 18 (plusExpression -> plusExpression PLUS minusExpression .)
    NOTEQUALS       reduce using rule 18 (plusExpression -> plusExpression PLUS minusExpression .)
    EQUALS          reduce using rule 18 (plusExpression -> plusExpression PLUS minusExpression .)
    AND             reduce using rule 18 (plusExpression -> plusExpression PLUS minusExpression .)
    OR              reduce using rule 18 (plusExpression -> plusExpression PLUS minusExpression .)
    SEMICOLON       reduce using rule 18 (plusExpression -> plusExpression PLUS minusExpression .)
    RPAREN          reduce using rule 18 (plusExpression -> plusExpression PLUS minusExpression .)
    MINUS           shift and go to state 23


state 33

    (20) minusExpression -> minusExpression MINUS timesExpression .
    (22) timesExpression -> timesExpression . TIMES divExpression

    MINUS           reduce using rule 20 (minusExpression -> minusExpression MINUS timesExpression .)
    PLUS            reduce using rule 20 (minusExpression -> minusExpression MINUS timesExpression .)
    GREATER         reduce using rule 20 (minusExpression -> minusExpression MINUS timesExpression .)
    LESS            reduce using rule 20 (minusExpression -> minusExpression MINUS timesExpression .)
    NOTEQUALS       reduce using rule 20 (minusExpression -> minusExpression MINUS timesExpression .)
    EQUALS          reduce using rule 20 (minusExpression -> minusExpression MINUS timesExpression .)
    AND             reduce using rule 20 (minusExpression -> minusExpression MINUS timesExpression .)
    OR              reduce using rule 20 (minusExpression -> minusExpression MINUS timesExpression .)
    SEMICOLON       reduce using rule 20 (minusExpression -> minusExpression MINUS timesExpression .)
    RPAREN          reduce using rule 20 (minusExpression -> minusExpression MINUS timesExpression .)
    TIMES           shift and go to state 15


state 34

    (26) unaryMinusExpression -> MINUS . factorExpression
    (28) factorExpression -> . LPAREN expression RPAREN
    (29) factorExpression -> . NUMBER

    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 36

    factorExpression               shift and go to state 40

state 35

    (24) divExpression -> divExpression DIV unaryMinusExpression .

    DIV             reduce using rule 24 (divExpression -> divExpression DIV unaryMinusExpression .)
    TIMES           reduce using rule 24 (divExpression -> divExpression DIV unaryMinusExpression .)
    MINUS           reduce using rule 24 (divExpression -> divExpression DIV unaryMinusExpression .)
    PLUS            reduce using rule 24 (divExpression -> divExpression DIV unaryMinusExpression .)
    GREATER         reduce using rule 24 (divExpression -> divExpression DIV unaryMinusExpression .)
    LESS            reduce using rule 24 (divExpression -> divExpression DIV unaryMinusExpression .)
    NOTEQUALS       reduce using rule 24 (divExpression -> divExpression DIV unaryMinusExpression .)
    EQUALS          reduce using rule 24 (divExpression -> divExpression DIV unaryMinusExpression .)
    AND             reduce using rule 24 (divExpression -> divExpression DIV unaryMinusExpression .)
    OR              reduce using rule 24 (divExpression -> divExpression DIV unaryMinusExpression .)
    SEMICOLON       reduce using rule 24 (divExpression -> divExpression DIV unaryMinusExpression .)
    RPAREN          reduce using rule 24 (divExpression -> divExpression DIV unaryMinusExpression .)


state 36

    (29) factorExpression -> NUMBER .

    DIV             reduce using rule 29 (factorExpression -> NUMBER .)
    TIMES           reduce using rule 29 (factorExpression -> NUMBER .)
    MINUS           reduce using rule 29 (factorExpression -> NUMBER .)
    PLUS            reduce using rule 29 (factorExpression -> NUMBER .)
    GREATER         reduce using rule 29 (factorExpression -> NUMBER .)
    LESS            reduce using rule 29 (factorExpression -> NUMBER .)
    NOTEQUALS       reduce using rule 29 (factorExpression -> NUMBER .)
    EQUALS          reduce using rule 29 (factorExpression -> NUMBER .)
    AND             reduce using rule 29 (factorExpression -> NUMBER .)
    OR              reduce using rule 29 (factorExpression -> NUMBER .)
    SEMICOLON       reduce using rule 29 (factorExpression -> NUMBER .)
    RPAREN          reduce using rule 29 (factorExpression -> NUMBER .)


state 37

    (28) factorExpression -> LPAREN . expression RPAREN
    (5) expression -> . orExpression
    (6) orExpression -> . orExpression OR andExpression
    (7) orExpression -> . andExpression
    (8) andExpression -> . andExpression AND eqeqExpression
    (9) andExpression -> . eqeqExpression
    (10) eqeqExpression -> . eqeqExpression EQUALS EQUALS noteqExpression
    (11) eqeqExpression -> . noteqExpression
    (12) noteqExpression -> . noteqExpression NOTEQUALS lessExpression
    (13) noteqExpression -> . lessExpression
    (14) lessExpression -> . lessExpression LESS greaterExpression
    (15) lessExpression -> . greaterExpression
    (16) greaterExpression -> . greaterExpression GREATER plusExpression
    (17) greaterExpression -> . plusExpression
    (18) plusExpression -> . plusExpression PLUS minusExpression
    (19) plusExpression -> . minusExpression
    (20) minusExpression -> . minusExpression MINUS timesExpression
    (21) minusExpression -> . timesExpression
    (22) timesExpression -> . timesExpression TIMES divExpression
    (23) timesExpression -> . divExpression
    (24) divExpression -> . divExpression DIV unaryMinusExpression
    (25) divExpression -> .

    DIV             reduce using rule 25 (divExpression -> .)
    TIMES           reduce using rule 25 (divExpression -> .)
    MINUS           reduce using rule 25 (divExpression -> .)
    PLUS            reduce using rule 25 (divExpression -> .)
    GREATER         reduce using rule 25 (divExpression -> .)
    LESS            reduce using rule 25 (divExpression -> .)
    NOTEQUALS       reduce using rule 25 (divExpression -> .)
    EQUALS          reduce using rule 25 (divExpression -> .)
    AND             reduce using rule 25 (divExpression -> .)
    OR              reduce using rule 25 (divExpression -> .)
    RPAREN          reduce using rule 25 (divExpression -> .)

    eqeqExpression                 shift and go to state 1
    orExpression                   shift and go to state 3
    plusExpression                 shift and go to state 11
    noteqExpression                shift and go to state 4
    divExpression                  shift and go to state 13
    timesExpression                shift and go to state 2
    expression                     shift and go to state 41
    lessExpression                 shift and go to state 10
    greaterExpression              shift and go to state 5
    minusExpression                shift and go to state 12
    andExpression                  shift and go to state 6

state 38

    (27) unaryMinusExpression -> factorExpression .

    DIV             reduce using rule 27 (unaryMinusExpression -> factorExpression .)
    TIMES           reduce using rule 27 (unaryMinusExpression -> factorExpression .)
    MINUS           reduce using rule 27 (unaryMinusExpression -> factorExpression .)
    PLUS            reduce using rule 27 (unaryMinusExpression -> factorExpression .)
    GREATER         reduce using rule 27 (unaryMinusExpression -> factorExpression .)
    LESS            reduce using rule 27 (unaryMinusExpression -> factorExpression .)
    NOTEQUALS       reduce using rule 27 (unaryMinusExpression -> factorExpression .)
    EQUALS          reduce using rule 27 (unaryMinusExpression -> factorExpression .)
    AND             reduce using rule 27 (unaryMinusExpression -> factorExpression .)
    OR              reduce using rule 27 (unaryMinusExpression -> factorExpression .)
    SEMICOLON       reduce using rule 27 (unaryMinusExpression -> factorExpression .)
    RPAREN          reduce using rule 27 (unaryMinusExpression -> factorExpression .)


state 39

    (10) eqeqExpression -> eqeqExpression EQUALS EQUALS noteqExpression .
    (12) noteqExpression -> noteqExpression . NOTEQUALS lessExpression

    EQUALS          reduce using rule 10 (eqeqExpression -> eqeqExpression EQUALS EQUALS noteqExpression .)
    AND             reduce using rule 10 (eqeqExpression -> eqeqExpression EQUALS EQUALS noteqExpression .)
    OR              reduce using rule 10 (eqeqExpression -> eqeqExpression EQUALS EQUALS noteqExpression .)
    SEMICOLON       reduce using rule 10 (eqeqExpression -> eqeqExpression EQUALS EQUALS noteqExpression .)
    RPAREN          reduce using rule 10 (eqeqExpression -> eqeqExpression EQUALS EQUALS noteqExpression .)
    NOTEQUALS       shift and go to state 17


state 40

    (26) unaryMinusExpression -> MINUS factorExpression .

    DIV             reduce using rule 26 (unaryMinusExpression -> MINUS factorExpression .)
    TIMES           reduce using rule 26 (unaryMinusExpression -> MINUS factorExpression .)
    MINUS           reduce using rule 26 (unaryMinusExpression -> MINUS factorExpression .)
    PLUS            reduce using rule 26 (unaryMinusExpression -> MINUS factorExpression .)
    GREATER         reduce using rule 26 (unaryMinusExpression -> MINUS factorExpression .)
    LESS            reduce using rule 26 (unaryMinusExpression -> MINUS factorExpression .)
    NOTEQUALS       reduce using rule 26 (unaryMinusExpression -> MINUS factorExpression .)
    EQUALS          reduce using rule 26 (unaryMinusExpression -> MINUS factorExpression .)
    AND             reduce using rule 26 (unaryMinusExpression -> MINUS factorExpression .)
    OR              reduce using rule 26 (unaryMinusExpression -> MINUS factorExpression .)
    SEMICOLON       reduce using rule 26 (unaryMinusExpression -> MINUS factorExpression .)
    RPAREN          reduce using rule 26 (unaryMinusExpression -> MINUS factorExpression .)


state 41

    (28) factorExpression -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 42


state 42

    (28) factorExpression -> LPAREN expression RPAREN .

    DIV             reduce using rule 28 (factorExpression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 28 (factorExpression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 28 (factorExpression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 28 (factorExpression -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 28 (factorExpression -> LPAREN expression RPAREN .)
    LESS            reduce using rule 28 (factorExpression -> LPAREN expression RPAREN .)
    NOTEQUALS       reduce using rule 28 (factorExpression -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 28 (factorExpression -> LPAREN expression RPAREN .)
    AND             reduce using rule 28 (factorExpression -> LPAREN expression RPAREN .)
    OR              reduce using rule 28 (factorExpression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 28 (factorExpression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 28 (factorExpression -> LPAREN expression RPAREN .)

