Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Unused terminals:

    DOT

Grammar

Rule 0     S' -> code
Rule 1     code -> statement code
Rule 2     code -> COMMENT code
Rule 3     code -> <empty>
Rule 4     statement -> expression SEMICOLON
Rule 5     statement -> block
Rule 6     statement -> if
Rule 7     statement -> while
Rule 8     statement -> for
Rule 9     statement -> do_while
Rule 10    expression -> expressionAssign
Rule 11    optional_expr -> expression
Rule 12    optional_expr -> <empty>
Rule 13    aritExp -> aritExp AO unaryExp
Rule 14    aritExp -> unaryExp
Rule 15    unaryExp -> AO unaryExp
Rule 16    unaryExp -> DOUBLE_AO unaryExp
Rule 17    unaryExp -> unaryExp2
Rule 18    unaryExp2 -> unaryExp2 DOUBLE_AO
Rule 19    unaryExp2 -> factorExp
Rule 20    factorExp -> factorNumExp
Rule 21    factorExp -> bool_atom
Rule 22    factorExp -> expressionVectorAt
Rule 23    factorExp -> LPAREN expression RPAREN
Rule 24    factorExp -> expressionFunction
Rule 25    factorVar -> VAR
Rule 26    factorNumExp -> NUMBER
Rule 27    bool_atom -> TRUE
Rule 28    bool_atom -> FALSE
Rule 29    expressionBoolOp -> expressionBoolOp BOOL_OP expressionComp
Rule 30    expressionBoolOp -> expressionComp
Rule 31    unaryExp -> NOT unaryExp
Rule 32    expressionComp -> expressionComp COMP aritExp
Rule 33    expressionComp -> aritExp
Rule 34    unaryExp -> STRING
Rule 35    expressionVector -> LBRACKET vector_items RBRACKET
Rule 36    vector_items -> expression COMMA vector_items
Rule 37    vector_items -> expression
Rule 38    expressionVectorAt -> expressionVectorAt LBRACKET expression RBRACKET
Rule 39    expressionVectorAt -> expressionVector
Rule 40    expressionVectorAt -> factorVar
Rule 41    expressionAssign -> expressionTernaryCond AOEQUAL expressionAssign
Rule 42    expressionAssign -> expressionTernaryCond EQUAL expressionAssign
Rule 43    expressionAssign -> expressionTernaryCond
Rule 44    expressionAssign -> expressionTernaryCond EQUAL LBRACE reg_items RBRACE
Rule 45    reg_items -> reg_field COMMA reg_items
Rule 46    reg_items -> reg_field
Rule 47    reg_field -> factorVar COLON expression
Rule 48    comments -> <empty>
Rule 49    block -> LBRACE code RBRACE
Rule 50    singleStatement -> COMMENT singleStatement
Rule 51    singleStatement -> statement
Rule 52    if -> IF LPAREN expression RPAREN singleStatement else
Rule 53    else -> ELSE singleStatement
Rule 54    else -> <empty>
Rule 55    expressionTernaryCond -> expressionBoolOp QUESTION expression COLON expression
Rule 56    expressionTernaryCond -> expressionBoolOp
Rule 57    while -> WHILE LPAREN expression RPAREN singleStatement
Rule 58    for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement
Rule 59    do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON
Rule 60    expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
Rule 61    expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
Rule 62    expressionFunction -> CAPITALIZAR LPAREN expression RPAREN
Rule 63    expressionFunction -> COLINEALES LPAREN expression COMMA expression RPAREN
Rule 64    expressionFunction -> PRINT LPAREN expression RPAREN
Rule 65    expressionFunction -> LENGTH LPAREN expression RPAREN

Terminals, with rules where they appear

AO                   : 13 15
AOEQUAL              : 41
BOOL_OP              : 29
CAPITALIZAR          : 62
COLINEALES           : 63
COLON                : 47 55
COMMA                : 36 45 60 61 61 63
COMMENT              : 2 50
COMP                 : 32
DO                   : 59
DOT                  : 
DOUBLE_AO            : 16 18
ELSE                 : 53
EQUAL                : 42 44
FALSE                : 28
FOR                  : 58
IF                   : 52
LBRACE               : 44 49
LBRACKET             : 35 38
LENGTH               : 65
LPAREN               : 23 52 57 58 59 60 61 62 63 64 65
MULTIPLICACIONESCALAR : 60 61
NOT                  : 31
NUMBER               : 26
PRINT                : 64
QUESTION             : 55
RBRACE               : 44 49
RBRACKET             : 35 38
RPAREN               : 23 52 57 58 59 60 61 62 63 64 65
SEMICOLON            : 4 58 58 59
STRING               : 34
TRUE                 : 27
VAR                  : 25
WHILE                : 57 59
error                : 

Nonterminals, with rules where they appear

aritExp              : 13 32 33
block                : 5
bool_atom            : 21
code                 : 1 2 49 0
comments             : 
do_while             : 9
else                 : 52
expression           : 4 11 23 36 37 38 47 52 55 55 57 58 59 60 60 61 61 61 62 63 63 64 65
expressionAssign     : 10 41 42
expressionBoolOp     : 29 55 56
expressionComp       : 29 30 32
expressionFunction   : 24
expressionTernaryCond : 41 42 43 44
expressionVector     : 39
expressionVectorAt   : 22 38
factorExp            : 19
factorNumExp         : 20
factorVar            : 40 47
for                  : 8
if                   : 6
optional_expr        : 58 58
reg_field            : 45 46
reg_items            : 44 45
singleStatement      : 50 52 53 57 58 59
statement            : 1 51
unaryExp             : 13 14 15 16 31
unaryExp2            : 17 18
vector_items         : 35 36
while                : 7

Parsing method: LALR

state 0

    (0) S' -> . code
    (1) code -> . statement code
    (2) code -> . COMMENT code
    (3) code -> .
    (4) statement -> . expression SEMICOLON
    (5) statement -> . block
    (6) statement -> . if
    (7) statement -> . while
    (8) statement -> . for
    (9) statement -> . do_while
    (10) expression -> . expressionAssign
    (49) block -> . LBRACE code RBRACE
    (52) if -> . IF LPAREN expression RPAREN singleStatement else
    (57) while -> . WHILE LPAREN expression RPAREN singleStatement
    (58) for -> . FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement
    (59) do_while -> . DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON
    (41) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (42) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (43) expressionAssign -> . expressionTernaryCond
    (44) expressionAssign -> . expressionTernaryCond EQUAL LBRACE reg_items RBRACE
    (55) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (56) expressionTernaryCond -> . expressionBoolOp
    (29) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (30) expressionBoolOp -> . expressionComp
    (32) expressionComp -> . expressionComp COMP aritExp
    (33) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (31) unaryExp -> . NOT unaryExp
    (34) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . LPAREN expression RPAREN
    (24) factorExp -> . expressionFunction
    (26) factorNumExp -> . NUMBER
    (27) bool_atom -> . TRUE
    (28) bool_atom -> . FALSE
    (38) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (39) expressionVectorAt -> . expressionVector
    (40) expressionVectorAt -> . factorVar
    (60) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (61) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (62) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (63) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . PRINT LPAREN expression RPAREN
    (65) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (35) expressionVector -> . LBRACKET vector_items RBRACKET
    (25) factorVar -> . VAR

    COMMENT         shift and go to state 12
    $end            reduce using rule 3 (code -> .)
    LBRACE          shift and go to state 27
    IF              shift and go to state 36
    WHILE           shift and go to state 40
    FOR             shift and go to state 23
    DO              shift and go to state 38
    AO              shift and go to state 2
    DOUBLE_AO       shift and go to state 37
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 8
    FALSE           shift and go to state 10
    MULTIPLICACIONESCALAR shift and go to state 9
    CAPITALIZAR     shift and go to state 6
    COLINEALES      shift and go to state 35
    PRINT           shift and go to state 13
    LENGTH          shift and go to state 5
    LBRACKET        shift and go to state 22
    VAR             shift and go to state 19

    expressionTernaryCond          shift and go to state 1
    unaryExp2                      shift and go to state 21
    expressionComp                 shift and go to state 24
    factorVar                      shift and go to state 3
    factorExp                      shift and go to state 4
    expressionVector               shift and go to state 26
    if                             shift and go to state 28
    block                          shift and go to state 29
    unaryExp                       shift and go to state 30
    statement                      shift and go to state 25
    expressionBoolOp               shift and go to state 31
    while                          shift and go to state 32
    bool_atom                      shift and go to state 34
    for                            shift and go to state 41
    expressionFunction             shift and go to state 18
    factorNumExp                   shift and go to state 14
    do_while                       shift and go to state 15
    expression                     shift and go to state 16
    expressionVectorAt             shift and go to state 39
    aritExp                        shift and go to state 17
    code                           shift and go to state 42
    expressionAssign               shift and go to state 43

state 1

    (41) expressionAssign -> expressionTernaryCond . AOEQUAL expressionAssign
    (42) expressionAssign -> expressionTernaryCond . EQUAL expressionAssign
    (43) expressionAssign -> expressionTernaryCond .
    (44) expressionAssign -> expressionTernaryCond . EQUAL LBRACE reg_items RBRACE

  ! shift/reduce conflict for AOEQUAL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
    AOEQUAL         shift and go to state 44
    EQUAL           shift and go to state 45
    RPAREN          reduce using rule 43 (expressionAssign -> expressionTernaryCond .)
    SEMICOLON       reduce using rule 43 (expressionAssign -> expressionTernaryCond .)
    COMMA           reduce using rule 43 (expressionAssign -> expressionTernaryCond .)
    RBRACKET        reduce using rule 43 (expressionAssign -> expressionTernaryCond .)
    COLON           reduce using rule 43 (expressionAssign -> expressionTernaryCond .)
    RBRACE          reduce using rule 43 (expressionAssign -> expressionTernaryCond .)

  ! AOEQUAL         [ reduce using rule 43 (expressionAssign -> expressionTernaryCond .) ]
  ! EQUAL           [ reduce using rule 43 (expressionAssign -> expressionTernaryCond .) ]


state 2

    (15) unaryExp -> AO . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (31) unaryExp -> . NOT unaryExp
    (34) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . LPAREN expression RPAREN
    (24) factorExp -> . expressionFunction
    (26) factorNumExp -> . NUMBER
    (27) bool_atom -> . TRUE
    (28) bool_atom -> . FALSE
    (38) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (39) expressionVectorAt -> . expressionVector
    (40) expressionVectorAt -> . factorVar
    (60) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (61) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (62) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (63) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . PRINT LPAREN expression RPAREN
    (65) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (35) expressionVector -> . LBRACKET vector_items RBRACKET
    (25) factorVar -> . VAR

    AO              shift and go to state 2
    DOUBLE_AO       shift and go to state 37
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 8
    FALSE           shift and go to state 10
    MULTIPLICACIONESCALAR shift and go to state 9
    CAPITALIZAR     shift and go to state 6
    COLINEALES      shift and go to state 35
    PRINT           shift and go to state 13
    LENGTH          shift and go to state 5
    LBRACKET        shift and go to state 22
    VAR             shift and go to state 19

    unaryExp                       shift and go to state 46
    unaryExp2                      shift and go to state 21
    factorNumExp                   shift and go to state 14
    bool_atom                      shift and go to state 34
    expressionVectorAt             shift and go to state 39
    factorExp                      shift and go to state 4
    expressionVector               shift and go to state 26
    expressionFunction             shift and go to state 18
    factorVar                      shift and go to state 3

state 3

    (40) expressionVectorAt -> factorVar .

    LBRACKET        reduce using rule 40 (expressionVectorAt -> factorVar .)
    DOUBLE_AO       reduce using rule 40 (expressionVectorAt -> factorVar .)
    AO              reduce using rule 40 (expressionVectorAt -> factorVar .)
    COMP            reduce using rule 40 (expressionVectorAt -> factorVar .)
    QUESTION        reduce using rule 40 (expressionVectorAt -> factorVar .)
    BOOL_OP         reduce using rule 40 (expressionVectorAt -> factorVar .)
    AOEQUAL         reduce using rule 40 (expressionVectorAt -> factorVar .)
    EQUAL           reduce using rule 40 (expressionVectorAt -> factorVar .)
    RPAREN          reduce using rule 40 (expressionVectorAt -> factorVar .)
    SEMICOLON       reduce using rule 40 (expressionVectorAt -> factorVar .)
    RBRACKET        reduce using rule 40 (expressionVectorAt -> factorVar .)
    COMMA           reduce using rule 40 (expressionVectorAt -> factorVar .)
    COLON           reduce using rule 40 (expressionVectorAt -> factorVar .)
    RBRACE          reduce using rule 40 (expressionVectorAt -> factorVar .)


state 4

    (19) unaryExp2 -> factorExp .

    DOUBLE_AO       reduce using rule 19 (unaryExp2 -> factorExp .)
    AO              reduce using rule 19 (unaryExp2 -> factorExp .)
    COMP            reduce using rule 19 (unaryExp2 -> factorExp .)
    QUESTION        reduce using rule 19 (unaryExp2 -> factorExp .)
    BOOL_OP         reduce using rule 19 (unaryExp2 -> factorExp .)
    AOEQUAL         reduce using rule 19 (unaryExp2 -> factorExp .)
    EQUAL           reduce using rule 19 (unaryExp2 -> factorExp .)
    SEMICOLON       reduce using rule 19 (unaryExp2 -> factorExp .)
    RPAREN          reduce using rule 19 (unaryExp2 -> factorExp .)
    COLON           reduce using rule 19 (unaryExp2 -> factorExp .)
    COMMA           reduce using rule 19 (unaryExp2 -> factorExp .)
    RBRACKET        reduce using rule 19 (unaryExp2 -> factorExp .)
    RBRACE          reduce using rule 19 (unaryExp2 -> factorExp .)


state 5

    (65) expressionFunction -> LENGTH . LPAREN expression RPAREN

    LPAREN          shift and go to state 47


state 6

    (62) expressionFunction -> CAPITALIZAR . LPAREN expression RPAREN

    LPAREN          shift and go to state 48


state 7

    (31) unaryExp -> NOT . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (31) unaryExp -> . NOT unaryExp
    (34) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . LPAREN expression RPAREN
    (24) factorExp -> . expressionFunction
    (26) factorNumExp -> . NUMBER
    (27) bool_atom -> . TRUE
    (28) bool_atom -> . FALSE
    (38) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (39) expressionVectorAt -> . expressionVector
    (40) expressionVectorAt -> . factorVar
    (60) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (61) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (62) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (63) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . PRINT LPAREN expression RPAREN
    (65) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (35) expressionVector -> . LBRACKET vector_items RBRACKET
    (25) factorVar -> . VAR

    AO              shift and go to state 2
    DOUBLE_AO       shift and go to state 37
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 8
    FALSE           shift and go to state 10
    MULTIPLICACIONESCALAR shift and go to state 9
    CAPITALIZAR     shift and go to state 6
    COLINEALES      shift and go to state 35
    PRINT           shift and go to state 13
    LENGTH          shift and go to state 5
    LBRACKET        shift and go to state 22
    VAR             shift and go to state 19

    unaryExp                       shift and go to state 49
    unaryExp2                      shift and go to state 21
    factorNumExp                   shift and go to state 14
    bool_atom                      shift and go to state 34
    expressionVectorAt             shift and go to state 39
    factorExp                      shift and go to state 4
    expressionVector               shift and go to state 26
    expressionFunction             shift and go to state 18
    factorVar                      shift and go to state 3

state 8

    (27) bool_atom -> TRUE .

    DOUBLE_AO       reduce using rule 27 (bool_atom -> TRUE .)
    AO              reduce using rule 27 (bool_atom -> TRUE .)
    COMP            reduce using rule 27 (bool_atom -> TRUE .)
    QUESTION        reduce using rule 27 (bool_atom -> TRUE .)
    BOOL_OP         reduce using rule 27 (bool_atom -> TRUE .)
    AOEQUAL         reduce using rule 27 (bool_atom -> TRUE .)
    EQUAL           reduce using rule 27 (bool_atom -> TRUE .)
    SEMICOLON       reduce using rule 27 (bool_atom -> TRUE .)
    RPAREN          reduce using rule 27 (bool_atom -> TRUE .)
    COMMA           reduce using rule 27 (bool_atom -> TRUE .)
    RBRACKET        reduce using rule 27 (bool_atom -> TRUE .)
    COLON           reduce using rule 27 (bool_atom -> TRUE .)
    RBRACE          reduce using rule 27 (bool_atom -> TRUE .)


state 9

    (60) expressionFunction -> MULTIPLICACIONESCALAR . LPAREN expression COMMA expression RPAREN
    (61) expressionFunction -> MULTIPLICACIONESCALAR . LPAREN expression COMMA expression COMMA expression RPAREN

    LPAREN          shift and go to state 50


state 10

    (28) bool_atom -> FALSE .

    DOUBLE_AO       reduce using rule 28 (bool_atom -> FALSE .)
    AO              reduce using rule 28 (bool_atom -> FALSE .)
    COMP            reduce using rule 28 (bool_atom -> FALSE .)
    QUESTION        reduce using rule 28 (bool_atom -> FALSE .)
    BOOL_OP         reduce using rule 28 (bool_atom -> FALSE .)
    AOEQUAL         reduce using rule 28 (bool_atom -> FALSE .)
    EQUAL           reduce using rule 28 (bool_atom -> FALSE .)
    SEMICOLON       reduce using rule 28 (bool_atom -> FALSE .)
    RPAREN          reduce using rule 28 (bool_atom -> FALSE .)
    COMMA           reduce using rule 28 (bool_atom -> FALSE .)
    RBRACKET        reduce using rule 28 (bool_atom -> FALSE .)
    COLON           reduce using rule 28 (bool_atom -> FALSE .)
    RBRACE          reduce using rule 28 (bool_atom -> FALSE .)


state 11

    (34) unaryExp -> STRING .

    AO              reduce using rule 34 (unaryExp -> STRING .)
    COMP            reduce using rule 34 (unaryExp -> STRING .)
    QUESTION        reduce using rule 34 (unaryExp -> STRING .)
    BOOL_OP         reduce using rule 34 (unaryExp -> STRING .)
    AOEQUAL         reduce using rule 34 (unaryExp -> STRING .)
    EQUAL           reduce using rule 34 (unaryExp -> STRING .)
    SEMICOLON       reduce using rule 34 (unaryExp -> STRING .)
    RPAREN          reduce using rule 34 (unaryExp -> STRING .)
    COMMA           reduce using rule 34 (unaryExp -> STRING .)
    RBRACKET        reduce using rule 34 (unaryExp -> STRING .)
    COLON           reduce using rule 34 (unaryExp -> STRING .)
    RBRACE          reduce using rule 34 (unaryExp -> STRING .)


state 12

    (2) code -> COMMENT . code
    (1) code -> . statement code
    (2) code -> . COMMENT code
    (3) code -> .
    (4) statement -> . expression SEMICOLON
    (5) statement -> . block
    (6) statement -> . if
    (7) statement -> . while
    (8) statement -> . for
    (9) statement -> . do_while
    (10) expression -> . expressionAssign
    (49) block -> . LBRACE code RBRACE
    (52) if -> . IF LPAREN expression RPAREN singleStatement else
    (57) while -> . WHILE LPAREN expression RPAREN singleStatement
    (58) for -> . FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement
    (59) do_while -> . DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON
    (41) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (42) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (43) expressionAssign -> . expressionTernaryCond
    (44) expressionAssign -> . expressionTernaryCond EQUAL LBRACE reg_items RBRACE
    (55) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (56) expressionTernaryCond -> . expressionBoolOp
    (29) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (30) expressionBoolOp -> . expressionComp
    (32) expressionComp -> . expressionComp COMP aritExp
    (33) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (31) unaryExp -> . NOT unaryExp
    (34) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . LPAREN expression RPAREN
    (24) factorExp -> . expressionFunction
    (26) factorNumExp -> . NUMBER
    (27) bool_atom -> . TRUE
    (28) bool_atom -> . FALSE
    (38) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (39) expressionVectorAt -> . expressionVector
    (40) expressionVectorAt -> . factorVar
    (60) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (61) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (62) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (63) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . PRINT LPAREN expression RPAREN
    (65) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (35) expressionVector -> . LBRACKET vector_items RBRACKET
    (25) factorVar -> . VAR

    COMMENT         shift and go to state 12
    $end            reduce using rule 3 (code -> .)
    RBRACE          reduce using rule 3 (code -> .)
    LBRACE          shift and go to state 27
    IF              shift and go to state 36
    WHILE           shift and go to state 40
    FOR             shift and go to state 23
    DO              shift and go to state 38
    AO              shift and go to state 2
    DOUBLE_AO       shift and go to state 37
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 8
    FALSE           shift and go to state 10
    MULTIPLICACIONESCALAR shift and go to state 9
    CAPITALIZAR     shift and go to state 6
    COLINEALES      shift and go to state 35
    PRINT           shift and go to state 13
    LENGTH          shift and go to state 5
    LBRACKET        shift and go to state 22
    VAR             shift and go to state 19

    expressionTernaryCond          shift and go to state 1
    unaryExp2                      shift and go to state 21
    expressionComp                 shift and go to state 24
    factorVar                      shift and go to state 3
    factorExp                      shift and go to state 4
    expressionVector               shift and go to state 26
    if                             shift and go to state 28
    block                          shift and go to state 29
    unaryExp                       shift and go to state 30
    statement                      shift and go to state 25
    expressionBoolOp               shift and go to state 31
    while                          shift and go to state 32
    bool_atom                      shift and go to state 34
    for                            shift and go to state 41
    expressionFunction             shift and go to state 18
    factorNumExp                   shift and go to state 14
    do_while                       shift and go to state 15
    expression                     shift and go to state 16
    expressionVectorAt             shift and go to state 39
    aritExp                        shift and go to state 17
    code                           shift and go to state 51
    expressionAssign               shift and go to state 43

state 13

    (64) expressionFunction -> PRINT . LPAREN expression RPAREN

    LPAREN          shift and go to state 52


state 14

    (20) factorExp -> factorNumExp .

    DOUBLE_AO       reduce using rule 20 (factorExp -> factorNumExp .)
    AO              reduce using rule 20 (factorExp -> factorNumExp .)
    COMP            reduce using rule 20 (factorExp -> factorNumExp .)
    QUESTION        reduce using rule 20 (factorExp -> factorNumExp .)
    BOOL_OP         reduce using rule 20 (factorExp -> factorNumExp .)
    AOEQUAL         reduce using rule 20 (factorExp -> factorNumExp .)
    EQUAL           reduce using rule 20 (factorExp -> factorNumExp .)
    RPAREN          reduce using rule 20 (factorExp -> factorNumExp .)
    SEMICOLON       reduce using rule 20 (factorExp -> factorNumExp .)
    COMMA           reduce using rule 20 (factorExp -> factorNumExp .)
    RBRACE          reduce using rule 20 (factorExp -> factorNumExp .)
    RBRACKET        reduce using rule 20 (factorExp -> factorNumExp .)
    COLON           reduce using rule 20 (factorExp -> factorNumExp .)


state 15

    (9) statement -> do_while .

    WHILE           reduce using rule 9 (statement -> do_while .)
    ELSE            reduce using rule 9 (statement -> do_while .)
    COMMENT         reduce using rule 9 (statement -> do_while .)
    LBRACE          reduce using rule 9 (statement -> do_while .)
    IF              reduce using rule 9 (statement -> do_while .)
    FOR             reduce using rule 9 (statement -> do_while .)
    DO              reduce using rule 9 (statement -> do_while .)
    AO              reduce using rule 9 (statement -> do_while .)
    DOUBLE_AO       reduce using rule 9 (statement -> do_while .)
    NOT             reduce using rule 9 (statement -> do_while .)
    STRING          reduce using rule 9 (statement -> do_while .)
    LPAREN          reduce using rule 9 (statement -> do_while .)
    NUMBER          reduce using rule 9 (statement -> do_while .)
    TRUE            reduce using rule 9 (statement -> do_while .)
    FALSE           reduce using rule 9 (statement -> do_while .)
    MULTIPLICACIONESCALAR reduce using rule 9 (statement -> do_while .)
    CAPITALIZAR     reduce using rule 9 (statement -> do_while .)
    COLINEALES      reduce using rule 9 (statement -> do_while .)
    PRINT           reduce using rule 9 (statement -> do_while .)
    LENGTH          reduce using rule 9 (statement -> do_while .)
    LBRACKET        reduce using rule 9 (statement -> do_while .)
    VAR             reduce using rule 9 (statement -> do_while .)
    $end            reduce using rule 9 (statement -> do_while .)
    RBRACE          reduce using rule 9 (statement -> do_while .)


state 16

    (4) statement -> expression . SEMICOLON

    SEMICOLON       shift and go to state 53


state 17

    (33) expressionComp -> aritExp .
    (13) aritExp -> aritExp . AO unaryExp

    COMP            reduce using rule 33 (expressionComp -> aritExp .)
    QUESTION        reduce using rule 33 (expressionComp -> aritExp .)
    BOOL_OP         reduce using rule 33 (expressionComp -> aritExp .)
    AOEQUAL         reduce using rule 33 (expressionComp -> aritExp .)
    EQUAL           reduce using rule 33 (expressionComp -> aritExp .)
    SEMICOLON       reduce using rule 33 (expressionComp -> aritExp .)
    RPAREN          reduce using rule 33 (expressionComp -> aritExp .)
    COMMA           reduce using rule 33 (expressionComp -> aritExp .)
    COLON           reduce using rule 33 (expressionComp -> aritExp .)
    RBRACKET        reduce using rule 33 (expressionComp -> aritExp .)
    RBRACE          reduce using rule 33 (expressionComp -> aritExp .)
    AO              shift and go to state 54


state 18

    (24) factorExp -> expressionFunction .

    DOUBLE_AO       reduce using rule 24 (factorExp -> expressionFunction .)
    AO              reduce using rule 24 (factorExp -> expressionFunction .)
    COMP            reduce using rule 24 (factorExp -> expressionFunction .)
    QUESTION        reduce using rule 24 (factorExp -> expressionFunction .)
    BOOL_OP         reduce using rule 24 (factorExp -> expressionFunction .)
    AOEQUAL         reduce using rule 24 (factorExp -> expressionFunction .)
    EQUAL           reduce using rule 24 (factorExp -> expressionFunction .)
    RPAREN          reduce using rule 24 (factorExp -> expressionFunction .)
    SEMICOLON       reduce using rule 24 (factorExp -> expressionFunction .)
    COMMA           reduce using rule 24 (factorExp -> expressionFunction .)
    RBRACE          reduce using rule 24 (factorExp -> expressionFunction .)
    RBRACKET        reduce using rule 24 (factorExp -> expressionFunction .)
    COLON           reduce using rule 24 (factorExp -> expressionFunction .)


state 19

    (25) factorVar -> VAR .

    COLON           reduce using rule 25 (factorVar -> VAR .)
    LBRACKET        reduce using rule 25 (factorVar -> VAR .)
    DOUBLE_AO       reduce using rule 25 (factorVar -> VAR .)
    AO              reduce using rule 25 (factorVar -> VAR .)
    COMP            reduce using rule 25 (factorVar -> VAR .)
    QUESTION        reduce using rule 25 (factorVar -> VAR .)
    BOOL_OP         reduce using rule 25 (factorVar -> VAR .)
    AOEQUAL         reduce using rule 25 (factorVar -> VAR .)
    EQUAL           reduce using rule 25 (factorVar -> VAR .)
    COMMA           reduce using rule 25 (factorVar -> VAR .)
    SEMICOLON       reduce using rule 25 (factorVar -> VAR .)
    RPAREN          reduce using rule 25 (factorVar -> VAR .)
    RBRACKET        reduce using rule 25 (factorVar -> VAR .)
    RBRACE          reduce using rule 25 (factorVar -> VAR .)


state 20

    (23) factorExp -> LPAREN . expression RPAREN
    (10) expression -> . expressionAssign
    (41) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (42) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (43) expressionAssign -> . expressionTernaryCond
    (44) expressionAssign -> . expressionTernaryCond EQUAL LBRACE reg_items RBRACE
    (55) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (56) expressionTernaryCond -> . expressionBoolOp
    (29) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (30) expressionBoolOp -> . expressionComp
    (32) expressionComp -> . expressionComp COMP aritExp
    (33) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (31) unaryExp -> . NOT unaryExp
    (34) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . LPAREN expression RPAREN
    (24) factorExp -> . expressionFunction
    (26) factorNumExp -> . NUMBER
    (27) bool_atom -> . TRUE
    (28) bool_atom -> . FALSE
    (38) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (39) expressionVectorAt -> . expressionVector
    (40) expressionVectorAt -> . factorVar
    (60) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (61) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (62) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (63) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . PRINT LPAREN expression RPAREN
    (65) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (35) expressionVector -> . LBRACKET vector_items RBRACKET
    (25) factorVar -> . VAR

    AO              shift and go to state 2
    DOUBLE_AO       shift and go to state 37
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 8
    FALSE           shift and go to state 10
    MULTIPLICACIONESCALAR shift and go to state 9
    CAPITALIZAR     shift and go to state 6
    COLINEALES      shift and go to state 35
    PRINT           shift and go to state 13
    LENGTH          shift and go to state 5
    LBRACKET        shift and go to state 22
    VAR             shift and go to state 19

    expressionTernaryCond          shift and go to state 1
    unaryExp                       shift and go to state 30
    unaryExp2                      shift and go to state 21
    expressionBoolOp               shift and go to state 31
    factorVar                      shift and go to state 3
    bool_atom                      shift and go to state 34
    factorExp                      shift and go to state 4
    expressionVector               shift and go to state 26
    expressionComp                 shift and go to state 24
    factorNumExp                   shift and go to state 14
    expression                     shift and go to state 55
    expressionVectorAt             shift and go to state 39
    aritExp                        shift and go to state 17
    expressionFunction             shift and go to state 18
    expressionAssign               shift and go to state 43

state 21

    (17) unaryExp -> unaryExp2 .
    (18) unaryExp2 -> unaryExp2 . DOUBLE_AO

    AO              reduce using rule 17 (unaryExp -> unaryExp2 .)
    COMP            reduce using rule 17 (unaryExp -> unaryExp2 .)
    QUESTION        reduce using rule 17 (unaryExp -> unaryExp2 .)
    BOOL_OP         reduce using rule 17 (unaryExp -> unaryExp2 .)
    AOEQUAL         reduce using rule 17 (unaryExp -> unaryExp2 .)
    EQUAL           reduce using rule 17 (unaryExp -> unaryExp2 .)
    SEMICOLON       reduce using rule 17 (unaryExp -> unaryExp2 .)
    RPAREN          reduce using rule 17 (unaryExp -> unaryExp2 .)
    COMMA           reduce using rule 17 (unaryExp -> unaryExp2 .)
    RBRACKET        reduce using rule 17 (unaryExp -> unaryExp2 .)
    COLON           reduce using rule 17 (unaryExp -> unaryExp2 .)
    RBRACE          reduce using rule 17 (unaryExp -> unaryExp2 .)
    DOUBLE_AO       shift and go to state 56


state 22

    (35) expressionVector -> LBRACKET . vector_items RBRACKET
    (36) vector_items -> . expression COMMA vector_items
    (37) vector_items -> . expression
    (10) expression -> . expressionAssign
    (41) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (42) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (43) expressionAssign -> . expressionTernaryCond
    (44) expressionAssign -> . expressionTernaryCond EQUAL LBRACE reg_items RBRACE
    (55) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (56) expressionTernaryCond -> . expressionBoolOp
    (29) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (30) expressionBoolOp -> . expressionComp
    (32) expressionComp -> . expressionComp COMP aritExp
    (33) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (31) unaryExp -> . NOT unaryExp
    (34) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . LPAREN expression RPAREN
    (24) factorExp -> . expressionFunction
    (26) factorNumExp -> . NUMBER
    (27) bool_atom -> . TRUE
    (28) bool_atom -> . FALSE
    (38) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (39) expressionVectorAt -> . expressionVector
    (40) expressionVectorAt -> . factorVar
    (60) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (61) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (62) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (63) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . PRINT LPAREN expression RPAREN
    (65) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (35) expressionVector -> . LBRACKET vector_items RBRACKET
    (25) factorVar -> . VAR

    AO              shift and go to state 2
    DOUBLE_AO       shift and go to state 37
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 8
    FALSE           shift and go to state 10
    MULTIPLICACIONESCALAR shift and go to state 9
    CAPITALIZAR     shift and go to state 6
    COLINEALES      shift and go to state 35
    PRINT           shift and go to state 13
    LENGTH          shift and go to state 5
    LBRACKET        shift and go to state 22
    VAR             shift and go to state 19

    expressionTernaryCond          shift and go to state 1
    unaryExp                       shift and go to state 30
    unaryExp2                      shift and go to state 21
    expressionBoolOp               shift and go to state 31
    factorVar                      shift and go to state 3
    bool_atom                      shift and go to state 34
    vector_items                   shift and go to state 57
    factorExp                      shift and go to state 4
    expressionVector               shift and go to state 26
    expressionComp                 shift and go to state 24
    factorNumExp                   shift and go to state 14
    expression                     shift and go to state 58
    expressionVectorAt             shift and go to state 39
    aritExp                        shift and go to state 17
    expressionFunction             shift and go to state 18
    expressionAssign               shift and go to state 43

state 23

    (58) for -> FOR . LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement

    LPAREN          shift and go to state 59


state 24

    (30) expressionBoolOp -> expressionComp .
    (32) expressionComp -> expressionComp . COMP aritExp

    QUESTION        reduce using rule 30 (expressionBoolOp -> expressionComp .)
    BOOL_OP         reduce using rule 30 (expressionBoolOp -> expressionComp .)
    AOEQUAL         reduce using rule 30 (expressionBoolOp -> expressionComp .)
    EQUAL           reduce using rule 30 (expressionBoolOp -> expressionComp .)
    COMMA           reduce using rule 30 (expressionBoolOp -> expressionComp .)
    COLON           reduce using rule 30 (expressionBoolOp -> expressionComp .)
    RPAREN          reduce using rule 30 (expressionBoolOp -> expressionComp .)
    SEMICOLON       reduce using rule 30 (expressionBoolOp -> expressionComp .)
    RBRACKET        reduce using rule 30 (expressionBoolOp -> expressionComp .)
    RBRACE          reduce using rule 30 (expressionBoolOp -> expressionComp .)
    COMP            shift and go to state 60


state 25

    (1) code -> statement . code
    (1) code -> . statement code
    (2) code -> . COMMENT code
    (3) code -> .
    (4) statement -> . expression SEMICOLON
    (5) statement -> . block
    (6) statement -> . if
    (7) statement -> . while
    (8) statement -> . for
    (9) statement -> . do_while
    (10) expression -> . expressionAssign
    (49) block -> . LBRACE code RBRACE
    (52) if -> . IF LPAREN expression RPAREN singleStatement else
    (57) while -> . WHILE LPAREN expression RPAREN singleStatement
    (58) for -> . FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement
    (59) do_while -> . DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON
    (41) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (42) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (43) expressionAssign -> . expressionTernaryCond
    (44) expressionAssign -> . expressionTernaryCond EQUAL LBRACE reg_items RBRACE
    (55) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (56) expressionTernaryCond -> . expressionBoolOp
    (29) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (30) expressionBoolOp -> . expressionComp
    (32) expressionComp -> . expressionComp COMP aritExp
    (33) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (31) unaryExp -> . NOT unaryExp
    (34) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . LPAREN expression RPAREN
    (24) factorExp -> . expressionFunction
    (26) factorNumExp -> . NUMBER
    (27) bool_atom -> . TRUE
    (28) bool_atom -> . FALSE
    (38) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (39) expressionVectorAt -> . expressionVector
    (40) expressionVectorAt -> . factorVar
    (60) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (61) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (62) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (63) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . PRINT LPAREN expression RPAREN
    (65) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (35) expressionVector -> . LBRACKET vector_items RBRACKET
    (25) factorVar -> . VAR

    COMMENT         shift and go to state 12
    $end            reduce using rule 3 (code -> .)
    RBRACE          reduce using rule 3 (code -> .)
    LBRACE          shift and go to state 27
    IF              shift and go to state 36
    WHILE           shift and go to state 40
    FOR             shift and go to state 23
    DO              shift and go to state 38
    AO              shift and go to state 2
    DOUBLE_AO       shift and go to state 37
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 8
    FALSE           shift and go to state 10
    MULTIPLICACIONESCALAR shift and go to state 9
    CAPITALIZAR     shift and go to state 6
    COLINEALES      shift and go to state 35
    PRINT           shift and go to state 13
    LENGTH          shift and go to state 5
    LBRACKET        shift and go to state 22
    VAR             shift and go to state 19

    expressionTernaryCond          shift and go to state 1
    unaryExp2                      shift and go to state 21
    expressionComp                 shift and go to state 24
    factorVar                      shift and go to state 3
    factorExp                      shift and go to state 4
    expressionVector               shift and go to state 26
    if                             shift and go to state 28
    block                          shift and go to state 29
    unaryExp                       shift and go to state 30
    statement                      shift and go to state 25
    expressionBoolOp               shift and go to state 31
    while                          shift and go to state 32
    bool_atom                      shift and go to state 34
    for                            shift and go to state 41
    expressionFunction             shift and go to state 18
    factorNumExp                   shift and go to state 14
    do_while                       shift and go to state 15
    expression                     shift and go to state 16
    expressionVectorAt             shift and go to state 39
    aritExp                        shift and go to state 17
    code                           shift and go to state 61
    expressionAssign               shift and go to state 43

state 26

    (39) expressionVectorAt -> expressionVector .

    LBRACKET        reduce using rule 39 (expressionVectorAt -> expressionVector .)
    DOUBLE_AO       reduce using rule 39 (expressionVectorAt -> expressionVector .)
    AO              reduce using rule 39 (expressionVectorAt -> expressionVector .)
    COMP            reduce using rule 39 (expressionVectorAt -> expressionVector .)
    QUESTION        reduce using rule 39 (expressionVectorAt -> expressionVector .)
    BOOL_OP         reduce using rule 39 (expressionVectorAt -> expressionVector .)
    AOEQUAL         reduce using rule 39 (expressionVectorAt -> expressionVector .)
    EQUAL           reduce using rule 39 (expressionVectorAt -> expressionVector .)
    RPAREN          reduce using rule 39 (expressionVectorAt -> expressionVector .)
    SEMICOLON       reduce using rule 39 (expressionVectorAt -> expressionVector .)
    RBRACKET        reduce using rule 39 (expressionVectorAt -> expressionVector .)
    COMMA           reduce using rule 39 (expressionVectorAt -> expressionVector .)
    COLON           reduce using rule 39 (expressionVectorAt -> expressionVector .)
    RBRACE          reduce using rule 39 (expressionVectorAt -> expressionVector .)


state 27

    (49) block -> LBRACE . code RBRACE
    (1) code -> . statement code
    (2) code -> . COMMENT code
    (3) code -> .
    (4) statement -> . expression SEMICOLON
    (5) statement -> . block
    (6) statement -> . if
    (7) statement -> . while
    (8) statement -> . for
    (9) statement -> . do_while
    (10) expression -> . expressionAssign
    (49) block -> . LBRACE code RBRACE
    (52) if -> . IF LPAREN expression RPAREN singleStatement else
    (57) while -> . WHILE LPAREN expression RPAREN singleStatement
    (58) for -> . FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement
    (59) do_while -> . DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON
    (41) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (42) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (43) expressionAssign -> . expressionTernaryCond
    (44) expressionAssign -> . expressionTernaryCond EQUAL LBRACE reg_items RBRACE
    (55) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (56) expressionTernaryCond -> . expressionBoolOp
    (29) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (30) expressionBoolOp -> . expressionComp
    (32) expressionComp -> . expressionComp COMP aritExp
    (33) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (31) unaryExp -> . NOT unaryExp
    (34) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . LPAREN expression RPAREN
    (24) factorExp -> . expressionFunction
    (26) factorNumExp -> . NUMBER
    (27) bool_atom -> . TRUE
    (28) bool_atom -> . FALSE
    (38) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (39) expressionVectorAt -> . expressionVector
    (40) expressionVectorAt -> . factorVar
    (60) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (61) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (62) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (63) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . PRINT LPAREN expression RPAREN
    (65) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (35) expressionVector -> . LBRACKET vector_items RBRACKET
    (25) factorVar -> . VAR

    COMMENT         shift and go to state 12
    RBRACE          reduce using rule 3 (code -> .)
    LBRACE          shift and go to state 27
    IF              shift and go to state 36
    WHILE           shift and go to state 40
    FOR             shift and go to state 23
    DO              shift and go to state 38
    AO              shift and go to state 2
    DOUBLE_AO       shift and go to state 37
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 8
    FALSE           shift and go to state 10
    MULTIPLICACIONESCALAR shift and go to state 9
    CAPITALIZAR     shift and go to state 6
    COLINEALES      shift and go to state 35
    PRINT           shift and go to state 13
    LENGTH          shift and go to state 5
    LBRACKET        shift and go to state 22
    VAR             shift and go to state 19

    expressionTernaryCond          shift and go to state 1
    unaryExp2                      shift and go to state 21
    expressionComp                 shift and go to state 24
    factorVar                      shift and go to state 3
    factorExp                      shift and go to state 4
    expressionVector               shift and go to state 26
    if                             shift and go to state 28
    block                          shift and go to state 29
    unaryExp                       shift and go to state 30
    statement                      shift and go to state 25
    expressionBoolOp               shift and go to state 31
    while                          shift and go to state 32
    bool_atom                      shift and go to state 34
    for                            shift and go to state 41
    expressionFunction             shift and go to state 18
    factorNumExp                   shift and go to state 14
    do_while                       shift and go to state 15
    expression                     shift and go to state 16
    expressionVectorAt             shift and go to state 39
    aritExp                        shift and go to state 17
    code                           shift and go to state 62
    expressionAssign               shift and go to state 43

state 28

    (6) statement -> if .

    WHILE           reduce using rule 6 (statement -> if .)
    ELSE            reduce using rule 6 (statement -> if .)
    COMMENT         reduce using rule 6 (statement -> if .)
    LBRACE          reduce using rule 6 (statement -> if .)
    IF              reduce using rule 6 (statement -> if .)
    FOR             reduce using rule 6 (statement -> if .)
    DO              reduce using rule 6 (statement -> if .)
    AO              reduce using rule 6 (statement -> if .)
    DOUBLE_AO       reduce using rule 6 (statement -> if .)
    NOT             reduce using rule 6 (statement -> if .)
    STRING          reduce using rule 6 (statement -> if .)
    LPAREN          reduce using rule 6 (statement -> if .)
    NUMBER          reduce using rule 6 (statement -> if .)
    TRUE            reduce using rule 6 (statement -> if .)
    FALSE           reduce using rule 6 (statement -> if .)
    MULTIPLICACIONESCALAR reduce using rule 6 (statement -> if .)
    CAPITALIZAR     reduce using rule 6 (statement -> if .)
    COLINEALES      reduce using rule 6 (statement -> if .)
    PRINT           reduce using rule 6 (statement -> if .)
    LENGTH          reduce using rule 6 (statement -> if .)
    LBRACKET        reduce using rule 6 (statement -> if .)
    VAR             reduce using rule 6 (statement -> if .)
    $end            reduce using rule 6 (statement -> if .)
    RBRACE          reduce using rule 6 (statement -> if .)


state 29

    (5) statement -> block .

    WHILE           reduce using rule 5 (statement -> block .)
    ELSE            reduce using rule 5 (statement -> block .)
    COMMENT         reduce using rule 5 (statement -> block .)
    LBRACE          reduce using rule 5 (statement -> block .)
    IF              reduce using rule 5 (statement -> block .)
    FOR             reduce using rule 5 (statement -> block .)
    DO              reduce using rule 5 (statement -> block .)
    AO              reduce using rule 5 (statement -> block .)
    DOUBLE_AO       reduce using rule 5 (statement -> block .)
    NOT             reduce using rule 5 (statement -> block .)
    STRING          reduce using rule 5 (statement -> block .)
    LPAREN          reduce using rule 5 (statement -> block .)
    NUMBER          reduce using rule 5 (statement -> block .)
    TRUE            reduce using rule 5 (statement -> block .)
    FALSE           reduce using rule 5 (statement -> block .)
    MULTIPLICACIONESCALAR reduce using rule 5 (statement -> block .)
    CAPITALIZAR     reduce using rule 5 (statement -> block .)
    COLINEALES      reduce using rule 5 (statement -> block .)
    PRINT           reduce using rule 5 (statement -> block .)
    LENGTH          reduce using rule 5 (statement -> block .)
    LBRACKET        reduce using rule 5 (statement -> block .)
    VAR             reduce using rule 5 (statement -> block .)
    $end            reduce using rule 5 (statement -> block .)
    RBRACE          reduce using rule 5 (statement -> block .)


state 30

    (14) aritExp -> unaryExp .

    AO              reduce using rule 14 (aritExp -> unaryExp .)
    COMP            reduce using rule 14 (aritExp -> unaryExp .)
    QUESTION        reduce using rule 14 (aritExp -> unaryExp .)
    BOOL_OP         reduce using rule 14 (aritExp -> unaryExp .)
    AOEQUAL         reduce using rule 14 (aritExp -> unaryExp .)
    EQUAL           reduce using rule 14 (aritExp -> unaryExp .)
    SEMICOLON       reduce using rule 14 (aritExp -> unaryExp .)
    RPAREN          reduce using rule 14 (aritExp -> unaryExp .)
    COMMA           reduce using rule 14 (aritExp -> unaryExp .)
    RBRACKET        reduce using rule 14 (aritExp -> unaryExp .)
    COLON           reduce using rule 14 (aritExp -> unaryExp .)
    RBRACE          reduce using rule 14 (aritExp -> unaryExp .)


state 31

    (55) expressionTernaryCond -> expressionBoolOp . QUESTION expression COLON expression
    (56) expressionTernaryCond -> expressionBoolOp .
    (29) expressionBoolOp -> expressionBoolOp . BOOL_OP expressionComp

    QUESTION        shift and go to state 64
    AOEQUAL         reduce using rule 56 (expressionTernaryCond -> expressionBoolOp .)
    EQUAL           reduce using rule 56 (expressionTernaryCond -> expressionBoolOp .)
    SEMICOLON       reduce using rule 56 (expressionTernaryCond -> expressionBoolOp .)
    RPAREN          reduce using rule 56 (expressionTernaryCond -> expressionBoolOp .)
    COMMA           reduce using rule 56 (expressionTernaryCond -> expressionBoolOp .)
    RBRACKET        reduce using rule 56 (expressionTernaryCond -> expressionBoolOp .)
    COLON           reduce using rule 56 (expressionTernaryCond -> expressionBoolOp .)
    RBRACE          reduce using rule 56 (expressionTernaryCond -> expressionBoolOp .)
    BOOL_OP         shift and go to state 63


state 32

    (7) statement -> while .

    WHILE           reduce using rule 7 (statement -> while .)
    ELSE            reduce using rule 7 (statement -> while .)
    COMMENT         reduce using rule 7 (statement -> while .)
    LBRACE          reduce using rule 7 (statement -> while .)
    IF              reduce using rule 7 (statement -> while .)
    FOR             reduce using rule 7 (statement -> while .)
    DO              reduce using rule 7 (statement -> while .)
    AO              reduce using rule 7 (statement -> while .)
    DOUBLE_AO       reduce using rule 7 (statement -> while .)
    NOT             reduce using rule 7 (statement -> while .)
    STRING          reduce using rule 7 (statement -> while .)
    LPAREN          reduce using rule 7 (statement -> while .)
    NUMBER          reduce using rule 7 (statement -> while .)
    TRUE            reduce using rule 7 (statement -> while .)
    FALSE           reduce using rule 7 (statement -> while .)
    MULTIPLICACIONESCALAR reduce using rule 7 (statement -> while .)
    CAPITALIZAR     reduce using rule 7 (statement -> while .)
    COLINEALES      reduce using rule 7 (statement -> while .)
    PRINT           reduce using rule 7 (statement -> while .)
    LENGTH          reduce using rule 7 (statement -> while .)
    LBRACKET        reduce using rule 7 (statement -> while .)
    VAR             reduce using rule 7 (statement -> while .)
    $end            reduce using rule 7 (statement -> while .)
    RBRACE          reduce using rule 7 (statement -> while .)


state 33

    (26) factorNumExp -> NUMBER .

    DOUBLE_AO       reduce using rule 26 (factorNumExp -> NUMBER .)
    AO              reduce using rule 26 (factorNumExp -> NUMBER .)
    COMP            reduce using rule 26 (factorNumExp -> NUMBER .)
    QUESTION        reduce using rule 26 (factorNumExp -> NUMBER .)
    BOOL_OP         reduce using rule 26 (factorNumExp -> NUMBER .)
    AOEQUAL         reduce using rule 26 (factorNumExp -> NUMBER .)
    EQUAL           reduce using rule 26 (factorNumExp -> NUMBER .)
    RPAREN          reduce using rule 26 (factorNumExp -> NUMBER .)
    SEMICOLON       reduce using rule 26 (factorNumExp -> NUMBER .)
    COMMA           reduce using rule 26 (factorNumExp -> NUMBER .)
    RBRACKET        reduce using rule 26 (factorNumExp -> NUMBER .)
    COLON           reduce using rule 26 (factorNumExp -> NUMBER .)
    RBRACE          reduce using rule 26 (factorNumExp -> NUMBER .)


state 34

    (21) factorExp -> bool_atom .

    DOUBLE_AO       reduce using rule 21 (factorExp -> bool_atom .)
    AO              reduce using rule 21 (factorExp -> bool_atom .)
    COMP            reduce using rule 21 (factorExp -> bool_atom .)
    QUESTION        reduce using rule 21 (factorExp -> bool_atom .)
    BOOL_OP         reduce using rule 21 (factorExp -> bool_atom .)
    AOEQUAL         reduce using rule 21 (factorExp -> bool_atom .)
    EQUAL           reduce using rule 21 (factorExp -> bool_atom .)
    RPAREN          reduce using rule 21 (factorExp -> bool_atom .)
    SEMICOLON       reduce using rule 21 (factorExp -> bool_atom .)
    COMMA           reduce using rule 21 (factorExp -> bool_atom .)
    RBRACE          reduce using rule 21 (factorExp -> bool_atom .)
    RBRACKET        reduce using rule 21 (factorExp -> bool_atom .)
    COLON           reduce using rule 21 (factorExp -> bool_atom .)


state 35

    (63) expressionFunction -> COLINEALES . LPAREN expression COMMA expression RPAREN

    LPAREN          shift and go to state 65


state 36

    (52) if -> IF . LPAREN expression RPAREN singleStatement else

    LPAREN          shift and go to state 66


state 37

    (16) unaryExp -> DOUBLE_AO . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (31) unaryExp -> . NOT unaryExp
    (34) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . LPAREN expression RPAREN
    (24) factorExp -> . expressionFunction
    (26) factorNumExp -> . NUMBER
    (27) bool_atom -> . TRUE
    (28) bool_atom -> . FALSE
    (38) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (39) expressionVectorAt -> . expressionVector
    (40) expressionVectorAt -> . factorVar
    (60) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (61) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (62) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (63) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . PRINT LPAREN expression RPAREN
    (65) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (35) expressionVector -> . LBRACKET vector_items RBRACKET
    (25) factorVar -> . VAR

    AO              shift and go to state 2
    DOUBLE_AO       shift and go to state 37
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 8
    FALSE           shift and go to state 10
    MULTIPLICACIONESCALAR shift and go to state 9
    CAPITALIZAR     shift and go to state 6
    COLINEALES      shift and go to state 35
    PRINT           shift and go to state 13
    LENGTH          shift and go to state 5
    LBRACKET        shift and go to state 22
    VAR             shift and go to state 19

    unaryExp                       shift and go to state 67
    unaryExp2                      shift and go to state 21
    factorNumExp                   shift and go to state 14
    bool_atom                      shift and go to state 34
    expressionVectorAt             shift and go to state 39
    factorExp                      shift and go to state 4
    expressionVector               shift and go to state 26
    expressionFunction             shift and go to state 18
    factorVar                      shift and go to state 3

state 38

    (59) do_while -> DO . singleStatement WHILE LPAREN expression RPAREN SEMICOLON
    (50) singleStatement -> . COMMENT singleStatement
    (51) singleStatement -> . statement
    (4) statement -> . expression SEMICOLON
    (5) statement -> . block
    (6) statement -> . if
    (7) statement -> . while
    (8) statement -> . for
    (9) statement -> . do_while
    (10) expression -> . expressionAssign
    (49) block -> . LBRACE code RBRACE
    (52) if -> . IF LPAREN expression RPAREN singleStatement else
    (57) while -> . WHILE LPAREN expression RPAREN singleStatement
    (58) for -> . FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement
    (59) do_while -> . DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON
    (41) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (42) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (43) expressionAssign -> . expressionTernaryCond
    (44) expressionAssign -> . expressionTernaryCond EQUAL LBRACE reg_items RBRACE
    (55) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (56) expressionTernaryCond -> . expressionBoolOp
    (29) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (30) expressionBoolOp -> . expressionComp
    (32) expressionComp -> . expressionComp COMP aritExp
    (33) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (31) unaryExp -> . NOT unaryExp
    (34) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . LPAREN expression RPAREN
    (24) factorExp -> . expressionFunction
    (26) factorNumExp -> . NUMBER
    (27) bool_atom -> . TRUE
    (28) bool_atom -> . FALSE
    (38) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (39) expressionVectorAt -> . expressionVector
    (40) expressionVectorAt -> . factorVar
    (60) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (61) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (62) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (63) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . PRINT LPAREN expression RPAREN
    (65) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (35) expressionVector -> . LBRACKET vector_items RBRACKET
    (25) factorVar -> . VAR

    COMMENT         shift and go to state 68
    LBRACE          shift and go to state 27
    IF              shift and go to state 36
    WHILE           shift and go to state 40
    FOR             shift and go to state 23
    DO              shift and go to state 38
    AO              shift and go to state 2
    DOUBLE_AO       shift and go to state 37
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 8
    FALSE           shift and go to state 10
    MULTIPLICACIONESCALAR shift and go to state 9
    CAPITALIZAR     shift and go to state 6
    COLINEALES      shift and go to state 35
    PRINT           shift and go to state 13
    LENGTH          shift and go to state 5
    LBRACKET        shift and go to state 22
    VAR             shift and go to state 19

    expressionTernaryCond          shift and go to state 1
    unaryExp2                      shift and go to state 21
    expressionComp                 shift and go to state 24
    factorVar                      shift and go to state 3
    factorExp                      shift and go to state 4
    expressionVector               shift and go to state 26
    if                             shift and go to state 28
    block                          shift and go to state 29
    unaryExp                       shift and go to state 30
    statement                      shift and go to state 70
    expressionBoolOp               shift and go to state 31
    while                          shift and go to state 32
    bool_atom                      shift and go to state 34
    for                            shift and go to state 41
    expressionFunction             shift and go to state 18
    factorNumExp                   shift and go to state 14
    do_while                       shift and go to state 15
    expression                     shift and go to state 16
    singleStatement                shift and go to state 69
    expressionVectorAt             shift and go to state 39
    aritExp                        shift and go to state 17
    expressionAssign               shift and go to state 43

state 39

    (22) factorExp -> expressionVectorAt .
    (38) expressionVectorAt -> expressionVectorAt . LBRACKET expression RBRACKET

    DOUBLE_AO       reduce using rule 22 (factorExp -> expressionVectorAt .)
    AO              reduce using rule 22 (factorExp -> expressionVectorAt .)
    COMP            reduce using rule 22 (factorExp -> expressionVectorAt .)
    QUESTION        reduce using rule 22 (factorExp -> expressionVectorAt .)
    BOOL_OP         reduce using rule 22 (factorExp -> expressionVectorAt .)
    AOEQUAL         reduce using rule 22 (factorExp -> expressionVectorAt .)
    EQUAL           reduce using rule 22 (factorExp -> expressionVectorAt .)
    RPAREN          reduce using rule 22 (factorExp -> expressionVectorAt .)
    SEMICOLON       reduce using rule 22 (factorExp -> expressionVectorAt .)
    COMMA           reduce using rule 22 (factorExp -> expressionVectorAt .)
    RBRACE          reduce using rule 22 (factorExp -> expressionVectorAt .)
    RBRACKET        reduce using rule 22 (factorExp -> expressionVectorAt .)
    COLON           reduce using rule 22 (factorExp -> expressionVectorAt .)
    LBRACKET        shift and go to state 71


state 40

    (57) while -> WHILE . LPAREN expression RPAREN singleStatement

    LPAREN          shift and go to state 72


state 41

    (8) statement -> for .

    WHILE           reduce using rule 8 (statement -> for .)
    ELSE            reduce using rule 8 (statement -> for .)
    COMMENT         reduce using rule 8 (statement -> for .)
    LBRACE          reduce using rule 8 (statement -> for .)
    IF              reduce using rule 8 (statement -> for .)
    FOR             reduce using rule 8 (statement -> for .)
    DO              reduce using rule 8 (statement -> for .)
    AO              reduce using rule 8 (statement -> for .)
    DOUBLE_AO       reduce using rule 8 (statement -> for .)
    NOT             reduce using rule 8 (statement -> for .)
    STRING          reduce using rule 8 (statement -> for .)
    LPAREN          reduce using rule 8 (statement -> for .)
    NUMBER          reduce using rule 8 (statement -> for .)
    TRUE            reduce using rule 8 (statement -> for .)
    FALSE           reduce using rule 8 (statement -> for .)
    MULTIPLICACIONESCALAR reduce using rule 8 (statement -> for .)
    CAPITALIZAR     reduce using rule 8 (statement -> for .)
    COLINEALES      reduce using rule 8 (statement -> for .)
    PRINT           reduce using rule 8 (statement -> for .)
    LENGTH          reduce using rule 8 (statement -> for .)
    LBRACKET        reduce using rule 8 (statement -> for .)
    VAR             reduce using rule 8 (statement -> for .)
    $end            reduce using rule 8 (statement -> for .)
    RBRACE          reduce using rule 8 (statement -> for .)


state 42

    (0) S' -> code .



state 43

    (10) expression -> expressionAssign .

    AOEQUAL         reduce using rule 10 (expression -> expressionAssign .)
    EQUAL           reduce using rule 10 (expression -> expressionAssign .)
    SEMICOLON       reduce using rule 10 (expression -> expressionAssign .)
    RPAREN          reduce using rule 10 (expression -> expressionAssign .)
    COMMA           reduce using rule 10 (expression -> expressionAssign .)
    RBRACKET        reduce using rule 10 (expression -> expressionAssign .)
    COLON           reduce using rule 10 (expression -> expressionAssign .)
    RBRACE          reduce using rule 10 (expression -> expressionAssign .)


state 44

    (41) expressionAssign -> expressionTernaryCond AOEQUAL . expressionAssign
    (41) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (42) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (43) expressionAssign -> . expressionTernaryCond
    (44) expressionAssign -> . expressionTernaryCond EQUAL LBRACE reg_items RBRACE
    (55) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (56) expressionTernaryCond -> . expressionBoolOp
    (29) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (30) expressionBoolOp -> . expressionComp
    (32) expressionComp -> . expressionComp COMP aritExp
    (33) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (31) unaryExp -> . NOT unaryExp
    (34) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . LPAREN expression RPAREN
    (24) factorExp -> . expressionFunction
    (26) factorNumExp -> . NUMBER
    (27) bool_atom -> . TRUE
    (28) bool_atom -> . FALSE
    (38) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (39) expressionVectorAt -> . expressionVector
    (40) expressionVectorAt -> . factorVar
    (60) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (61) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (62) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (63) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . PRINT LPAREN expression RPAREN
    (65) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (35) expressionVector -> . LBRACKET vector_items RBRACKET
    (25) factorVar -> . VAR

    AO              shift and go to state 2
    DOUBLE_AO       shift and go to state 37
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 8
    FALSE           shift and go to state 10
    MULTIPLICACIONESCALAR shift and go to state 9
    CAPITALIZAR     shift and go to state 6
    COLINEALES      shift and go to state 35
    PRINT           shift and go to state 13
    LENGTH          shift and go to state 5
    LBRACKET        shift and go to state 22
    VAR             shift and go to state 19

    expressionTernaryCond          shift and go to state 1
    unaryExp                       shift and go to state 30
    unaryExp2                      shift and go to state 21
    expressionBoolOp               shift and go to state 31
    factorVar                      shift and go to state 3
    bool_atom                      shift and go to state 34
    factorExp                      shift and go to state 4
    expressionVector               shift and go to state 26
    expressionComp                 shift and go to state 24
    factorNumExp                   shift and go to state 14
    expressionVectorAt             shift and go to state 39
    aritExp                        shift and go to state 17
    expressionFunction             shift and go to state 18
    expressionAssign               shift and go to state 73

state 45

    (42) expressionAssign -> expressionTernaryCond EQUAL . expressionAssign
    (44) expressionAssign -> expressionTernaryCond EQUAL . LBRACE reg_items RBRACE
    (41) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (42) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (43) expressionAssign -> . expressionTernaryCond
    (44) expressionAssign -> . expressionTernaryCond EQUAL LBRACE reg_items RBRACE
    (55) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (56) expressionTernaryCond -> . expressionBoolOp
    (29) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (30) expressionBoolOp -> . expressionComp
    (32) expressionComp -> . expressionComp COMP aritExp
    (33) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (31) unaryExp -> . NOT unaryExp
    (34) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . LPAREN expression RPAREN
    (24) factorExp -> . expressionFunction
    (26) factorNumExp -> . NUMBER
    (27) bool_atom -> . TRUE
    (28) bool_atom -> . FALSE
    (38) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (39) expressionVectorAt -> . expressionVector
    (40) expressionVectorAt -> . factorVar
    (60) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (61) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (62) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (63) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . PRINT LPAREN expression RPAREN
    (65) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (35) expressionVector -> . LBRACKET vector_items RBRACKET
    (25) factorVar -> . VAR

    LBRACE          shift and go to state 74
    AO              shift and go to state 2
    DOUBLE_AO       shift and go to state 37
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 8
    FALSE           shift and go to state 10
    MULTIPLICACIONESCALAR shift and go to state 9
    CAPITALIZAR     shift and go to state 6
    COLINEALES      shift and go to state 35
    PRINT           shift and go to state 13
    LENGTH          shift and go to state 5
    LBRACKET        shift and go to state 22
    VAR             shift and go to state 19

    expressionTernaryCond          shift and go to state 1
    unaryExp                       shift and go to state 30
    unaryExp2                      shift and go to state 21
    expressionBoolOp               shift and go to state 31
    factorVar                      shift and go to state 3
    bool_atom                      shift and go to state 34
    factorExp                      shift and go to state 4
    expressionVector               shift and go to state 26
    expressionComp                 shift and go to state 24
    factorNumExp                   shift and go to state 14
    expressionVectorAt             shift and go to state 39
    aritExp                        shift and go to state 17
    expressionFunction             shift and go to state 18
    expressionAssign               shift and go to state 75

state 46

    (15) unaryExp -> AO unaryExp .

    AO              reduce using rule 15 (unaryExp -> AO unaryExp .)
    COMP            reduce using rule 15 (unaryExp -> AO unaryExp .)
    QUESTION        reduce using rule 15 (unaryExp -> AO unaryExp .)
    BOOL_OP         reduce using rule 15 (unaryExp -> AO unaryExp .)
    AOEQUAL         reduce using rule 15 (unaryExp -> AO unaryExp .)
    EQUAL           reduce using rule 15 (unaryExp -> AO unaryExp .)
    SEMICOLON       reduce using rule 15 (unaryExp -> AO unaryExp .)
    RPAREN          reduce using rule 15 (unaryExp -> AO unaryExp .)
    COMMA           reduce using rule 15 (unaryExp -> AO unaryExp .)
    RBRACKET        reduce using rule 15 (unaryExp -> AO unaryExp .)
    COLON           reduce using rule 15 (unaryExp -> AO unaryExp .)
    RBRACE          reduce using rule 15 (unaryExp -> AO unaryExp .)


state 47

    (65) expressionFunction -> LENGTH LPAREN . expression RPAREN
    (10) expression -> . expressionAssign
    (41) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (42) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (43) expressionAssign -> . expressionTernaryCond
    (44) expressionAssign -> . expressionTernaryCond EQUAL LBRACE reg_items RBRACE
    (55) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (56) expressionTernaryCond -> . expressionBoolOp
    (29) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (30) expressionBoolOp -> . expressionComp
    (32) expressionComp -> . expressionComp COMP aritExp
    (33) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (31) unaryExp -> . NOT unaryExp
    (34) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . LPAREN expression RPAREN
    (24) factorExp -> . expressionFunction
    (26) factorNumExp -> . NUMBER
    (27) bool_atom -> . TRUE
    (28) bool_atom -> . FALSE
    (38) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (39) expressionVectorAt -> . expressionVector
    (40) expressionVectorAt -> . factorVar
    (60) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (61) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (62) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (63) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . PRINT LPAREN expression RPAREN
    (65) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (35) expressionVector -> . LBRACKET vector_items RBRACKET
    (25) factorVar -> . VAR

    AO              shift and go to state 2
    DOUBLE_AO       shift and go to state 37
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 8
    FALSE           shift and go to state 10
    MULTIPLICACIONESCALAR shift and go to state 9
    CAPITALIZAR     shift and go to state 6
    COLINEALES      shift and go to state 35
    PRINT           shift and go to state 13
    LENGTH          shift and go to state 5
    LBRACKET        shift and go to state 22
    VAR             shift and go to state 19

    expressionTernaryCond          shift and go to state 1
    unaryExp                       shift and go to state 30
    unaryExp2                      shift and go to state 21
    expressionBoolOp               shift and go to state 31
    factorVar                      shift and go to state 3
    bool_atom                      shift and go to state 34
    factorExp                      shift and go to state 4
    expressionVector               shift and go to state 26
    expressionComp                 shift and go to state 24
    factorNumExp                   shift and go to state 14
    expression                     shift and go to state 76
    expressionVectorAt             shift and go to state 39
    aritExp                        shift and go to state 17
    expressionFunction             shift and go to state 18
    expressionAssign               shift and go to state 43

state 48

    (62) expressionFunction -> CAPITALIZAR LPAREN . expression RPAREN
    (10) expression -> . expressionAssign
    (41) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (42) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (43) expressionAssign -> . expressionTernaryCond
    (44) expressionAssign -> . expressionTernaryCond EQUAL LBRACE reg_items RBRACE
    (55) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (56) expressionTernaryCond -> . expressionBoolOp
    (29) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (30) expressionBoolOp -> . expressionComp
    (32) expressionComp -> . expressionComp COMP aritExp
    (33) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (31) unaryExp -> . NOT unaryExp
    (34) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . LPAREN expression RPAREN
    (24) factorExp -> . expressionFunction
    (26) factorNumExp -> . NUMBER
    (27) bool_atom -> . TRUE
    (28) bool_atom -> . FALSE
    (38) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (39) expressionVectorAt -> . expressionVector
    (40) expressionVectorAt -> . factorVar
    (60) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (61) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (62) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (63) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . PRINT LPAREN expression RPAREN
    (65) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (35) expressionVector -> . LBRACKET vector_items RBRACKET
    (25) factorVar -> . VAR

    AO              shift and go to state 2
    DOUBLE_AO       shift and go to state 37
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 8
    FALSE           shift and go to state 10
    MULTIPLICACIONESCALAR shift and go to state 9
    CAPITALIZAR     shift and go to state 6
    COLINEALES      shift and go to state 35
    PRINT           shift and go to state 13
    LENGTH          shift and go to state 5
    LBRACKET        shift and go to state 22
    VAR             shift and go to state 19

    expressionTernaryCond          shift and go to state 1
    unaryExp                       shift and go to state 30
    unaryExp2                      shift and go to state 21
    expressionBoolOp               shift and go to state 31
    factorVar                      shift and go to state 3
    bool_atom                      shift and go to state 34
    factorExp                      shift and go to state 4
    expressionVector               shift and go to state 26
    expressionComp                 shift and go to state 24
    factorNumExp                   shift and go to state 14
    expression                     shift and go to state 77
    expressionVectorAt             shift and go to state 39
    aritExp                        shift and go to state 17
    expressionFunction             shift and go to state 18
    expressionAssign               shift and go to state 43

state 49

    (31) unaryExp -> NOT unaryExp .

    AO              reduce using rule 31 (unaryExp -> NOT unaryExp .)
    COMP            reduce using rule 31 (unaryExp -> NOT unaryExp .)
    QUESTION        reduce using rule 31 (unaryExp -> NOT unaryExp .)
    BOOL_OP         reduce using rule 31 (unaryExp -> NOT unaryExp .)
    AOEQUAL         reduce using rule 31 (unaryExp -> NOT unaryExp .)
    EQUAL           reduce using rule 31 (unaryExp -> NOT unaryExp .)
    SEMICOLON       reduce using rule 31 (unaryExp -> NOT unaryExp .)
    RPAREN          reduce using rule 31 (unaryExp -> NOT unaryExp .)
    COMMA           reduce using rule 31 (unaryExp -> NOT unaryExp .)
    RBRACKET        reduce using rule 31 (unaryExp -> NOT unaryExp .)
    COLON           reduce using rule 31 (unaryExp -> NOT unaryExp .)
    RBRACE          reduce using rule 31 (unaryExp -> NOT unaryExp .)


state 50

    (60) expressionFunction -> MULTIPLICACIONESCALAR LPAREN . expression COMMA expression RPAREN
    (61) expressionFunction -> MULTIPLICACIONESCALAR LPAREN . expression COMMA expression COMMA expression RPAREN
    (10) expression -> . expressionAssign
    (41) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (42) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (43) expressionAssign -> . expressionTernaryCond
    (44) expressionAssign -> . expressionTernaryCond EQUAL LBRACE reg_items RBRACE
    (55) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (56) expressionTernaryCond -> . expressionBoolOp
    (29) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (30) expressionBoolOp -> . expressionComp
    (32) expressionComp -> . expressionComp COMP aritExp
    (33) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (31) unaryExp -> . NOT unaryExp
    (34) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . LPAREN expression RPAREN
    (24) factorExp -> . expressionFunction
    (26) factorNumExp -> . NUMBER
    (27) bool_atom -> . TRUE
    (28) bool_atom -> . FALSE
    (38) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (39) expressionVectorAt -> . expressionVector
    (40) expressionVectorAt -> . factorVar
    (60) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (61) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (62) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (63) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . PRINT LPAREN expression RPAREN
    (65) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (35) expressionVector -> . LBRACKET vector_items RBRACKET
    (25) factorVar -> . VAR

    AO              shift and go to state 2
    DOUBLE_AO       shift and go to state 37
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 8
    FALSE           shift and go to state 10
    MULTIPLICACIONESCALAR shift and go to state 9
    CAPITALIZAR     shift and go to state 6
    COLINEALES      shift and go to state 35
    PRINT           shift and go to state 13
    LENGTH          shift and go to state 5
    LBRACKET        shift and go to state 22
    VAR             shift and go to state 19

    expressionTernaryCond          shift and go to state 1
    unaryExp                       shift and go to state 30
    unaryExp2                      shift and go to state 21
    expressionBoolOp               shift and go to state 31
    factorVar                      shift and go to state 3
    bool_atom                      shift and go to state 34
    factorExp                      shift and go to state 4
    expressionVector               shift and go to state 26
    expressionComp                 shift and go to state 24
    factorNumExp                   shift and go to state 14
    expression                     shift and go to state 78
    expressionVectorAt             shift and go to state 39
    aritExp                        shift and go to state 17
    expressionFunction             shift and go to state 18
    expressionAssign               shift and go to state 43

state 51

    (2) code -> COMMENT code .

    RBRACE          reduce using rule 2 (code -> COMMENT code .)
    $end            reduce using rule 2 (code -> COMMENT code .)


state 52

    (64) expressionFunction -> PRINT LPAREN . expression RPAREN
    (10) expression -> . expressionAssign
    (41) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (42) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (43) expressionAssign -> . expressionTernaryCond
    (44) expressionAssign -> . expressionTernaryCond EQUAL LBRACE reg_items RBRACE
    (55) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (56) expressionTernaryCond -> . expressionBoolOp
    (29) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (30) expressionBoolOp -> . expressionComp
    (32) expressionComp -> . expressionComp COMP aritExp
    (33) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (31) unaryExp -> . NOT unaryExp
    (34) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . LPAREN expression RPAREN
    (24) factorExp -> . expressionFunction
    (26) factorNumExp -> . NUMBER
    (27) bool_atom -> . TRUE
    (28) bool_atom -> . FALSE
    (38) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (39) expressionVectorAt -> . expressionVector
    (40) expressionVectorAt -> . factorVar
    (60) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (61) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (62) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (63) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . PRINT LPAREN expression RPAREN
    (65) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (35) expressionVector -> . LBRACKET vector_items RBRACKET
    (25) factorVar -> . VAR

    AO              shift and go to state 2
    DOUBLE_AO       shift and go to state 37
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 8
    FALSE           shift and go to state 10
    MULTIPLICACIONESCALAR shift and go to state 9
    CAPITALIZAR     shift and go to state 6
    COLINEALES      shift and go to state 35
    PRINT           shift and go to state 13
    LENGTH          shift and go to state 5
    LBRACKET        shift and go to state 22
    VAR             shift and go to state 19

    expressionTernaryCond          shift and go to state 1
    unaryExp                       shift and go to state 30
    unaryExp2                      shift and go to state 21
    expressionBoolOp               shift and go to state 31
    factorVar                      shift and go to state 3
    bool_atom                      shift and go to state 34
    factorExp                      shift and go to state 4
    expressionVector               shift and go to state 26
    expressionComp                 shift and go to state 24
    factorNumExp                   shift and go to state 14
    expression                     shift and go to state 79
    expressionVectorAt             shift and go to state 39
    aritExp                        shift and go to state 17
    expressionFunction             shift and go to state 18
    expressionAssign               shift and go to state 43

state 53

    (4) statement -> expression SEMICOLON .

    WHILE           reduce using rule 4 (statement -> expression SEMICOLON .)
    ELSE            reduce using rule 4 (statement -> expression SEMICOLON .)
    COMMENT         reduce using rule 4 (statement -> expression SEMICOLON .)
    LBRACE          reduce using rule 4 (statement -> expression SEMICOLON .)
    IF              reduce using rule 4 (statement -> expression SEMICOLON .)
    FOR             reduce using rule 4 (statement -> expression SEMICOLON .)
    DO              reduce using rule 4 (statement -> expression SEMICOLON .)
    AO              reduce using rule 4 (statement -> expression SEMICOLON .)
    DOUBLE_AO       reduce using rule 4 (statement -> expression SEMICOLON .)
    NOT             reduce using rule 4 (statement -> expression SEMICOLON .)
    STRING          reduce using rule 4 (statement -> expression SEMICOLON .)
    LPAREN          reduce using rule 4 (statement -> expression SEMICOLON .)
    NUMBER          reduce using rule 4 (statement -> expression SEMICOLON .)
    TRUE            reduce using rule 4 (statement -> expression SEMICOLON .)
    FALSE           reduce using rule 4 (statement -> expression SEMICOLON .)
    MULTIPLICACIONESCALAR reduce using rule 4 (statement -> expression SEMICOLON .)
    CAPITALIZAR     reduce using rule 4 (statement -> expression SEMICOLON .)
    COLINEALES      reduce using rule 4 (statement -> expression SEMICOLON .)
    PRINT           reduce using rule 4 (statement -> expression SEMICOLON .)
    LENGTH          reduce using rule 4 (statement -> expression SEMICOLON .)
    LBRACKET        reduce using rule 4 (statement -> expression SEMICOLON .)
    VAR             reduce using rule 4 (statement -> expression SEMICOLON .)
    $end            reduce using rule 4 (statement -> expression SEMICOLON .)
    RBRACE          reduce using rule 4 (statement -> expression SEMICOLON .)


state 54

    (13) aritExp -> aritExp AO . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (31) unaryExp -> . NOT unaryExp
    (34) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . LPAREN expression RPAREN
    (24) factorExp -> . expressionFunction
    (26) factorNumExp -> . NUMBER
    (27) bool_atom -> . TRUE
    (28) bool_atom -> . FALSE
    (38) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (39) expressionVectorAt -> . expressionVector
    (40) expressionVectorAt -> . factorVar
    (60) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (61) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (62) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (63) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . PRINT LPAREN expression RPAREN
    (65) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (35) expressionVector -> . LBRACKET vector_items RBRACKET
    (25) factorVar -> . VAR

    AO              shift and go to state 2
    DOUBLE_AO       shift and go to state 37
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 8
    FALSE           shift and go to state 10
    MULTIPLICACIONESCALAR shift and go to state 9
    CAPITALIZAR     shift and go to state 6
    COLINEALES      shift and go to state 35
    PRINT           shift and go to state 13
    LENGTH          shift and go to state 5
    LBRACKET        shift and go to state 22
    VAR             shift and go to state 19

    unaryExp                       shift and go to state 80
    unaryExp2                      shift and go to state 21
    factorVar                      shift and go to state 3
    bool_atom                      shift and go to state 34
    factorExp                      shift and go to state 4
    expressionVector               shift and go to state 26
    factorNumExp                   shift and go to state 14
    expressionVectorAt             shift and go to state 39
    expressionFunction             shift and go to state 18

state 55

    (23) factorExp -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 81


state 56

    (18) unaryExp2 -> unaryExp2 DOUBLE_AO .

    DOUBLE_AO       reduce using rule 18 (unaryExp2 -> unaryExp2 DOUBLE_AO .)
    AO              reduce using rule 18 (unaryExp2 -> unaryExp2 DOUBLE_AO .)
    COMP            reduce using rule 18 (unaryExp2 -> unaryExp2 DOUBLE_AO .)
    QUESTION        reduce using rule 18 (unaryExp2 -> unaryExp2 DOUBLE_AO .)
    BOOL_OP         reduce using rule 18 (unaryExp2 -> unaryExp2 DOUBLE_AO .)
    AOEQUAL         reduce using rule 18 (unaryExp2 -> unaryExp2 DOUBLE_AO .)
    EQUAL           reduce using rule 18 (unaryExp2 -> unaryExp2 DOUBLE_AO .)
    SEMICOLON       reduce using rule 18 (unaryExp2 -> unaryExp2 DOUBLE_AO .)
    RPAREN          reduce using rule 18 (unaryExp2 -> unaryExp2 DOUBLE_AO .)
    COLON           reduce using rule 18 (unaryExp2 -> unaryExp2 DOUBLE_AO .)
    COMMA           reduce using rule 18 (unaryExp2 -> unaryExp2 DOUBLE_AO .)
    RBRACKET        reduce using rule 18 (unaryExp2 -> unaryExp2 DOUBLE_AO .)
    RBRACE          reduce using rule 18 (unaryExp2 -> unaryExp2 DOUBLE_AO .)


state 57

    (35) expressionVector -> LBRACKET vector_items . RBRACKET

    RBRACKET        shift and go to state 82


state 58

    (36) vector_items -> expression . COMMA vector_items
    (37) vector_items -> expression .

    COMMA           shift and go to state 83
    RBRACKET        reduce using rule 37 (vector_items -> expression .)


state 59

    (58) for -> FOR LPAREN . optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement
    (11) optional_expr -> . expression
    (12) optional_expr -> .
    (10) expression -> . expressionAssign
    (41) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (42) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (43) expressionAssign -> . expressionTernaryCond
    (44) expressionAssign -> . expressionTernaryCond EQUAL LBRACE reg_items RBRACE
    (55) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (56) expressionTernaryCond -> . expressionBoolOp
    (29) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (30) expressionBoolOp -> . expressionComp
    (32) expressionComp -> . expressionComp COMP aritExp
    (33) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (31) unaryExp -> . NOT unaryExp
    (34) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . LPAREN expression RPAREN
    (24) factorExp -> . expressionFunction
    (26) factorNumExp -> . NUMBER
    (27) bool_atom -> . TRUE
    (28) bool_atom -> . FALSE
    (38) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (39) expressionVectorAt -> . expressionVector
    (40) expressionVectorAt -> . factorVar
    (60) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (61) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (62) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (63) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . PRINT LPAREN expression RPAREN
    (65) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (35) expressionVector -> . LBRACKET vector_items RBRACKET
    (25) factorVar -> . VAR

    SEMICOLON       reduce using rule 12 (optional_expr -> .)
    AO              shift and go to state 2
    DOUBLE_AO       shift and go to state 37
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 8
    FALSE           shift and go to state 10
    MULTIPLICACIONESCALAR shift and go to state 9
    CAPITALIZAR     shift and go to state 6
    COLINEALES      shift and go to state 35
    PRINT           shift and go to state 13
    LENGTH          shift and go to state 5
    LBRACKET        shift and go to state 22
    VAR             shift and go to state 19

    expressionTernaryCond          shift and go to state 1
    unaryExp                       shift and go to state 30
    unaryExp2                      shift and go to state 21
    expressionBoolOp               shift and go to state 31
    factorExp                      shift and go to state 4
    factorVar                      shift and go to state 3
    bool_atom                      shift and go to state 34
    expressionComp                 shift and go to state 24
    expressionVector               shift and go to state 26
    factorNumExp                   shift and go to state 14
    expression                     shift and go to state 85
    optional_expr                  shift and go to state 84
    expressionVectorAt             shift and go to state 39
    aritExp                        shift and go to state 17
    expressionFunction             shift and go to state 18
    expressionAssign               shift and go to state 43

state 60

    (32) expressionComp -> expressionComp COMP . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (31) unaryExp -> . NOT unaryExp
    (34) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . LPAREN expression RPAREN
    (24) factorExp -> . expressionFunction
    (26) factorNumExp -> . NUMBER
    (27) bool_atom -> . TRUE
    (28) bool_atom -> . FALSE
    (38) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (39) expressionVectorAt -> . expressionVector
    (40) expressionVectorAt -> . factorVar
    (60) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (61) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (62) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (63) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . PRINT LPAREN expression RPAREN
    (65) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (35) expressionVector -> . LBRACKET vector_items RBRACKET
    (25) factorVar -> . VAR

    AO              shift and go to state 2
    DOUBLE_AO       shift and go to state 37
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 8
    FALSE           shift and go to state 10
    MULTIPLICACIONESCALAR shift and go to state 9
    CAPITALIZAR     shift and go to state 6
    COLINEALES      shift and go to state 35
    PRINT           shift and go to state 13
    LENGTH          shift and go to state 5
    LBRACKET        shift and go to state 22
    VAR             shift and go to state 19

    unaryExp                       shift and go to state 30
    unaryExp2                      shift and go to state 21
    factorExp                      shift and go to state 4
    factorVar                      shift and go to state 3
    bool_atom                      shift and go to state 34
    expressionVector               shift and go to state 26
    factorNumExp                   shift and go to state 14
    expressionVectorAt             shift and go to state 39
    aritExp                        shift and go to state 86
    expressionFunction             shift and go to state 18

state 61

    (1) code -> statement code .

    RBRACE          reduce using rule 1 (code -> statement code .)
    $end            reduce using rule 1 (code -> statement code .)


state 62

    (49) block -> LBRACE code . RBRACE

    RBRACE          shift and go to state 87


state 63

    (29) expressionBoolOp -> expressionBoolOp BOOL_OP . expressionComp
    (32) expressionComp -> . expressionComp COMP aritExp
    (33) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (31) unaryExp -> . NOT unaryExp
    (34) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . LPAREN expression RPAREN
    (24) factorExp -> . expressionFunction
    (26) factorNumExp -> . NUMBER
    (27) bool_atom -> . TRUE
    (28) bool_atom -> . FALSE
    (38) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (39) expressionVectorAt -> . expressionVector
    (40) expressionVectorAt -> . factorVar
    (60) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (61) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (62) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (63) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . PRINT LPAREN expression RPAREN
    (65) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (35) expressionVector -> . LBRACKET vector_items RBRACKET
    (25) factorVar -> . VAR

    AO              shift and go to state 2
    DOUBLE_AO       shift and go to state 37
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 8
    FALSE           shift and go to state 10
    MULTIPLICACIONESCALAR shift and go to state 9
    CAPITALIZAR     shift and go to state 6
    COLINEALES      shift and go to state 35
    PRINT           shift and go to state 13
    LENGTH          shift and go to state 5
    LBRACKET        shift and go to state 22
    VAR             shift and go to state 19

    unaryExp                       shift and go to state 30
    unaryExp2                      shift and go to state 21
    factorVar                      shift and go to state 3
    bool_atom                      shift and go to state 34
    factorExp                      shift and go to state 4
    expressionVector               shift and go to state 26
    expressionComp                 shift and go to state 88
    factorNumExp                   shift and go to state 14
    expressionVectorAt             shift and go to state 39
    aritExp                        shift and go to state 17
    expressionFunction             shift and go to state 18

state 64

    (55) expressionTernaryCond -> expressionBoolOp QUESTION . expression COLON expression
    (10) expression -> . expressionAssign
    (41) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (42) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (43) expressionAssign -> . expressionTernaryCond
    (44) expressionAssign -> . expressionTernaryCond EQUAL LBRACE reg_items RBRACE
    (55) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (56) expressionTernaryCond -> . expressionBoolOp
    (29) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (30) expressionBoolOp -> . expressionComp
    (32) expressionComp -> . expressionComp COMP aritExp
    (33) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (31) unaryExp -> . NOT unaryExp
    (34) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . LPAREN expression RPAREN
    (24) factorExp -> . expressionFunction
    (26) factorNumExp -> . NUMBER
    (27) bool_atom -> . TRUE
    (28) bool_atom -> . FALSE
    (38) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (39) expressionVectorAt -> . expressionVector
    (40) expressionVectorAt -> . factorVar
    (60) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (61) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (62) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (63) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . PRINT LPAREN expression RPAREN
    (65) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (35) expressionVector -> . LBRACKET vector_items RBRACKET
    (25) factorVar -> . VAR

    AO              shift and go to state 2
    DOUBLE_AO       shift and go to state 37
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 8
    FALSE           shift and go to state 10
    MULTIPLICACIONESCALAR shift and go to state 9
    CAPITALIZAR     shift and go to state 6
    COLINEALES      shift and go to state 35
    PRINT           shift and go to state 13
    LENGTH          shift and go to state 5
    LBRACKET        shift and go to state 22
    VAR             shift and go to state 19

    expressionTernaryCond          shift and go to state 1
    unaryExp                       shift and go to state 30
    unaryExp2                      shift and go to state 21
    expressionBoolOp               shift and go to state 31
    factorVar                      shift and go to state 3
    bool_atom                      shift and go to state 34
    factorExp                      shift and go to state 4
    expressionVector               shift and go to state 26
    expressionComp                 shift and go to state 24
    factorNumExp                   shift and go to state 14
    expression                     shift and go to state 89
    expressionVectorAt             shift and go to state 39
    aritExp                        shift and go to state 17
    expressionFunction             shift and go to state 18
    expressionAssign               shift and go to state 43

state 65

    (63) expressionFunction -> COLINEALES LPAREN . expression COMMA expression RPAREN
    (10) expression -> . expressionAssign
    (41) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (42) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (43) expressionAssign -> . expressionTernaryCond
    (44) expressionAssign -> . expressionTernaryCond EQUAL LBRACE reg_items RBRACE
    (55) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (56) expressionTernaryCond -> . expressionBoolOp
    (29) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (30) expressionBoolOp -> . expressionComp
    (32) expressionComp -> . expressionComp COMP aritExp
    (33) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (31) unaryExp -> . NOT unaryExp
    (34) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . LPAREN expression RPAREN
    (24) factorExp -> . expressionFunction
    (26) factorNumExp -> . NUMBER
    (27) bool_atom -> . TRUE
    (28) bool_atom -> . FALSE
    (38) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (39) expressionVectorAt -> . expressionVector
    (40) expressionVectorAt -> . factorVar
    (60) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (61) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (62) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (63) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . PRINT LPAREN expression RPAREN
    (65) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (35) expressionVector -> . LBRACKET vector_items RBRACKET
    (25) factorVar -> . VAR

    AO              shift and go to state 2
    DOUBLE_AO       shift and go to state 37
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 8
    FALSE           shift and go to state 10
    MULTIPLICACIONESCALAR shift and go to state 9
    CAPITALIZAR     shift and go to state 6
    COLINEALES      shift and go to state 35
    PRINT           shift and go to state 13
    LENGTH          shift and go to state 5
    LBRACKET        shift and go to state 22
    VAR             shift and go to state 19

    expressionTernaryCond          shift and go to state 1
    unaryExp                       shift and go to state 30
    unaryExp2                      shift and go to state 21
    expressionBoolOp               shift and go to state 31
    factorVar                      shift and go to state 3
    bool_atom                      shift and go to state 34
    factorExp                      shift and go to state 4
    expressionVector               shift and go to state 26
    expressionComp                 shift and go to state 24
    factorNumExp                   shift and go to state 14
    expression                     shift and go to state 90
    expressionVectorAt             shift and go to state 39
    aritExp                        shift and go to state 17
    expressionFunction             shift and go to state 18
    expressionAssign               shift and go to state 43

state 66

    (52) if -> IF LPAREN . expression RPAREN singleStatement else
    (10) expression -> . expressionAssign
    (41) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (42) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (43) expressionAssign -> . expressionTernaryCond
    (44) expressionAssign -> . expressionTernaryCond EQUAL LBRACE reg_items RBRACE
    (55) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (56) expressionTernaryCond -> . expressionBoolOp
    (29) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (30) expressionBoolOp -> . expressionComp
    (32) expressionComp -> . expressionComp COMP aritExp
    (33) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (31) unaryExp -> . NOT unaryExp
    (34) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . LPAREN expression RPAREN
    (24) factorExp -> . expressionFunction
    (26) factorNumExp -> . NUMBER
    (27) bool_atom -> . TRUE
    (28) bool_atom -> . FALSE
    (38) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (39) expressionVectorAt -> . expressionVector
    (40) expressionVectorAt -> . factorVar
    (60) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (61) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (62) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (63) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . PRINT LPAREN expression RPAREN
    (65) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (35) expressionVector -> . LBRACKET vector_items RBRACKET
    (25) factorVar -> . VAR

    AO              shift and go to state 2
    DOUBLE_AO       shift and go to state 37
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 8
    FALSE           shift and go to state 10
    MULTIPLICACIONESCALAR shift and go to state 9
    CAPITALIZAR     shift and go to state 6
    COLINEALES      shift and go to state 35
    PRINT           shift and go to state 13
    LENGTH          shift and go to state 5
    LBRACKET        shift and go to state 22
    VAR             shift and go to state 19

    expressionTernaryCond          shift and go to state 1
    unaryExp                       shift and go to state 30
    unaryExp2                      shift and go to state 21
    expressionBoolOp               shift and go to state 31
    factorExp                      shift and go to state 4
    factorVar                      shift and go to state 3
    bool_atom                      shift and go to state 34
    expression                     shift and go to state 91
    expressionVector               shift and go to state 26
    expressionComp                 shift and go to state 24
    factorNumExp                   shift and go to state 14
    expressionVectorAt             shift and go to state 39
    aritExp                        shift and go to state 17
    expressionFunction             shift and go to state 18
    expressionAssign               shift and go to state 43

state 67

    (16) unaryExp -> DOUBLE_AO unaryExp .

    AO              reduce using rule 16 (unaryExp -> DOUBLE_AO unaryExp .)
    COMP            reduce using rule 16 (unaryExp -> DOUBLE_AO unaryExp .)
    QUESTION        reduce using rule 16 (unaryExp -> DOUBLE_AO unaryExp .)
    BOOL_OP         reduce using rule 16 (unaryExp -> DOUBLE_AO unaryExp .)
    AOEQUAL         reduce using rule 16 (unaryExp -> DOUBLE_AO unaryExp .)
    EQUAL           reduce using rule 16 (unaryExp -> DOUBLE_AO unaryExp .)
    SEMICOLON       reduce using rule 16 (unaryExp -> DOUBLE_AO unaryExp .)
    RPAREN          reduce using rule 16 (unaryExp -> DOUBLE_AO unaryExp .)
    COMMA           reduce using rule 16 (unaryExp -> DOUBLE_AO unaryExp .)
    RBRACKET        reduce using rule 16 (unaryExp -> DOUBLE_AO unaryExp .)
    COLON           reduce using rule 16 (unaryExp -> DOUBLE_AO unaryExp .)
    RBRACE          reduce using rule 16 (unaryExp -> DOUBLE_AO unaryExp .)


state 68

    (50) singleStatement -> COMMENT . singleStatement
    (50) singleStatement -> . COMMENT singleStatement
    (51) singleStatement -> . statement
    (4) statement -> . expression SEMICOLON
    (5) statement -> . block
    (6) statement -> . if
    (7) statement -> . while
    (8) statement -> . for
    (9) statement -> . do_while
    (10) expression -> . expressionAssign
    (49) block -> . LBRACE code RBRACE
    (52) if -> . IF LPAREN expression RPAREN singleStatement else
    (57) while -> . WHILE LPAREN expression RPAREN singleStatement
    (58) for -> . FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement
    (59) do_while -> . DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON
    (41) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (42) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (43) expressionAssign -> . expressionTernaryCond
    (44) expressionAssign -> . expressionTernaryCond EQUAL LBRACE reg_items RBRACE
    (55) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (56) expressionTernaryCond -> . expressionBoolOp
    (29) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (30) expressionBoolOp -> . expressionComp
    (32) expressionComp -> . expressionComp COMP aritExp
    (33) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (31) unaryExp -> . NOT unaryExp
    (34) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . LPAREN expression RPAREN
    (24) factorExp -> . expressionFunction
    (26) factorNumExp -> . NUMBER
    (27) bool_atom -> . TRUE
    (28) bool_atom -> . FALSE
    (38) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (39) expressionVectorAt -> . expressionVector
    (40) expressionVectorAt -> . factorVar
    (60) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (61) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (62) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (63) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . PRINT LPAREN expression RPAREN
    (65) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (35) expressionVector -> . LBRACKET vector_items RBRACKET
    (25) factorVar -> . VAR

    COMMENT         shift and go to state 68
    LBRACE          shift and go to state 27
    IF              shift and go to state 36
    WHILE           shift and go to state 40
    FOR             shift and go to state 23
    DO              shift and go to state 38
    AO              shift and go to state 2
    DOUBLE_AO       shift and go to state 37
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 8
    FALSE           shift and go to state 10
    MULTIPLICACIONESCALAR shift and go to state 9
    CAPITALIZAR     shift and go to state 6
    COLINEALES      shift and go to state 35
    PRINT           shift and go to state 13
    LENGTH          shift and go to state 5
    LBRACKET        shift and go to state 22
    VAR             shift and go to state 19

    expressionTernaryCond          shift and go to state 1
    unaryExp2                      shift and go to state 21
    expressionComp                 shift and go to state 24
    factorVar                      shift and go to state 3
    factorExp                      shift and go to state 4
    expressionVector               shift and go to state 26
    if                             shift and go to state 28
    block                          shift and go to state 29
    unaryExp                       shift and go to state 30
    statement                      shift and go to state 70
    expressionBoolOp               shift and go to state 31
    while                          shift and go to state 32
    bool_atom                      shift and go to state 34
    for                            shift and go to state 41
    expressionFunction             shift and go to state 18
    factorNumExp                   shift and go to state 14
    do_while                       shift and go to state 15
    expression                     shift and go to state 16
    singleStatement                shift and go to state 92
    expressionVectorAt             shift and go to state 39
    aritExp                        shift and go to state 17
    expressionAssign               shift and go to state 43

state 69

    (59) do_while -> DO singleStatement . WHILE LPAREN expression RPAREN SEMICOLON

    WHILE           shift and go to state 93


state 70

    (51) singleStatement -> statement .

    WHILE           reduce using rule 51 (singleStatement -> statement .)
    ELSE            reduce using rule 51 (singleStatement -> statement .)
    COMMENT         reduce using rule 51 (singleStatement -> statement .)
    LBRACE          reduce using rule 51 (singleStatement -> statement .)
    IF              reduce using rule 51 (singleStatement -> statement .)
    FOR             reduce using rule 51 (singleStatement -> statement .)
    DO              reduce using rule 51 (singleStatement -> statement .)
    AO              reduce using rule 51 (singleStatement -> statement .)
    DOUBLE_AO       reduce using rule 51 (singleStatement -> statement .)
    NOT             reduce using rule 51 (singleStatement -> statement .)
    STRING          reduce using rule 51 (singleStatement -> statement .)
    LPAREN          reduce using rule 51 (singleStatement -> statement .)
    NUMBER          reduce using rule 51 (singleStatement -> statement .)
    TRUE            reduce using rule 51 (singleStatement -> statement .)
    FALSE           reduce using rule 51 (singleStatement -> statement .)
    MULTIPLICACIONESCALAR reduce using rule 51 (singleStatement -> statement .)
    CAPITALIZAR     reduce using rule 51 (singleStatement -> statement .)
    COLINEALES      reduce using rule 51 (singleStatement -> statement .)
    PRINT           reduce using rule 51 (singleStatement -> statement .)
    LENGTH          reduce using rule 51 (singleStatement -> statement .)
    LBRACKET        reduce using rule 51 (singleStatement -> statement .)
    VAR             reduce using rule 51 (singleStatement -> statement .)
    $end            reduce using rule 51 (singleStatement -> statement .)
    RBRACE          reduce using rule 51 (singleStatement -> statement .)


state 71

    (38) expressionVectorAt -> expressionVectorAt LBRACKET . expression RBRACKET
    (10) expression -> . expressionAssign
    (41) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (42) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (43) expressionAssign -> . expressionTernaryCond
    (44) expressionAssign -> . expressionTernaryCond EQUAL LBRACE reg_items RBRACE
    (55) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (56) expressionTernaryCond -> . expressionBoolOp
    (29) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (30) expressionBoolOp -> . expressionComp
    (32) expressionComp -> . expressionComp COMP aritExp
    (33) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (31) unaryExp -> . NOT unaryExp
    (34) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . LPAREN expression RPAREN
    (24) factorExp -> . expressionFunction
    (26) factorNumExp -> . NUMBER
    (27) bool_atom -> . TRUE
    (28) bool_atom -> . FALSE
    (38) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (39) expressionVectorAt -> . expressionVector
    (40) expressionVectorAt -> . factorVar
    (60) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (61) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (62) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (63) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . PRINT LPAREN expression RPAREN
    (65) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (35) expressionVector -> . LBRACKET vector_items RBRACKET
    (25) factorVar -> . VAR

    AO              shift and go to state 2
    DOUBLE_AO       shift and go to state 37
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 8
    FALSE           shift and go to state 10
    MULTIPLICACIONESCALAR shift and go to state 9
    CAPITALIZAR     shift and go to state 6
    COLINEALES      shift and go to state 35
    PRINT           shift and go to state 13
    LENGTH          shift and go to state 5
    LBRACKET        shift and go to state 22
    VAR             shift and go to state 19

    expressionTernaryCond          shift and go to state 1
    unaryExp                       shift and go to state 30
    unaryExp2                      shift and go to state 21
    expressionBoolOp               shift and go to state 31
    factorVar                      shift and go to state 3
    bool_atom                      shift and go to state 34
    factorExp                      shift and go to state 4
    expressionVector               shift and go to state 26
    expressionComp                 shift and go to state 24
    factorNumExp                   shift and go to state 14
    expression                     shift and go to state 94
    expressionVectorAt             shift and go to state 39
    aritExp                        shift and go to state 17
    expressionFunction             shift and go to state 18
    expressionAssign               shift and go to state 43

state 72

    (57) while -> WHILE LPAREN . expression RPAREN singleStatement
    (10) expression -> . expressionAssign
    (41) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (42) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (43) expressionAssign -> . expressionTernaryCond
    (44) expressionAssign -> . expressionTernaryCond EQUAL LBRACE reg_items RBRACE
    (55) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (56) expressionTernaryCond -> . expressionBoolOp
    (29) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (30) expressionBoolOp -> . expressionComp
    (32) expressionComp -> . expressionComp COMP aritExp
    (33) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (31) unaryExp -> . NOT unaryExp
    (34) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . LPAREN expression RPAREN
    (24) factorExp -> . expressionFunction
    (26) factorNumExp -> . NUMBER
    (27) bool_atom -> . TRUE
    (28) bool_atom -> . FALSE
    (38) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (39) expressionVectorAt -> . expressionVector
    (40) expressionVectorAt -> . factorVar
    (60) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (61) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (62) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (63) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . PRINT LPAREN expression RPAREN
    (65) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (35) expressionVector -> . LBRACKET vector_items RBRACKET
    (25) factorVar -> . VAR

    AO              shift and go to state 2
    DOUBLE_AO       shift and go to state 37
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 8
    FALSE           shift and go to state 10
    MULTIPLICACIONESCALAR shift and go to state 9
    CAPITALIZAR     shift and go to state 6
    COLINEALES      shift and go to state 35
    PRINT           shift and go to state 13
    LENGTH          shift and go to state 5
    LBRACKET        shift and go to state 22
    VAR             shift and go to state 19

    expressionTernaryCond          shift and go to state 1
    unaryExp                       shift and go to state 30
    unaryExp2                      shift and go to state 21
    expressionBoolOp               shift and go to state 31
    factorVar                      shift and go to state 3
    bool_atom                      shift and go to state 34
    factorExp                      shift and go to state 4
    expressionVector               shift and go to state 26
    expressionComp                 shift and go to state 24
    factorNumExp                   shift and go to state 14
    expression                     shift and go to state 95
    expressionVectorAt             shift and go to state 39
    aritExp                        shift and go to state 17
    expressionFunction             shift and go to state 18
    expressionAssign               shift and go to state 43

state 73

    (41) expressionAssign -> expressionTernaryCond AOEQUAL expressionAssign .

    RPAREN          reduce using rule 41 (expressionAssign -> expressionTernaryCond AOEQUAL expressionAssign .)
    SEMICOLON       reduce using rule 41 (expressionAssign -> expressionTernaryCond AOEQUAL expressionAssign .)
    COMMA           reduce using rule 41 (expressionAssign -> expressionTernaryCond AOEQUAL expressionAssign .)
    RBRACKET        reduce using rule 41 (expressionAssign -> expressionTernaryCond AOEQUAL expressionAssign .)
    AOEQUAL         reduce using rule 41 (expressionAssign -> expressionTernaryCond AOEQUAL expressionAssign .)
    EQUAL           reduce using rule 41 (expressionAssign -> expressionTernaryCond AOEQUAL expressionAssign .)
    COLON           reduce using rule 41 (expressionAssign -> expressionTernaryCond AOEQUAL expressionAssign .)
    RBRACE          reduce using rule 41 (expressionAssign -> expressionTernaryCond AOEQUAL expressionAssign .)


state 74

    (44) expressionAssign -> expressionTernaryCond EQUAL LBRACE . reg_items RBRACE
    (45) reg_items -> . reg_field COMMA reg_items
    (46) reg_items -> . reg_field
    (47) reg_field -> . factorVar COLON expression
    (25) factorVar -> . VAR

    VAR             shift and go to state 19

    reg_items                      shift and go to state 96
    reg_field                      shift and go to state 97
    factorVar                      shift and go to state 98

state 75

    (42) expressionAssign -> expressionTernaryCond EQUAL expressionAssign .

    RPAREN          reduce using rule 42 (expressionAssign -> expressionTernaryCond EQUAL expressionAssign .)
    SEMICOLON       reduce using rule 42 (expressionAssign -> expressionTernaryCond EQUAL expressionAssign .)
    COMMA           reduce using rule 42 (expressionAssign -> expressionTernaryCond EQUAL expressionAssign .)
    RBRACKET        reduce using rule 42 (expressionAssign -> expressionTernaryCond EQUAL expressionAssign .)
    AOEQUAL         reduce using rule 42 (expressionAssign -> expressionTernaryCond EQUAL expressionAssign .)
    EQUAL           reduce using rule 42 (expressionAssign -> expressionTernaryCond EQUAL expressionAssign .)
    COLON           reduce using rule 42 (expressionAssign -> expressionTernaryCond EQUAL expressionAssign .)
    RBRACE          reduce using rule 42 (expressionAssign -> expressionTernaryCond EQUAL expressionAssign .)


state 76

    (65) expressionFunction -> LENGTH LPAREN expression . RPAREN

    RPAREN          shift and go to state 99


state 77

    (62) expressionFunction -> CAPITALIZAR LPAREN expression . RPAREN

    RPAREN          shift and go to state 100


state 78

    (60) expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression . COMMA expression RPAREN
    (61) expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression . COMMA expression COMMA expression RPAREN

    COMMA           shift and go to state 101


state 79

    (64) expressionFunction -> PRINT LPAREN expression . RPAREN

    RPAREN          shift and go to state 102


state 80

    (13) aritExp -> aritExp AO unaryExp .

    AO              reduce using rule 13 (aritExp -> aritExp AO unaryExp .)
    COMP            reduce using rule 13 (aritExp -> aritExp AO unaryExp .)
    QUESTION        reduce using rule 13 (aritExp -> aritExp AO unaryExp .)
    BOOL_OP         reduce using rule 13 (aritExp -> aritExp AO unaryExp .)
    AOEQUAL         reduce using rule 13 (aritExp -> aritExp AO unaryExp .)
    EQUAL           reduce using rule 13 (aritExp -> aritExp AO unaryExp .)
    SEMICOLON       reduce using rule 13 (aritExp -> aritExp AO unaryExp .)
    RPAREN          reduce using rule 13 (aritExp -> aritExp AO unaryExp .)
    COMMA           reduce using rule 13 (aritExp -> aritExp AO unaryExp .)
    RBRACKET        reduce using rule 13 (aritExp -> aritExp AO unaryExp .)
    COLON           reduce using rule 13 (aritExp -> aritExp AO unaryExp .)
    RBRACE          reduce using rule 13 (aritExp -> aritExp AO unaryExp .)


state 81

    (23) factorExp -> LPAREN expression RPAREN .

    DOUBLE_AO       reduce using rule 23 (factorExp -> LPAREN expression RPAREN .)
    AO              reduce using rule 23 (factorExp -> LPAREN expression RPAREN .)
    COMP            reduce using rule 23 (factorExp -> LPAREN expression RPAREN .)
    QUESTION        reduce using rule 23 (factorExp -> LPAREN expression RPAREN .)
    BOOL_OP         reduce using rule 23 (factorExp -> LPAREN expression RPAREN .)
    AOEQUAL         reduce using rule 23 (factorExp -> LPAREN expression RPAREN .)
    EQUAL           reduce using rule 23 (factorExp -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 23 (factorExp -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 23 (factorExp -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 23 (factorExp -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 23 (factorExp -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 23 (factorExp -> LPAREN expression RPAREN .)
    COLON           reduce using rule 23 (factorExp -> LPAREN expression RPAREN .)


state 82

    (35) expressionVector -> LBRACKET vector_items RBRACKET .

    LBRACKET        reduce using rule 35 (expressionVector -> LBRACKET vector_items RBRACKET .)
    DOUBLE_AO       reduce using rule 35 (expressionVector -> LBRACKET vector_items RBRACKET .)
    AO              reduce using rule 35 (expressionVector -> LBRACKET vector_items RBRACKET .)
    COMP            reduce using rule 35 (expressionVector -> LBRACKET vector_items RBRACKET .)
    QUESTION        reduce using rule 35 (expressionVector -> LBRACKET vector_items RBRACKET .)
    BOOL_OP         reduce using rule 35 (expressionVector -> LBRACKET vector_items RBRACKET .)
    AOEQUAL         reduce using rule 35 (expressionVector -> LBRACKET vector_items RBRACKET .)
    EQUAL           reduce using rule 35 (expressionVector -> LBRACKET vector_items RBRACKET .)
    SEMICOLON       reduce using rule 35 (expressionVector -> LBRACKET vector_items RBRACKET .)
    RPAREN          reduce using rule 35 (expressionVector -> LBRACKET vector_items RBRACKET .)
    COMMA           reduce using rule 35 (expressionVector -> LBRACKET vector_items RBRACKET .)
    RBRACKET        reduce using rule 35 (expressionVector -> LBRACKET vector_items RBRACKET .)
    COLON           reduce using rule 35 (expressionVector -> LBRACKET vector_items RBRACKET .)
    RBRACE          reduce using rule 35 (expressionVector -> LBRACKET vector_items RBRACKET .)


state 83

    (36) vector_items -> expression COMMA . vector_items
    (36) vector_items -> . expression COMMA vector_items
    (37) vector_items -> . expression
    (10) expression -> . expressionAssign
    (41) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (42) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (43) expressionAssign -> . expressionTernaryCond
    (44) expressionAssign -> . expressionTernaryCond EQUAL LBRACE reg_items RBRACE
    (55) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (56) expressionTernaryCond -> . expressionBoolOp
    (29) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (30) expressionBoolOp -> . expressionComp
    (32) expressionComp -> . expressionComp COMP aritExp
    (33) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (31) unaryExp -> . NOT unaryExp
    (34) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . LPAREN expression RPAREN
    (24) factorExp -> . expressionFunction
    (26) factorNumExp -> . NUMBER
    (27) bool_atom -> . TRUE
    (28) bool_atom -> . FALSE
    (38) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (39) expressionVectorAt -> . expressionVector
    (40) expressionVectorAt -> . factorVar
    (60) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (61) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (62) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (63) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . PRINT LPAREN expression RPAREN
    (65) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (35) expressionVector -> . LBRACKET vector_items RBRACKET
    (25) factorVar -> . VAR

    AO              shift and go to state 2
    DOUBLE_AO       shift and go to state 37
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 8
    FALSE           shift and go to state 10
    MULTIPLICACIONESCALAR shift and go to state 9
    CAPITALIZAR     shift and go to state 6
    COLINEALES      shift and go to state 35
    PRINT           shift and go to state 13
    LENGTH          shift and go to state 5
    LBRACKET        shift and go to state 22
    VAR             shift and go to state 19

    expressionTernaryCond          shift and go to state 1
    unaryExp                       shift and go to state 30
    unaryExp2                      shift and go to state 21
    expressionBoolOp               shift and go to state 31
    factorVar                      shift and go to state 3
    bool_atom                      shift and go to state 34
    vector_items                   shift and go to state 103
    factorExp                      shift and go to state 4
    expressionVector               shift and go to state 26
    expressionComp                 shift and go to state 24
    factorNumExp                   shift and go to state 14
    expression                     shift and go to state 58
    expressionVectorAt             shift and go to state 39
    aritExp                        shift and go to state 17
    expressionFunction             shift and go to state 18
    expressionAssign               shift and go to state 43

state 84

    (58) for -> FOR LPAREN optional_expr . SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement

    SEMICOLON       shift and go to state 104


state 85

    (11) optional_expr -> expression .

    SEMICOLON       reduce using rule 11 (optional_expr -> expression .)
    RPAREN          reduce using rule 11 (optional_expr -> expression .)


state 86

    (32) expressionComp -> expressionComp COMP aritExp .
    (13) aritExp -> aritExp . AO unaryExp

    COMP            reduce using rule 32 (expressionComp -> expressionComp COMP aritExp .)
    QUESTION        reduce using rule 32 (expressionComp -> expressionComp COMP aritExp .)
    BOOL_OP         reduce using rule 32 (expressionComp -> expressionComp COMP aritExp .)
    AOEQUAL         reduce using rule 32 (expressionComp -> expressionComp COMP aritExp .)
    EQUAL           reduce using rule 32 (expressionComp -> expressionComp COMP aritExp .)
    SEMICOLON       reduce using rule 32 (expressionComp -> expressionComp COMP aritExp .)
    RPAREN          reduce using rule 32 (expressionComp -> expressionComp COMP aritExp .)
    COMMA           reduce using rule 32 (expressionComp -> expressionComp COMP aritExp .)
    COLON           reduce using rule 32 (expressionComp -> expressionComp COMP aritExp .)
    RBRACKET        reduce using rule 32 (expressionComp -> expressionComp COMP aritExp .)
    RBRACE          reduce using rule 32 (expressionComp -> expressionComp COMP aritExp .)
    AO              shift and go to state 54


state 87

    (49) block -> LBRACE code RBRACE .

    COMMENT         reduce using rule 49 (block -> LBRACE code RBRACE .)
    LBRACE          reduce using rule 49 (block -> LBRACE code RBRACE .)
    IF              reduce using rule 49 (block -> LBRACE code RBRACE .)
    WHILE           reduce using rule 49 (block -> LBRACE code RBRACE .)
    FOR             reduce using rule 49 (block -> LBRACE code RBRACE .)
    DO              reduce using rule 49 (block -> LBRACE code RBRACE .)
    AO              reduce using rule 49 (block -> LBRACE code RBRACE .)
    DOUBLE_AO       reduce using rule 49 (block -> LBRACE code RBRACE .)
    NOT             reduce using rule 49 (block -> LBRACE code RBRACE .)
    STRING          reduce using rule 49 (block -> LBRACE code RBRACE .)
    LPAREN          reduce using rule 49 (block -> LBRACE code RBRACE .)
    NUMBER          reduce using rule 49 (block -> LBRACE code RBRACE .)
    TRUE            reduce using rule 49 (block -> LBRACE code RBRACE .)
    FALSE           reduce using rule 49 (block -> LBRACE code RBRACE .)
    MULTIPLICACIONESCALAR reduce using rule 49 (block -> LBRACE code RBRACE .)
    CAPITALIZAR     reduce using rule 49 (block -> LBRACE code RBRACE .)
    COLINEALES      reduce using rule 49 (block -> LBRACE code RBRACE .)
    PRINT           reduce using rule 49 (block -> LBRACE code RBRACE .)
    LENGTH          reduce using rule 49 (block -> LBRACE code RBRACE .)
    LBRACKET        reduce using rule 49 (block -> LBRACE code RBRACE .)
    VAR             reduce using rule 49 (block -> LBRACE code RBRACE .)
    $end            reduce using rule 49 (block -> LBRACE code RBRACE .)
    RBRACE          reduce using rule 49 (block -> LBRACE code RBRACE .)
    ELSE            reduce using rule 49 (block -> LBRACE code RBRACE .)


state 88

    (29) expressionBoolOp -> expressionBoolOp BOOL_OP expressionComp .
    (32) expressionComp -> expressionComp . COMP aritExp

    QUESTION        reduce using rule 29 (expressionBoolOp -> expressionBoolOp BOOL_OP expressionComp .)
    BOOL_OP         reduce using rule 29 (expressionBoolOp -> expressionBoolOp BOOL_OP expressionComp .)
    AOEQUAL         reduce using rule 29 (expressionBoolOp -> expressionBoolOp BOOL_OP expressionComp .)
    EQUAL           reduce using rule 29 (expressionBoolOp -> expressionBoolOp BOOL_OP expressionComp .)
    COMMA           reduce using rule 29 (expressionBoolOp -> expressionBoolOp BOOL_OP expressionComp .)
    COLON           reduce using rule 29 (expressionBoolOp -> expressionBoolOp BOOL_OP expressionComp .)
    RPAREN          reduce using rule 29 (expressionBoolOp -> expressionBoolOp BOOL_OP expressionComp .)
    SEMICOLON       reduce using rule 29 (expressionBoolOp -> expressionBoolOp BOOL_OP expressionComp .)
    RBRACKET        reduce using rule 29 (expressionBoolOp -> expressionBoolOp BOOL_OP expressionComp .)
    RBRACE          reduce using rule 29 (expressionBoolOp -> expressionBoolOp BOOL_OP expressionComp .)
    COMP            shift and go to state 60


state 89

    (55) expressionTernaryCond -> expressionBoolOp QUESTION expression . COLON expression

    COLON           shift and go to state 105


state 90

    (63) expressionFunction -> COLINEALES LPAREN expression . COMMA expression RPAREN

    COMMA           shift and go to state 106


state 91

    (52) if -> IF LPAREN expression . RPAREN singleStatement else

    RPAREN          shift and go to state 107


state 92

    (50) singleStatement -> COMMENT singleStatement .

    WHILE           reduce using rule 50 (singleStatement -> COMMENT singleStatement .)
    ELSE            reduce using rule 50 (singleStatement -> COMMENT singleStatement .)
    COMMENT         reduce using rule 50 (singleStatement -> COMMENT singleStatement .)
    LBRACE          reduce using rule 50 (singleStatement -> COMMENT singleStatement .)
    IF              reduce using rule 50 (singleStatement -> COMMENT singleStatement .)
    FOR             reduce using rule 50 (singleStatement -> COMMENT singleStatement .)
    DO              reduce using rule 50 (singleStatement -> COMMENT singleStatement .)
    AO              reduce using rule 50 (singleStatement -> COMMENT singleStatement .)
    DOUBLE_AO       reduce using rule 50 (singleStatement -> COMMENT singleStatement .)
    NOT             reduce using rule 50 (singleStatement -> COMMENT singleStatement .)
    STRING          reduce using rule 50 (singleStatement -> COMMENT singleStatement .)
    LPAREN          reduce using rule 50 (singleStatement -> COMMENT singleStatement .)
    NUMBER          reduce using rule 50 (singleStatement -> COMMENT singleStatement .)
    TRUE            reduce using rule 50 (singleStatement -> COMMENT singleStatement .)
    FALSE           reduce using rule 50 (singleStatement -> COMMENT singleStatement .)
    MULTIPLICACIONESCALAR reduce using rule 50 (singleStatement -> COMMENT singleStatement .)
    CAPITALIZAR     reduce using rule 50 (singleStatement -> COMMENT singleStatement .)
    COLINEALES      reduce using rule 50 (singleStatement -> COMMENT singleStatement .)
    PRINT           reduce using rule 50 (singleStatement -> COMMENT singleStatement .)
    LENGTH          reduce using rule 50 (singleStatement -> COMMENT singleStatement .)
    LBRACKET        reduce using rule 50 (singleStatement -> COMMENT singleStatement .)
    VAR             reduce using rule 50 (singleStatement -> COMMENT singleStatement .)
    $end            reduce using rule 50 (singleStatement -> COMMENT singleStatement .)
    RBRACE          reduce using rule 50 (singleStatement -> COMMENT singleStatement .)


state 93

    (59) do_while -> DO singleStatement WHILE . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 108


state 94

    (38) expressionVectorAt -> expressionVectorAt LBRACKET expression . RBRACKET

    RBRACKET        shift and go to state 109


state 95

    (57) while -> WHILE LPAREN expression . RPAREN singleStatement

    RPAREN          shift and go to state 110


state 96

    (44) expressionAssign -> expressionTernaryCond EQUAL LBRACE reg_items . RBRACE

    RBRACE          shift and go to state 111


state 97

    (45) reg_items -> reg_field . COMMA reg_items
    (46) reg_items -> reg_field .

    COMMA           shift and go to state 112
    RBRACE          reduce using rule 46 (reg_items -> reg_field .)


state 98

    (47) reg_field -> factorVar . COLON expression

    COLON           shift and go to state 113


state 99

    (65) expressionFunction -> LENGTH LPAREN expression RPAREN .

    DOUBLE_AO       reduce using rule 65 (expressionFunction -> LENGTH LPAREN expression RPAREN .)
    AO              reduce using rule 65 (expressionFunction -> LENGTH LPAREN expression RPAREN .)
    COMP            reduce using rule 65 (expressionFunction -> LENGTH LPAREN expression RPAREN .)
    QUESTION        reduce using rule 65 (expressionFunction -> LENGTH LPAREN expression RPAREN .)
    BOOL_OP         reduce using rule 65 (expressionFunction -> LENGTH LPAREN expression RPAREN .)
    AOEQUAL         reduce using rule 65 (expressionFunction -> LENGTH LPAREN expression RPAREN .)
    EQUAL           reduce using rule 65 (expressionFunction -> LENGTH LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 65 (expressionFunction -> LENGTH LPAREN expression RPAREN .)
    RPAREN          reduce using rule 65 (expressionFunction -> LENGTH LPAREN expression RPAREN .)
    COMMA           reduce using rule 65 (expressionFunction -> LENGTH LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 65 (expressionFunction -> LENGTH LPAREN expression RPAREN .)
    COLON           reduce using rule 65 (expressionFunction -> LENGTH LPAREN expression RPAREN .)
    RBRACE          reduce using rule 65 (expressionFunction -> LENGTH LPAREN expression RPAREN .)


state 100

    (62) expressionFunction -> CAPITALIZAR LPAREN expression RPAREN .

    DOUBLE_AO       reduce using rule 62 (expressionFunction -> CAPITALIZAR LPAREN expression RPAREN .)
    AO              reduce using rule 62 (expressionFunction -> CAPITALIZAR LPAREN expression RPAREN .)
    COMP            reduce using rule 62 (expressionFunction -> CAPITALIZAR LPAREN expression RPAREN .)
    QUESTION        reduce using rule 62 (expressionFunction -> CAPITALIZAR LPAREN expression RPAREN .)
    BOOL_OP         reduce using rule 62 (expressionFunction -> CAPITALIZAR LPAREN expression RPAREN .)
    AOEQUAL         reduce using rule 62 (expressionFunction -> CAPITALIZAR LPAREN expression RPAREN .)
    EQUAL           reduce using rule 62 (expressionFunction -> CAPITALIZAR LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 62 (expressionFunction -> CAPITALIZAR LPAREN expression RPAREN .)
    RPAREN          reduce using rule 62 (expressionFunction -> CAPITALIZAR LPAREN expression RPAREN .)
    COMMA           reduce using rule 62 (expressionFunction -> CAPITALIZAR LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 62 (expressionFunction -> CAPITALIZAR LPAREN expression RPAREN .)
    COLON           reduce using rule 62 (expressionFunction -> CAPITALIZAR LPAREN expression RPAREN .)
    RBRACE          reduce using rule 62 (expressionFunction -> CAPITALIZAR LPAREN expression RPAREN .)


state 101

    (60) expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA . expression RPAREN
    (61) expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA . expression COMMA expression RPAREN
    (10) expression -> . expressionAssign
    (41) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (42) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (43) expressionAssign -> . expressionTernaryCond
    (44) expressionAssign -> . expressionTernaryCond EQUAL LBRACE reg_items RBRACE
    (55) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (56) expressionTernaryCond -> . expressionBoolOp
    (29) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (30) expressionBoolOp -> . expressionComp
    (32) expressionComp -> . expressionComp COMP aritExp
    (33) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (31) unaryExp -> . NOT unaryExp
    (34) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . LPAREN expression RPAREN
    (24) factorExp -> . expressionFunction
    (26) factorNumExp -> . NUMBER
    (27) bool_atom -> . TRUE
    (28) bool_atom -> . FALSE
    (38) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (39) expressionVectorAt -> . expressionVector
    (40) expressionVectorAt -> . factorVar
    (60) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (61) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (62) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (63) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . PRINT LPAREN expression RPAREN
    (65) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (35) expressionVector -> . LBRACKET vector_items RBRACKET
    (25) factorVar -> . VAR

    AO              shift and go to state 2
    DOUBLE_AO       shift and go to state 37
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 8
    FALSE           shift and go to state 10
    MULTIPLICACIONESCALAR shift and go to state 9
    CAPITALIZAR     shift and go to state 6
    COLINEALES      shift and go to state 35
    PRINT           shift and go to state 13
    LENGTH          shift and go to state 5
    LBRACKET        shift and go to state 22
    VAR             shift and go to state 19

    expressionTernaryCond          shift and go to state 1
    unaryExp                       shift and go to state 30
    unaryExp2                      shift and go to state 21
    expressionBoolOp               shift and go to state 31
    factorVar                      shift and go to state 3
    bool_atom                      shift and go to state 34
    factorExp                      shift and go to state 4
    expressionVector               shift and go to state 26
    expressionComp                 shift and go to state 24
    factorNumExp                   shift and go to state 14
    expression                     shift and go to state 114
    expressionVectorAt             shift and go to state 39
    aritExp                        shift and go to state 17
    expressionFunction             shift and go to state 18
    expressionAssign               shift and go to state 43

state 102

    (64) expressionFunction -> PRINT LPAREN expression RPAREN .

    DOUBLE_AO       reduce using rule 64 (expressionFunction -> PRINT LPAREN expression RPAREN .)
    AO              reduce using rule 64 (expressionFunction -> PRINT LPAREN expression RPAREN .)
    COMP            reduce using rule 64 (expressionFunction -> PRINT LPAREN expression RPAREN .)
    QUESTION        reduce using rule 64 (expressionFunction -> PRINT LPAREN expression RPAREN .)
    BOOL_OP         reduce using rule 64 (expressionFunction -> PRINT LPAREN expression RPAREN .)
    AOEQUAL         reduce using rule 64 (expressionFunction -> PRINT LPAREN expression RPAREN .)
    EQUAL           reduce using rule 64 (expressionFunction -> PRINT LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 64 (expressionFunction -> PRINT LPAREN expression RPAREN .)
    RPAREN          reduce using rule 64 (expressionFunction -> PRINT LPAREN expression RPAREN .)
    COMMA           reduce using rule 64 (expressionFunction -> PRINT LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 64 (expressionFunction -> PRINT LPAREN expression RPAREN .)
    COLON           reduce using rule 64 (expressionFunction -> PRINT LPAREN expression RPAREN .)
    RBRACE          reduce using rule 64 (expressionFunction -> PRINT LPAREN expression RPAREN .)


state 103

    (36) vector_items -> expression COMMA vector_items .

    RBRACKET        reduce using rule 36 (vector_items -> expression COMMA vector_items .)


state 104

    (58) for -> FOR LPAREN optional_expr SEMICOLON . expression SEMICOLON optional_expr RPAREN singleStatement
    (10) expression -> . expressionAssign
    (41) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (42) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (43) expressionAssign -> . expressionTernaryCond
    (44) expressionAssign -> . expressionTernaryCond EQUAL LBRACE reg_items RBRACE
    (55) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (56) expressionTernaryCond -> . expressionBoolOp
    (29) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (30) expressionBoolOp -> . expressionComp
    (32) expressionComp -> . expressionComp COMP aritExp
    (33) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (31) unaryExp -> . NOT unaryExp
    (34) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . LPAREN expression RPAREN
    (24) factorExp -> . expressionFunction
    (26) factorNumExp -> . NUMBER
    (27) bool_atom -> . TRUE
    (28) bool_atom -> . FALSE
    (38) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (39) expressionVectorAt -> . expressionVector
    (40) expressionVectorAt -> . factorVar
    (60) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (61) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (62) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (63) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . PRINT LPAREN expression RPAREN
    (65) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (35) expressionVector -> . LBRACKET vector_items RBRACKET
    (25) factorVar -> . VAR

    AO              shift and go to state 2
    DOUBLE_AO       shift and go to state 37
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 8
    FALSE           shift and go to state 10
    MULTIPLICACIONESCALAR shift and go to state 9
    CAPITALIZAR     shift and go to state 6
    COLINEALES      shift and go to state 35
    PRINT           shift and go to state 13
    LENGTH          shift and go to state 5
    LBRACKET        shift and go to state 22
    VAR             shift and go to state 19

    expressionTernaryCond          shift and go to state 1
    unaryExp                       shift and go to state 30
    unaryExp2                      shift and go to state 21
    expressionBoolOp               shift and go to state 31
    factorExp                      shift and go to state 4
    factorVar                      shift and go to state 3
    bool_atom                      shift and go to state 34
    expressionComp                 shift and go to state 24
    expressionVector               shift and go to state 26
    factorNumExp                   shift and go to state 14
    expression                     shift and go to state 115
    expressionVectorAt             shift and go to state 39
    aritExp                        shift and go to state 17
    expressionFunction             shift and go to state 18
    expressionAssign               shift and go to state 43

state 105

    (55) expressionTernaryCond -> expressionBoolOp QUESTION expression COLON . expression
    (10) expression -> . expressionAssign
    (41) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (42) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (43) expressionAssign -> . expressionTernaryCond
    (44) expressionAssign -> . expressionTernaryCond EQUAL LBRACE reg_items RBRACE
    (55) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (56) expressionTernaryCond -> . expressionBoolOp
    (29) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (30) expressionBoolOp -> . expressionComp
    (32) expressionComp -> . expressionComp COMP aritExp
    (33) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (31) unaryExp -> . NOT unaryExp
    (34) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . LPAREN expression RPAREN
    (24) factorExp -> . expressionFunction
    (26) factorNumExp -> . NUMBER
    (27) bool_atom -> . TRUE
    (28) bool_atom -> . FALSE
    (38) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (39) expressionVectorAt -> . expressionVector
    (40) expressionVectorAt -> . factorVar
    (60) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (61) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (62) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (63) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . PRINT LPAREN expression RPAREN
    (65) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (35) expressionVector -> . LBRACKET vector_items RBRACKET
    (25) factorVar -> . VAR

    AO              shift and go to state 2
    DOUBLE_AO       shift and go to state 37
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 8
    FALSE           shift and go to state 10
    MULTIPLICACIONESCALAR shift and go to state 9
    CAPITALIZAR     shift and go to state 6
    COLINEALES      shift and go to state 35
    PRINT           shift and go to state 13
    LENGTH          shift and go to state 5
    LBRACKET        shift and go to state 22
    VAR             shift and go to state 19

    expressionTernaryCond          shift and go to state 1
    unaryExp                       shift and go to state 30
    unaryExp2                      shift and go to state 21
    expressionBoolOp               shift and go to state 31
    factorVar                      shift and go to state 3
    bool_atom                      shift and go to state 34
    factorExp                      shift and go to state 4
    expressionVector               shift and go to state 26
    expressionComp                 shift and go to state 24
    factorNumExp                   shift and go to state 14
    expression                     shift and go to state 116
    expressionVectorAt             shift and go to state 39
    aritExp                        shift and go to state 17
    expressionFunction             shift and go to state 18
    expressionAssign               shift and go to state 43

state 106

    (63) expressionFunction -> COLINEALES LPAREN expression COMMA . expression RPAREN
    (10) expression -> . expressionAssign
    (41) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (42) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (43) expressionAssign -> . expressionTernaryCond
    (44) expressionAssign -> . expressionTernaryCond EQUAL LBRACE reg_items RBRACE
    (55) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (56) expressionTernaryCond -> . expressionBoolOp
    (29) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (30) expressionBoolOp -> . expressionComp
    (32) expressionComp -> . expressionComp COMP aritExp
    (33) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (31) unaryExp -> . NOT unaryExp
    (34) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . LPAREN expression RPAREN
    (24) factorExp -> . expressionFunction
    (26) factorNumExp -> . NUMBER
    (27) bool_atom -> . TRUE
    (28) bool_atom -> . FALSE
    (38) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (39) expressionVectorAt -> . expressionVector
    (40) expressionVectorAt -> . factorVar
    (60) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (61) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (62) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (63) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . PRINT LPAREN expression RPAREN
    (65) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (35) expressionVector -> . LBRACKET vector_items RBRACKET
    (25) factorVar -> . VAR

    AO              shift and go to state 2
    DOUBLE_AO       shift and go to state 37
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 8
    FALSE           shift and go to state 10
    MULTIPLICACIONESCALAR shift and go to state 9
    CAPITALIZAR     shift and go to state 6
    COLINEALES      shift and go to state 35
    PRINT           shift and go to state 13
    LENGTH          shift and go to state 5
    LBRACKET        shift and go to state 22
    VAR             shift and go to state 19

    expressionTernaryCond          shift and go to state 1
    unaryExp                       shift and go to state 30
    unaryExp2                      shift and go to state 21
    expressionBoolOp               shift and go to state 31
    factorVar                      shift and go to state 3
    bool_atom                      shift and go to state 34
    factorExp                      shift and go to state 4
    expressionVector               shift and go to state 26
    expressionComp                 shift and go to state 24
    factorNumExp                   shift and go to state 14
    expression                     shift and go to state 117
    expressionVectorAt             shift and go to state 39
    aritExp                        shift and go to state 17
    expressionFunction             shift and go to state 18
    expressionAssign               shift and go to state 43

state 107

    (52) if -> IF LPAREN expression RPAREN . singleStatement else
    (50) singleStatement -> . COMMENT singleStatement
    (51) singleStatement -> . statement
    (4) statement -> . expression SEMICOLON
    (5) statement -> . block
    (6) statement -> . if
    (7) statement -> . while
    (8) statement -> . for
    (9) statement -> . do_while
    (10) expression -> . expressionAssign
    (49) block -> . LBRACE code RBRACE
    (52) if -> . IF LPAREN expression RPAREN singleStatement else
    (57) while -> . WHILE LPAREN expression RPAREN singleStatement
    (58) for -> . FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement
    (59) do_while -> . DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON
    (41) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (42) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (43) expressionAssign -> . expressionTernaryCond
    (44) expressionAssign -> . expressionTernaryCond EQUAL LBRACE reg_items RBRACE
    (55) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (56) expressionTernaryCond -> . expressionBoolOp
    (29) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (30) expressionBoolOp -> . expressionComp
    (32) expressionComp -> . expressionComp COMP aritExp
    (33) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (31) unaryExp -> . NOT unaryExp
    (34) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . LPAREN expression RPAREN
    (24) factorExp -> . expressionFunction
    (26) factorNumExp -> . NUMBER
    (27) bool_atom -> . TRUE
    (28) bool_atom -> . FALSE
    (38) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (39) expressionVectorAt -> . expressionVector
    (40) expressionVectorAt -> . factorVar
    (60) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (61) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (62) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (63) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . PRINT LPAREN expression RPAREN
    (65) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (35) expressionVector -> . LBRACKET vector_items RBRACKET
    (25) factorVar -> . VAR

    COMMENT         shift and go to state 68
    LBRACE          shift and go to state 27
    IF              shift and go to state 36
    WHILE           shift and go to state 40
    FOR             shift and go to state 23
    DO              shift and go to state 38
    AO              shift and go to state 2
    DOUBLE_AO       shift and go to state 37
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 8
    FALSE           shift and go to state 10
    MULTIPLICACIONESCALAR shift and go to state 9
    CAPITALIZAR     shift and go to state 6
    COLINEALES      shift and go to state 35
    PRINT           shift and go to state 13
    LENGTH          shift and go to state 5
    LBRACKET        shift and go to state 22
    VAR             shift and go to state 19

    expressionTernaryCond          shift and go to state 1
    unaryExp2                      shift and go to state 21
    expressionComp                 shift and go to state 24
    factorVar                      shift and go to state 3
    factorExp                      shift and go to state 4
    expressionVector               shift and go to state 26
    block                          shift and go to state 29
    unaryExp                       shift and go to state 30
    statement                      shift and go to state 70
    expressionBoolOp               shift and go to state 31
    while                          shift and go to state 32
    if                             shift and go to state 28
    bool_atom                      shift and go to state 34
    for                            shift and go to state 41
    expressionFunction             shift and go to state 18
    factorNumExp                   shift and go to state 14
    do_while                       shift and go to state 15
    expression                     shift and go to state 16
    singleStatement                shift and go to state 118
    expressionVectorAt             shift and go to state 39
    aritExp                        shift and go to state 17
    expressionAssign               shift and go to state 43

state 108

    (59) do_while -> DO singleStatement WHILE LPAREN . expression RPAREN SEMICOLON
    (10) expression -> . expressionAssign
    (41) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (42) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (43) expressionAssign -> . expressionTernaryCond
    (44) expressionAssign -> . expressionTernaryCond EQUAL LBRACE reg_items RBRACE
    (55) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (56) expressionTernaryCond -> . expressionBoolOp
    (29) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (30) expressionBoolOp -> . expressionComp
    (32) expressionComp -> . expressionComp COMP aritExp
    (33) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (31) unaryExp -> . NOT unaryExp
    (34) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . LPAREN expression RPAREN
    (24) factorExp -> . expressionFunction
    (26) factorNumExp -> . NUMBER
    (27) bool_atom -> . TRUE
    (28) bool_atom -> . FALSE
    (38) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (39) expressionVectorAt -> . expressionVector
    (40) expressionVectorAt -> . factorVar
    (60) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (61) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (62) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (63) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . PRINT LPAREN expression RPAREN
    (65) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (35) expressionVector -> . LBRACKET vector_items RBRACKET
    (25) factorVar -> . VAR

    AO              shift and go to state 2
    DOUBLE_AO       shift and go to state 37
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 8
    FALSE           shift and go to state 10
    MULTIPLICACIONESCALAR shift and go to state 9
    CAPITALIZAR     shift and go to state 6
    COLINEALES      shift and go to state 35
    PRINT           shift and go to state 13
    LENGTH          shift and go to state 5
    LBRACKET        shift and go to state 22
    VAR             shift and go to state 19

    expressionTernaryCond          shift and go to state 1
    unaryExp                       shift and go to state 30
    unaryExp2                      shift and go to state 21
    expressionBoolOp               shift and go to state 31
    factorVar                      shift and go to state 3
    bool_atom                      shift and go to state 34
    factorExp                      shift and go to state 4
    expressionVector               shift and go to state 26
    expressionComp                 shift and go to state 24
    factorNumExp                   shift and go to state 14
    expression                     shift and go to state 119
    expressionVectorAt             shift and go to state 39
    aritExp                        shift and go to state 17
    expressionFunction             shift and go to state 18
    expressionAssign               shift and go to state 43

state 109

    (38) expressionVectorAt -> expressionVectorAt LBRACKET expression RBRACKET .

    LBRACKET        reduce using rule 38 (expressionVectorAt -> expressionVectorAt LBRACKET expression RBRACKET .)
    DOUBLE_AO       reduce using rule 38 (expressionVectorAt -> expressionVectorAt LBRACKET expression RBRACKET .)
    AO              reduce using rule 38 (expressionVectorAt -> expressionVectorAt LBRACKET expression RBRACKET .)
    COMP            reduce using rule 38 (expressionVectorAt -> expressionVectorAt LBRACKET expression RBRACKET .)
    QUESTION        reduce using rule 38 (expressionVectorAt -> expressionVectorAt LBRACKET expression RBRACKET .)
    BOOL_OP         reduce using rule 38 (expressionVectorAt -> expressionVectorAt LBRACKET expression RBRACKET .)
    AOEQUAL         reduce using rule 38 (expressionVectorAt -> expressionVectorAt LBRACKET expression RBRACKET .)
    EQUAL           reduce using rule 38 (expressionVectorAt -> expressionVectorAt LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 38 (expressionVectorAt -> expressionVectorAt LBRACKET expression RBRACKET .)
    SEMICOLON       reduce using rule 38 (expressionVectorAt -> expressionVectorAt LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 38 (expressionVectorAt -> expressionVectorAt LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 38 (expressionVectorAt -> expressionVectorAt LBRACKET expression RBRACKET .)
    COLON           reduce using rule 38 (expressionVectorAt -> expressionVectorAt LBRACKET expression RBRACKET .)
    RBRACE          reduce using rule 38 (expressionVectorAt -> expressionVectorAt LBRACKET expression RBRACKET .)


state 110

    (57) while -> WHILE LPAREN expression RPAREN . singleStatement
    (50) singleStatement -> . COMMENT singleStatement
    (51) singleStatement -> . statement
    (4) statement -> . expression SEMICOLON
    (5) statement -> . block
    (6) statement -> . if
    (7) statement -> . while
    (8) statement -> . for
    (9) statement -> . do_while
    (10) expression -> . expressionAssign
    (49) block -> . LBRACE code RBRACE
    (52) if -> . IF LPAREN expression RPAREN singleStatement else
    (57) while -> . WHILE LPAREN expression RPAREN singleStatement
    (58) for -> . FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement
    (59) do_while -> . DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON
    (41) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (42) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (43) expressionAssign -> . expressionTernaryCond
    (44) expressionAssign -> . expressionTernaryCond EQUAL LBRACE reg_items RBRACE
    (55) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (56) expressionTernaryCond -> . expressionBoolOp
    (29) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (30) expressionBoolOp -> . expressionComp
    (32) expressionComp -> . expressionComp COMP aritExp
    (33) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (31) unaryExp -> . NOT unaryExp
    (34) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . LPAREN expression RPAREN
    (24) factorExp -> . expressionFunction
    (26) factorNumExp -> . NUMBER
    (27) bool_atom -> . TRUE
    (28) bool_atom -> . FALSE
    (38) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (39) expressionVectorAt -> . expressionVector
    (40) expressionVectorAt -> . factorVar
    (60) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (61) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (62) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (63) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . PRINT LPAREN expression RPAREN
    (65) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (35) expressionVector -> . LBRACKET vector_items RBRACKET
    (25) factorVar -> . VAR

    COMMENT         shift and go to state 68
    LBRACE          shift and go to state 27
    IF              shift and go to state 36
    WHILE           shift and go to state 40
    FOR             shift and go to state 23
    DO              shift and go to state 38
    AO              shift and go to state 2
    DOUBLE_AO       shift and go to state 37
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 8
    FALSE           shift and go to state 10
    MULTIPLICACIONESCALAR shift and go to state 9
    CAPITALIZAR     shift and go to state 6
    COLINEALES      shift and go to state 35
    PRINT           shift and go to state 13
    LENGTH          shift and go to state 5
    LBRACKET        shift and go to state 22
    VAR             shift and go to state 19

    expressionTernaryCond          shift and go to state 1
    unaryExp2                      shift and go to state 21
    expressionComp                 shift and go to state 24
    factorVar                      shift and go to state 3
    factorExp                      shift and go to state 4
    expressionVector               shift and go to state 26
    if                             shift and go to state 28
    block                          shift and go to state 29
    unaryExp                       shift and go to state 30
    statement                      shift and go to state 70
    expressionBoolOp               shift and go to state 31
    while                          shift and go to state 32
    bool_atom                      shift and go to state 34
    for                            shift and go to state 41
    expressionFunction             shift and go to state 18
    factorNumExp                   shift and go to state 14
    do_while                       shift and go to state 15
    expression                     shift and go to state 16
    singleStatement                shift and go to state 120
    expressionVectorAt             shift and go to state 39
    aritExp                        shift and go to state 17
    expressionAssign               shift and go to state 43

state 111

    (44) expressionAssign -> expressionTernaryCond EQUAL LBRACE reg_items RBRACE .

    RPAREN          reduce using rule 44 (expressionAssign -> expressionTernaryCond EQUAL LBRACE reg_items RBRACE .)
    SEMICOLON       reduce using rule 44 (expressionAssign -> expressionTernaryCond EQUAL LBRACE reg_items RBRACE .)
    COMMA           reduce using rule 44 (expressionAssign -> expressionTernaryCond EQUAL LBRACE reg_items RBRACE .)
    RBRACKET        reduce using rule 44 (expressionAssign -> expressionTernaryCond EQUAL LBRACE reg_items RBRACE .)
    AOEQUAL         reduce using rule 44 (expressionAssign -> expressionTernaryCond EQUAL LBRACE reg_items RBRACE .)
    EQUAL           reduce using rule 44 (expressionAssign -> expressionTernaryCond EQUAL LBRACE reg_items RBRACE .)
    COLON           reduce using rule 44 (expressionAssign -> expressionTernaryCond EQUAL LBRACE reg_items RBRACE .)
    RBRACE          reduce using rule 44 (expressionAssign -> expressionTernaryCond EQUAL LBRACE reg_items RBRACE .)


state 112

    (45) reg_items -> reg_field COMMA . reg_items
    (45) reg_items -> . reg_field COMMA reg_items
    (46) reg_items -> . reg_field
    (47) reg_field -> . factorVar COLON expression
    (25) factorVar -> . VAR

    VAR             shift and go to state 19

    reg_items                      shift and go to state 121
    reg_field                      shift and go to state 97
    factorVar                      shift and go to state 98

state 113

    (47) reg_field -> factorVar COLON . expression
    (10) expression -> . expressionAssign
    (41) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (42) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (43) expressionAssign -> . expressionTernaryCond
    (44) expressionAssign -> . expressionTernaryCond EQUAL LBRACE reg_items RBRACE
    (55) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (56) expressionTernaryCond -> . expressionBoolOp
    (29) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (30) expressionBoolOp -> . expressionComp
    (32) expressionComp -> . expressionComp COMP aritExp
    (33) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (31) unaryExp -> . NOT unaryExp
    (34) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . LPAREN expression RPAREN
    (24) factorExp -> . expressionFunction
    (26) factorNumExp -> . NUMBER
    (27) bool_atom -> . TRUE
    (28) bool_atom -> . FALSE
    (38) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (39) expressionVectorAt -> . expressionVector
    (40) expressionVectorAt -> . factorVar
    (60) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (61) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (62) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (63) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . PRINT LPAREN expression RPAREN
    (65) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (35) expressionVector -> . LBRACKET vector_items RBRACKET
    (25) factorVar -> . VAR

    AO              shift and go to state 2
    DOUBLE_AO       shift and go to state 37
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 8
    FALSE           shift and go to state 10
    MULTIPLICACIONESCALAR shift and go to state 9
    CAPITALIZAR     shift and go to state 6
    COLINEALES      shift and go to state 35
    PRINT           shift and go to state 13
    LENGTH          shift and go to state 5
    LBRACKET        shift and go to state 22
    VAR             shift and go to state 19

    expressionTernaryCond          shift and go to state 1
    unaryExp                       shift and go to state 30
    unaryExp2                      shift and go to state 21
    expressionBoolOp               shift and go to state 31
    factorVar                      shift and go to state 3
    bool_atom                      shift and go to state 34
    factorExp                      shift and go to state 4
    expressionVector               shift and go to state 26
    expressionComp                 shift and go to state 24
    factorNumExp                   shift and go to state 14
    expression                     shift and go to state 122
    expressionVectorAt             shift and go to state 39
    aritExp                        shift and go to state 17
    expressionFunction             shift and go to state 18
    expressionAssign               shift and go to state 43

state 114

    (60) expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression . RPAREN
    (61) expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression . COMMA expression RPAREN

    RPAREN          shift and go to state 123
    COMMA           shift and go to state 124


state 115

    (58) for -> FOR LPAREN optional_expr SEMICOLON expression . SEMICOLON optional_expr RPAREN singleStatement

    SEMICOLON       shift and go to state 125


state 116

    (55) expressionTernaryCond -> expressionBoolOp QUESTION expression COLON expression .

    AOEQUAL         reduce using rule 55 (expressionTernaryCond -> expressionBoolOp QUESTION expression COLON expression .)
    EQUAL           reduce using rule 55 (expressionTernaryCond -> expressionBoolOp QUESTION expression COLON expression .)
    SEMICOLON       reduce using rule 55 (expressionTernaryCond -> expressionBoolOp QUESTION expression COLON expression .)
    RPAREN          reduce using rule 55 (expressionTernaryCond -> expressionBoolOp QUESTION expression COLON expression .)
    COMMA           reduce using rule 55 (expressionTernaryCond -> expressionBoolOp QUESTION expression COLON expression .)
    RBRACKET        reduce using rule 55 (expressionTernaryCond -> expressionBoolOp QUESTION expression COLON expression .)
    COLON           reduce using rule 55 (expressionTernaryCond -> expressionBoolOp QUESTION expression COLON expression .)
    RBRACE          reduce using rule 55 (expressionTernaryCond -> expressionBoolOp QUESTION expression COLON expression .)


state 117

    (63) expressionFunction -> COLINEALES LPAREN expression COMMA expression . RPAREN

    RPAREN          shift and go to state 126


state 118

    (52) if -> IF LPAREN expression RPAREN singleStatement . else
    (53) else -> . ELSE singleStatement
    (54) else -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 127
    WHILE           reduce using rule 54 (else -> .)
    COMMENT         reduce using rule 54 (else -> .)
    LBRACE          reduce using rule 54 (else -> .)
    IF              reduce using rule 54 (else -> .)
    FOR             reduce using rule 54 (else -> .)
    DO              reduce using rule 54 (else -> .)
    AO              reduce using rule 54 (else -> .)
    DOUBLE_AO       reduce using rule 54 (else -> .)
    NOT             reduce using rule 54 (else -> .)
    STRING          reduce using rule 54 (else -> .)
    LPAREN          reduce using rule 54 (else -> .)
    NUMBER          reduce using rule 54 (else -> .)
    TRUE            reduce using rule 54 (else -> .)
    FALSE           reduce using rule 54 (else -> .)
    MULTIPLICACIONESCALAR reduce using rule 54 (else -> .)
    CAPITALIZAR     reduce using rule 54 (else -> .)
    COLINEALES      reduce using rule 54 (else -> .)
    PRINT           reduce using rule 54 (else -> .)
    LENGTH          reduce using rule 54 (else -> .)
    LBRACKET        reduce using rule 54 (else -> .)
    VAR             reduce using rule 54 (else -> .)
    $end            reduce using rule 54 (else -> .)
    RBRACE          reduce using rule 54 (else -> .)

  ! ELSE            [ reduce using rule 54 (else -> .) ]

    else                           shift and go to state 128

state 119

    (59) do_while -> DO singleStatement WHILE LPAREN expression . RPAREN SEMICOLON

    RPAREN          shift and go to state 129


state 120

    (57) while -> WHILE LPAREN expression RPAREN singleStatement .

    WHILE           reduce using rule 57 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    ELSE            reduce using rule 57 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    COMMENT         reduce using rule 57 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    LBRACE          reduce using rule 57 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    IF              reduce using rule 57 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    FOR             reduce using rule 57 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    DO              reduce using rule 57 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    AO              reduce using rule 57 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    DOUBLE_AO       reduce using rule 57 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    NOT             reduce using rule 57 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    STRING          reduce using rule 57 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    LPAREN          reduce using rule 57 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    NUMBER          reduce using rule 57 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    TRUE            reduce using rule 57 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    FALSE           reduce using rule 57 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    MULTIPLICACIONESCALAR reduce using rule 57 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    CAPITALIZAR     reduce using rule 57 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    COLINEALES      reduce using rule 57 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    PRINT           reduce using rule 57 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    LENGTH          reduce using rule 57 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    LBRACKET        reduce using rule 57 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    VAR             reduce using rule 57 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    $end            reduce using rule 57 (while -> WHILE LPAREN expression RPAREN singleStatement .)
    RBRACE          reduce using rule 57 (while -> WHILE LPAREN expression RPAREN singleStatement .)


state 121

    (45) reg_items -> reg_field COMMA reg_items .

    RBRACE          reduce using rule 45 (reg_items -> reg_field COMMA reg_items .)


state 122

    (47) reg_field -> factorVar COLON expression .

    COMMA           reduce using rule 47 (reg_field -> factorVar COLON expression .)
    RBRACE          reduce using rule 47 (reg_field -> factorVar COLON expression .)


state 123

    (60) expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN .

    DOUBLE_AO       reduce using rule 60 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN .)
    AO              reduce using rule 60 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN .)
    COMP            reduce using rule 60 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN .)
    QUESTION        reduce using rule 60 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN .)
    BOOL_OP         reduce using rule 60 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN .)
    AOEQUAL         reduce using rule 60 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN .)
    EQUAL           reduce using rule 60 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN .)
    SEMICOLON       reduce using rule 60 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN .)
    RPAREN          reduce using rule 60 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN .)
    COMMA           reduce using rule 60 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN .)
    RBRACKET        reduce using rule 60 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN .)
    COLON           reduce using rule 60 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN .)
    RBRACE          reduce using rule 60 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN .)


state 124

    (61) expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA . expression RPAREN
    (10) expression -> . expressionAssign
    (41) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (42) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (43) expressionAssign -> . expressionTernaryCond
    (44) expressionAssign -> . expressionTernaryCond EQUAL LBRACE reg_items RBRACE
    (55) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (56) expressionTernaryCond -> . expressionBoolOp
    (29) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (30) expressionBoolOp -> . expressionComp
    (32) expressionComp -> . expressionComp COMP aritExp
    (33) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (31) unaryExp -> . NOT unaryExp
    (34) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . LPAREN expression RPAREN
    (24) factorExp -> . expressionFunction
    (26) factorNumExp -> . NUMBER
    (27) bool_atom -> . TRUE
    (28) bool_atom -> . FALSE
    (38) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (39) expressionVectorAt -> . expressionVector
    (40) expressionVectorAt -> . factorVar
    (60) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (61) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (62) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (63) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . PRINT LPAREN expression RPAREN
    (65) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (35) expressionVector -> . LBRACKET vector_items RBRACKET
    (25) factorVar -> . VAR

    AO              shift and go to state 2
    DOUBLE_AO       shift and go to state 37
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 8
    FALSE           shift and go to state 10
    MULTIPLICACIONESCALAR shift and go to state 9
    CAPITALIZAR     shift and go to state 6
    COLINEALES      shift and go to state 35
    PRINT           shift and go to state 13
    LENGTH          shift and go to state 5
    LBRACKET        shift and go to state 22
    VAR             shift and go to state 19

    expressionTernaryCond          shift and go to state 1
    unaryExp                       shift and go to state 30
    unaryExp2                      shift and go to state 21
    expressionBoolOp               shift and go to state 31
    factorVar                      shift and go to state 3
    bool_atom                      shift and go to state 34
    factorExp                      shift and go to state 4
    expressionVector               shift and go to state 26
    expressionComp                 shift and go to state 24
    factorNumExp                   shift and go to state 14
    expression                     shift and go to state 130
    expressionVectorAt             shift and go to state 39
    aritExp                        shift and go to state 17
    expressionFunction             shift and go to state 18
    expressionAssign               shift and go to state 43

state 125

    (58) for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON . optional_expr RPAREN singleStatement
    (11) optional_expr -> . expression
    (12) optional_expr -> .
    (10) expression -> . expressionAssign
    (41) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (42) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (43) expressionAssign -> . expressionTernaryCond
    (44) expressionAssign -> . expressionTernaryCond EQUAL LBRACE reg_items RBRACE
    (55) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (56) expressionTernaryCond -> . expressionBoolOp
    (29) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (30) expressionBoolOp -> . expressionComp
    (32) expressionComp -> . expressionComp COMP aritExp
    (33) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (31) unaryExp -> . NOT unaryExp
    (34) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . LPAREN expression RPAREN
    (24) factorExp -> . expressionFunction
    (26) factorNumExp -> . NUMBER
    (27) bool_atom -> . TRUE
    (28) bool_atom -> . FALSE
    (38) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (39) expressionVectorAt -> . expressionVector
    (40) expressionVectorAt -> . factorVar
    (60) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (61) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (62) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (63) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . PRINT LPAREN expression RPAREN
    (65) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (35) expressionVector -> . LBRACKET vector_items RBRACKET
    (25) factorVar -> . VAR

    RPAREN          reduce using rule 12 (optional_expr -> .)
    AO              shift and go to state 2
    DOUBLE_AO       shift and go to state 37
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 8
    FALSE           shift and go to state 10
    MULTIPLICACIONESCALAR shift and go to state 9
    CAPITALIZAR     shift and go to state 6
    COLINEALES      shift and go to state 35
    PRINT           shift and go to state 13
    LENGTH          shift and go to state 5
    LBRACKET        shift and go to state 22
    VAR             shift and go to state 19

    expressionTernaryCond          shift and go to state 1
    unaryExp                       shift and go to state 30
    unaryExp2                      shift and go to state 21
    expressionBoolOp               shift and go to state 31
    factorExp                      shift and go to state 4
    factorVar                      shift and go to state 3
    bool_atom                      shift and go to state 34
    expressionComp                 shift and go to state 24
    expressionVector               shift and go to state 26
    factorNumExp                   shift and go to state 14
    expression                     shift and go to state 85
    optional_expr                  shift and go to state 131
    expressionVectorAt             shift and go to state 39
    aritExp                        shift and go to state 17
    expressionFunction             shift and go to state 18
    expressionAssign               shift and go to state 43

state 126

    (63) expressionFunction -> COLINEALES LPAREN expression COMMA expression RPAREN .

    DOUBLE_AO       reduce using rule 63 (expressionFunction -> COLINEALES LPAREN expression COMMA expression RPAREN .)
    AO              reduce using rule 63 (expressionFunction -> COLINEALES LPAREN expression COMMA expression RPAREN .)
    COMP            reduce using rule 63 (expressionFunction -> COLINEALES LPAREN expression COMMA expression RPAREN .)
    QUESTION        reduce using rule 63 (expressionFunction -> COLINEALES LPAREN expression COMMA expression RPAREN .)
    BOOL_OP         reduce using rule 63 (expressionFunction -> COLINEALES LPAREN expression COMMA expression RPAREN .)
    AOEQUAL         reduce using rule 63 (expressionFunction -> COLINEALES LPAREN expression COMMA expression RPAREN .)
    EQUAL           reduce using rule 63 (expressionFunction -> COLINEALES LPAREN expression COMMA expression RPAREN .)
    SEMICOLON       reduce using rule 63 (expressionFunction -> COLINEALES LPAREN expression COMMA expression RPAREN .)
    RPAREN          reduce using rule 63 (expressionFunction -> COLINEALES LPAREN expression COMMA expression RPAREN .)
    COMMA           reduce using rule 63 (expressionFunction -> COLINEALES LPAREN expression COMMA expression RPAREN .)
    RBRACKET        reduce using rule 63 (expressionFunction -> COLINEALES LPAREN expression COMMA expression RPAREN .)
    COLON           reduce using rule 63 (expressionFunction -> COLINEALES LPAREN expression COMMA expression RPAREN .)
    RBRACE          reduce using rule 63 (expressionFunction -> COLINEALES LPAREN expression COMMA expression RPAREN .)


state 127

    (53) else -> ELSE . singleStatement
    (50) singleStatement -> . COMMENT singleStatement
    (51) singleStatement -> . statement
    (4) statement -> . expression SEMICOLON
    (5) statement -> . block
    (6) statement -> . if
    (7) statement -> . while
    (8) statement -> . for
    (9) statement -> . do_while
    (10) expression -> . expressionAssign
    (49) block -> . LBRACE code RBRACE
    (52) if -> . IF LPAREN expression RPAREN singleStatement else
    (57) while -> . WHILE LPAREN expression RPAREN singleStatement
    (58) for -> . FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement
    (59) do_while -> . DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON
    (41) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (42) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (43) expressionAssign -> . expressionTernaryCond
    (44) expressionAssign -> . expressionTernaryCond EQUAL LBRACE reg_items RBRACE
    (55) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (56) expressionTernaryCond -> . expressionBoolOp
    (29) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (30) expressionBoolOp -> . expressionComp
    (32) expressionComp -> . expressionComp COMP aritExp
    (33) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (31) unaryExp -> . NOT unaryExp
    (34) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . LPAREN expression RPAREN
    (24) factorExp -> . expressionFunction
    (26) factorNumExp -> . NUMBER
    (27) bool_atom -> . TRUE
    (28) bool_atom -> . FALSE
    (38) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (39) expressionVectorAt -> . expressionVector
    (40) expressionVectorAt -> . factorVar
    (60) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (61) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (62) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (63) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . PRINT LPAREN expression RPAREN
    (65) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (35) expressionVector -> . LBRACKET vector_items RBRACKET
    (25) factorVar -> . VAR

    COMMENT         shift and go to state 68
    LBRACE          shift and go to state 27
    IF              shift and go to state 36
    WHILE           shift and go to state 40
    FOR             shift and go to state 23
    DO              shift and go to state 38
    AO              shift and go to state 2
    DOUBLE_AO       shift and go to state 37
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 8
    FALSE           shift and go to state 10
    MULTIPLICACIONESCALAR shift and go to state 9
    CAPITALIZAR     shift and go to state 6
    COLINEALES      shift and go to state 35
    PRINT           shift and go to state 13
    LENGTH          shift and go to state 5
    LBRACKET        shift and go to state 22
    VAR             shift and go to state 19

    expressionTernaryCond          shift and go to state 1
    unaryExp2                      shift and go to state 21
    expressionComp                 shift and go to state 24
    factorVar                      shift and go to state 3
    factorExp                      shift and go to state 4
    expressionVector               shift and go to state 26
    if                             shift and go to state 28
    block                          shift and go to state 29
    unaryExp                       shift and go to state 30
    statement                      shift and go to state 70
    expressionBoolOp               shift and go to state 31
    while                          shift and go to state 32
    bool_atom                      shift and go to state 34
    for                            shift and go to state 41
    expressionFunction             shift and go to state 18
    factorNumExp                   shift and go to state 14
    do_while                       shift and go to state 15
    expression                     shift and go to state 16
    singleStatement                shift and go to state 132
    expressionVectorAt             shift and go to state 39
    aritExp                        shift and go to state 17
    expressionAssign               shift and go to state 43

state 128

    (52) if -> IF LPAREN expression RPAREN singleStatement else .

    COMMENT         reduce using rule 52 (if -> IF LPAREN expression RPAREN singleStatement else .)
    LBRACE          reduce using rule 52 (if -> IF LPAREN expression RPAREN singleStatement else .)
    IF              reduce using rule 52 (if -> IF LPAREN expression RPAREN singleStatement else .)
    WHILE           reduce using rule 52 (if -> IF LPAREN expression RPAREN singleStatement else .)
    FOR             reduce using rule 52 (if -> IF LPAREN expression RPAREN singleStatement else .)
    DO              reduce using rule 52 (if -> IF LPAREN expression RPAREN singleStatement else .)
    AO              reduce using rule 52 (if -> IF LPAREN expression RPAREN singleStatement else .)
    DOUBLE_AO       reduce using rule 52 (if -> IF LPAREN expression RPAREN singleStatement else .)
    NOT             reduce using rule 52 (if -> IF LPAREN expression RPAREN singleStatement else .)
    STRING          reduce using rule 52 (if -> IF LPAREN expression RPAREN singleStatement else .)
    LPAREN          reduce using rule 52 (if -> IF LPAREN expression RPAREN singleStatement else .)
    NUMBER          reduce using rule 52 (if -> IF LPAREN expression RPAREN singleStatement else .)
    TRUE            reduce using rule 52 (if -> IF LPAREN expression RPAREN singleStatement else .)
    FALSE           reduce using rule 52 (if -> IF LPAREN expression RPAREN singleStatement else .)
    MULTIPLICACIONESCALAR reduce using rule 52 (if -> IF LPAREN expression RPAREN singleStatement else .)
    CAPITALIZAR     reduce using rule 52 (if -> IF LPAREN expression RPAREN singleStatement else .)
    COLINEALES      reduce using rule 52 (if -> IF LPAREN expression RPAREN singleStatement else .)
    PRINT           reduce using rule 52 (if -> IF LPAREN expression RPAREN singleStatement else .)
    LENGTH          reduce using rule 52 (if -> IF LPAREN expression RPAREN singleStatement else .)
    LBRACKET        reduce using rule 52 (if -> IF LPAREN expression RPAREN singleStatement else .)
    VAR             reduce using rule 52 (if -> IF LPAREN expression RPAREN singleStatement else .)
    $end            reduce using rule 52 (if -> IF LPAREN expression RPAREN singleStatement else .)
    RBRACE          reduce using rule 52 (if -> IF LPAREN expression RPAREN singleStatement else .)
    ELSE            reduce using rule 52 (if -> IF LPAREN expression RPAREN singleStatement else .)


state 129

    (59) do_while -> DO singleStatement WHILE LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 133


state 130

    (61) expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression . RPAREN

    RPAREN          shift and go to state 134


state 131

    (58) for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr . RPAREN singleStatement

    RPAREN          shift and go to state 135


state 132

    (53) else -> ELSE singleStatement .

    WHILE           reduce using rule 53 (else -> ELSE singleStatement .)
    ELSE            reduce using rule 53 (else -> ELSE singleStatement .)
    COMMENT         reduce using rule 53 (else -> ELSE singleStatement .)
    LBRACE          reduce using rule 53 (else -> ELSE singleStatement .)
    IF              reduce using rule 53 (else -> ELSE singleStatement .)
    FOR             reduce using rule 53 (else -> ELSE singleStatement .)
    DO              reduce using rule 53 (else -> ELSE singleStatement .)
    AO              reduce using rule 53 (else -> ELSE singleStatement .)
    DOUBLE_AO       reduce using rule 53 (else -> ELSE singleStatement .)
    NOT             reduce using rule 53 (else -> ELSE singleStatement .)
    STRING          reduce using rule 53 (else -> ELSE singleStatement .)
    LPAREN          reduce using rule 53 (else -> ELSE singleStatement .)
    NUMBER          reduce using rule 53 (else -> ELSE singleStatement .)
    TRUE            reduce using rule 53 (else -> ELSE singleStatement .)
    FALSE           reduce using rule 53 (else -> ELSE singleStatement .)
    MULTIPLICACIONESCALAR reduce using rule 53 (else -> ELSE singleStatement .)
    CAPITALIZAR     reduce using rule 53 (else -> ELSE singleStatement .)
    COLINEALES      reduce using rule 53 (else -> ELSE singleStatement .)
    PRINT           reduce using rule 53 (else -> ELSE singleStatement .)
    LENGTH          reduce using rule 53 (else -> ELSE singleStatement .)
    LBRACKET        reduce using rule 53 (else -> ELSE singleStatement .)
    VAR             reduce using rule 53 (else -> ELSE singleStatement .)
    $end            reduce using rule 53 (else -> ELSE singleStatement .)
    RBRACE          reduce using rule 53 (else -> ELSE singleStatement .)


state 133

    (59) do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .

    WHILE           reduce using rule 59 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    ELSE            reduce using rule 59 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    COMMENT         reduce using rule 59 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    LBRACE          reduce using rule 59 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 59 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    FOR             reduce using rule 59 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    DO              reduce using rule 59 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    AO              reduce using rule 59 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    DOUBLE_AO       reduce using rule 59 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    NOT             reduce using rule 59 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    STRING          reduce using rule 59 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    LPAREN          reduce using rule 59 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    NUMBER          reduce using rule 59 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    TRUE            reduce using rule 59 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    FALSE           reduce using rule 59 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    MULTIPLICACIONESCALAR reduce using rule 59 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    CAPITALIZAR     reduce using rule 59 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    COLINEALES      reduce using rule 59 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    PRINT           reduce using rule 59 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    LENGTH          reduce using rule 59 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    LBRACKET        reduce using rule 59 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    VAR             reduce using rule 59 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    $end            reduce using rule 59 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 59 (do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON .)


state 134

    (61) expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN .

    DOUBLE_AO       reduce using rule 61 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN .)
    AO              reduce using rule 61 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN .)
    COMP            reduce using rule 61 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN .)
    QUESTION        reduce using rule 61 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN .)
    BOOL_OP         reduce using rule 61 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN .)
    AOEQUAL         reduce using rule 61 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN .)
    EQUAL           reduce using rule 61 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN .)
    SEMICOLON       reduce using rule 61 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN .)
    RPAREN          reduce using rule 61 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN .)
    COMMA           reduce using rule 61 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN .)
    RBRACKET        reduce using rule 61 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN .)
    COLON           reduce using rule 61 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN .)
    RBRACE          reduce using rule 61 (expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN .)


state 135

    (58) for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN . singleStatement
    (50) singleStatement -> . COMMENT singleStatement
    (51) singleStatement -> . statement
    (4) statement -> . expression SEMICOLON
    (5) statement -> . block
    (6) statement -> . if
    (7) statement -> . while
    (8) statement -> . for
    (9) statement -> . do_while
    (10) expression -> . expressionAssign
    (49) block -> . LBRACE code RBRACE
    (52) if -> . IF LPAREN expression RPAREN singleStatement else
    (57) while -> . WHILE LPAREN expression RPAREN singleStatement
    (58) for -> . FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement
    (59) do_while -> . DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON
    (41) expressionAssign -> . expressionTernaryCond AOEQUAL expressionAssign
    (42) expressionAssign -> . expressionTernaryCond EQUAL expressionAssign
    (43) expressionAssign -> . expressionTernaryCond
    (44) expressionAssign -> . expressionTernaryCond EQUAL LBRACE reg_items RBRACE
    (55) expressionTernaryCond -> . expressionBoolOp QUESTION expression COLON expression
    (56) expressionTernaryCond -> . expressionBoolOp
    (29) expressionBoolOp -> . expressionBoolOp BOOL_OP expressionComp
    (30) expressionBoolOp -> . expressionComp
    (32) expressionComp -> . expressionComp COMP aritExp
    (33) expressionComp -> . aritExp
    (13) aritExp -> . aritExp AO unaryExp
    (14) aritExp -> . unaryExp
    (15) unaryExp -> . AO unaryExp
    (16) unaryExp -> . DOUBLE_AO unaryExp
    (17) unaryExp -> . unaryExp2
    (31) unaryExp -> . NOT unaryExp
    (34) unaryExp -> . STRING
    (18) unaryExp2 -> . unaryExp2 DOUBLE_AO
    (19) unaryExp2 -> . factorExp
    (20) factorExp -> . factorNumExp
    (21) factorExp -> . bool_atom
    (22) factorExp -> . expressionVectorAt
    (23) factorExp -> . LPAREN expression RPAREN
    (24) factorExp -> . expressionFunction
    (26) factorNumExp -> . NUMBER
    (27) bool_atom -> . TRUE
    (28) bool_atom -> . FALSE
    (38) expressionVectorAt -> . expressionVectorAt LBRACKET expression RBRACKET
    (39) expressionVectorAt -> . expressionVector
    (40) expressionVectorAt -> . factorVar
    (60) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN
    (61) expressionFunction -> . MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN
    (62) expressionFunction -> . CAPITALIZAR LPAREN expression RPAREN
    (63) expressionFunction -> . COLINEALES LPAREN expression COMMA expression RPAREN
    (64) expressionFunction -> . PRINT LPAREN expression RPAREN
    (65) expressionFunction -> . LENGTH LPAREN expression RPAREN
    (35) expressionVector -> . LBRACKET vector_items RBRACKET
    (25) factorVar -> . VAR

    COMMENT         shift and go to state 68
    LBRACE          shift and go to state 27
    IF              shift and go to state 36
    WHILE           shift and go to state 40
    FOR             shift and go to state 23
    DO              shift and go to state 38
    AO              shift and go to state 2
    DOUBLE_AO       shift and go to state 37
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 8
    FALSE           shift and go to state 10
    MULTIPLICACIONESCALAR shift and go to state 9
    CAPITALIZAR     shift and go to state 6
    COLINEALES      shift and go to state 35
    PRINT           shift and go to state 13
    LENGTH          shift and go to state 5
    LBRACKET        shift and go to state 22
    VAR             shift and go to state 19

    expressionTernaryCond          shift and go to state 1
    unaryExp2                      shift and go to state 21
    expressionComp                 shift and go to state 24
    factorVar                      shift and go to state 3
    factorExp                      shift and go to state 4
    expressionVector               shift and go to state 26
    while                          shift and go to state 32
    block                          shift and go to state 29
    unaryExp                       shift and go to state 30
    statement                      shift and go to state 70
    expressionBoolOp               shift and go to state 31
    expressionFunction             shift and go to state 18
    if                             shift and go to state 28
    bool_atom                      shift and go to state 34
    for                            shift and go to state 41
    factorNumExp                   shift and go to state 14
    do_while                       shift and go to state 15
    expression                     shift and go to state 16
    singleStatement                shift and go to state 136
    expressionVectorAt             shift and go to state 39
    aritExp                        shift and go to state 17
    expressionAssign               shift and go to state 43

state 136

    (58) for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .

    WHILE           reduce using rule 58 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    ELSE            reduce using rule 58 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    COMMENT         reduce using rule 58 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    LBRACE          reduce using rule 58 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    IF              reduce using rule 58 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    FOR             reduce using rule 58 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    DO              reduce using rule 58 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    AO              reduce using rule 58 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    DOUBLE_AO       reduce using rule 58 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    NOT             reduce using rule 58 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    STRING          reduce using rule 58 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    LPAREN          reduce using rule 58 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    NUMBER          reduce using rule 58 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    TRUE            reduce using rule 58 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    FALSE           reduce using rule 58 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    MULTIPLICACIONESCALAR reduce using rule 58 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    CAPITALIZAR     reduce using rule 58 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    COLINEALES      reduce using rule 58 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    PRINT           reduce using rule 58 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    LENGTH          reduce using rule 58 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    LBRACKET        reduce using rule 58 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    VAR             reduce using rule 58 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    $end            reduce using rule 58 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)
    RBRACE          reduce using rule 58 (for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for AOEQUAL in state 1 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 1 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 118 resolved as shift
