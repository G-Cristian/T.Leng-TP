
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '3F9468AC3D8CE8C23999403EBA531F0F'
    
_lr_action_items = {'PRINT':([0,4,8,9,10,11,15,27,31,33,34,35,37,40,43,46,47,51,52,58,59,60,63,64,66,67,69,70,71,72,74,77,79,84,86,87,107,110,113,114,115,117,119,120,124,126,131,132,134,135,137,138,142,143,],[1,-8,1,1,1,1,1,1,-7,-9,-5,1,1,1,-6,1,1,1,-56,1,1,1,1,1,1,1,1,1,1,1,1,1,-4,-55,-54,1,1,1,1,1,1,1,1,1,-62,-59,1,-57,1,1,-64,-58,1,-63,]),'ELSE':([4,31,33,34,43,52,79,84,86,124,126,132,137,138,143,],[-8,-7,-9,-5,-6,-56,-4,-55,-54,-62,131,-57,-64,-58,-63,]),'IF':([0,4,8,10,11,15,31,33,34,43,51,52,79,84,86,113,115,124,126,131,132,137,138,142,143,],[24,-8,24,24,24,24,-7,-9,-5,-6,24,-56,-4,-55,-54,24,24,-62,-59,24,-57,-64,-58,24,-63,]),'LENGTH':([0,4,8,9,10,11,15,27,31,33,34,35,37,40,43,46,47,51,52,58,59,60,63,64,66,67,69,70,71,72,74,77,79,84,86,87,107,110,113,114,115,117,119,120,124,126,131,132,134,135,137,138,142,143,],[25,-8,25,25,25,25,25,25,-7,-9,-5,25,25,25,-6,25,25,25,-56,25,25,25,25,25,25,25,25,25,25,25,25,25,-4,-55,-54,25,25,25,25,25,25,25,25,25,-62,-59,25,-57,25,25,-64,-58,25,-63,]),'LBRACE':([0,4,8,9,10,11,15,27,31,33,34,35,37,40,43,46,47,51,52,58,59,60,63,64,66,67,69,70,71,72,74,77,79,84,86,87,107,110,113,114,115,117,119,120,124,126,131,132,134,135,137,138,142,143,],[11,-8,11,50,11,11,11,50,-7,-9,-5,50,50,50,-6,50,50,11,-56,50,50,50,50,50,50,50,50,50,50,50,50,50,-4,-55,-54,50,50,50,11,50,11,50,50,50,-62,-59,11,-57,50,50,-64,-58,11,-63,]),'AOEQUAL':([3,5,6,7,13,14,16,17,18,19,20,21,22,23,26,32,38,39,42,44,45,49,55,73,78,80,82,89,92,93,94,95,96,99,104,106,109,116,118,122,125,133,136,141,],[-41,-32,-22,-27,-61,-19,-28,-30,-21,64,-42,-29,-20,-26,-24,-35,-23,-10,-14,-36,-17,-16,-42,-33,-15,-18,-34,-47,-31,-48,-45,-44,-49,-25,-13,-37,-69,-70,-67,-40,-60,-65,-68,-66,]),'TRUE':([0,4,8,9,10,11,15,27,31,33,34,35,37,40,43,46,47,51,52,58,59,60,63,64,66,67,69,70,71,72,74,77,79,84,86,87,107,110,113,114,115,117,119,120,124,126,131,132,134,135,137,138,142,143,],[21,-8,21,21,21,21,21,21,-7,-9,-5,21,21,21,-6,21,21,21,-56,21,21,21,21,21,21,21,21,21,21,21,21,21,-4,-55,-54,21,21,21,21,21,21,21,21,21,-62,-59,21,-57,21,21,-64,-58,21,-63,]),'LPAREN':([0,1,4,8,9,10,11,12,15,24,25,27,28,29,30,31,33,34,35,36,37,40,43,46,47,51,52,58,59,60,63,64,66,67,69,70,71,72,74,77,79,84,85,86,87,107,110,113,114,115,117,119,120,124,126,131,132,134,135,137,138,142,143,],[27,46,-8,27,27,27,27,58,27,66,67,27,69,70,71,-7,-9,-5,27,74,27,27,-6,27,27,27,-56,27,27,27,27,27,27,27,27,27,27,27,27,27,-4,-55,110,-54,27,27,27,27,27,27,27,27,27,-62,-59,27,-57,27,27,-64,-58,27,-63,]),'VAR':([0,4,8,9,10,11,15,27,31,33,34,35,37,40,43,46,47,50,51,52,58,59,60,61,63,64,65,66,67,69,70,71,72,74,77,79,84,86,87,88,107,110,113,114,115,117,119,120,124,126,131,132,134,135,137,138,142,143,],[7,-8,7,7,7,7,7,7,-7,-9,-5,7,7,7,-6,7,7,7,7,-56,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,-4,-55,-54,7,7,7,7,7,7,7,7,7,7,-62,-59,7,-57,7,7,-64,-58,7,-63,]),'MULTIPLICACIONESCALAR':([0,4,8,9,10,11,15,27,31,33,34,35,37,40,43,46,47,51,52,58,59,60,63,64,66,67,69,70,71,72,74,77,79,84,86,87,107,110,113,114,115,117,119,120,124,126,131,132,134,135,137,138,142,143,],[28,-8,28,28,28,28,28,28,-7,-9,-5,28,28,28,-6,28,28,28,-56,28,28,28,28,28,28,28,28,28,28,28,28,28,-4,-55,-54,28,28,28,28,28,28,28,28,28,-62,-59,28,-57,28,28,-64,-58,28,-63,]),'FOR':([0,4,8,10,11,15,31,33,34,43,51,52,79,84,86,113,115,124,126,131,132,137,138,142,143,],[30,-8,30,30,30,30,-7,-9,-5,-6,30,-56,-4,-55,-54,30,30,-62,-59,30,-57,-64,-58,30,-63,]),'COMMENT':([0,4,8,10,11,15,31,33,34,43,51,52,79,84,86,113,115,124,126,131,132,137,138,142,143,],[8,-8,8,51,8,8,-7,-9,-5,-6,51,-56,-4,-55,-54,51,51,-62,-59,51,-57,-64,-58,51,-63,]),'DOUBLE_AO':([0,3,4,6,7,8,9,10,11,14,15,16,17,18,20,21,22,23,26,27,31,33,34,35,37,38,40,43,45,46,47,51,52,55,58,59,60,63,64,66,67,69,70,71,72,74,77,79,80,84,86,87,89,93,96,99,106,107,109,110,113,114,115,116,117,118,119,120,122,124,126,131,132,133,134,135,136,137,138,141,142,143,],[9,-41,-8,-22,-27,9,9,9,9,-19,9,-28,-30,-21,-42,-29,-20,-26,-24,9,-7,-9,-5,9,9,-23,9,-6,80,9,9,9,-56,-42,9,9,9,9,9,9,9,9,9,9,9,9,9,-4,-18,-55,-54,9,-47,-48,-49,-25,-37,9,-69,9,9,9,9,-70,9,-67,9,9,-40,-62,-59,9,-57,-65,9,9,-68,-64,-58,-66,9,-63,]),'DO':([0,4,8,10,11,15,31,33,34,43,51,52,79,84,86,113,115,124,126,131,132,137,138,142,143,],[10,-8,10,10,10,10,-7,-9,-5,-6,10,-56,-4,-55,-54,10,10,-62,-59,10,-57,-64,-58,10,-63,]),'RPAREN':([3,5,6,7,13,14,16,17,18,19,20,21,22,23,26,32,38,39,42,44,45,49,68,73,78,80,81,82,89,90,92,93,94,95,96,97,98,99,101,102,104,106,109,116,118,122,123,125,127,129,133,135,136,139,140,141,],[-41,-32,-22,-27,-61,-19,-28,-30,-21,-46,-42,-29,-20,-26,-24,-35,-23,-10,-14,-36,-17,-16,99,-33,-15,-18,109,-34,-47,113,-31,-48,-45,-44,-49,115,116,-25,118,-11,-13,-37,-69,-70,-67,-40,130,-60,133,136,-65,-12,-68,141,142,-66,]),'EQUAL':([3,5,6,7,13,14,16,17,18,19,20,21,22,23,26,32,38,39,42,44,45,49,55,73,78,80,82,89,92,93,94,95,96,99,104,106,109,116,118,122,125,133,136,141,],[-41,-32,-22,-27,-61,-19,-28,-30,-21,63,-42,-29,-20,-26,-24,-35,-23,-10,-14,-36,-17,-16,-42,-33,-15,-18,-34,-47,-31,-48,-45,-44,-49,-25,-13,-37,-69,-70,-67,-40,-60,-65,-68,-66,]),'CAPITALIZAR':([0,4,8,9,10,11,15,27,31,33,34,35,37,40,43,46,47,51,52,58,59,60,63,64,66,67,69,70,71,72,74,77,79,84,86,87,107,110,113,114,115,117,119,120,124,126,131,132,134,135,137,138,142,143,],[29,-8,29,29,29,29,29,29,-7,-9,-5,29,29,29,-6,29,29,29,-56,29,29,29,29,29,29,29,29,29,29,29,29,29,-4,-55,-54,29,29,29,29,29,29,29,29,29,-62,-59,29,-57,29,29,-64,-58,29,-63,]),'WHILE':([0,4,8,10,11,15,31,33,34,43,51,52,53,79,84,86,113,115,124,126,131,132,137,138,142,143,],[12,-8,12,12,12,12,-7,-9,-5,-6,12,-56,85,-4,-55,-54,12,12,-62,-59,12,-57,-64,-58,12,-63,]),'NOT':([0,4,8,9,10,11,15,27,31,33,34,35,37,40,43,46,47,51,52,58,59,60,63,64,66,67,69,70,71,72,74,77,79,84,86,87,107,110,113,114,115,117,119,120,124,126,131,132,134,135,137,138,142,143,],[35,-8,35,35,35,35,35,35,-7,-9,-5,35,35,35,-6,35,35,35,-56,35,35,35,35,35,35,35,35,35,35,35,35,35,-4,-55,-54,35,35,35,35,35,35,35,35,35,-62,-59,35,-57,35,35,-64,-58,35,-63,]),'BOOL_OP':([3,5,6,7,13,14,16,17,18,20,21,22,23,26,32,38,42,44,45,49,55,73,78,80,82,89,92,93,96,99,104,106,109,116,118,122,133,136,141,],[-41,-32,-22,-27,60,-19,-28,-30,-21,-42,-29,-20,-26,-24,-35,-23,-14,-36,-17,-16,-42,-33,-15,-18,-34,-47,-31,-48,-49,-25,-13,-37,-69,-70,-67,-40,-65,-68,-66,]),'COMMA':([3,5,6,7,13,14,16,17,18,19,20,21,22,23,26,32,38,39,42,44,45,49,56,73,76,78,80,82,89,92,93,94,95,96,99,100,104,105,106,109,111,116,118,122,125,127,133,136,141,],[-41,-32,-22,-27,-61,-19,-28,-30,-21,-46,-42,-29,-20,-26,-24,-35,-23,-10,-14,-36,-17,-16,88,-33,107,-15,-18,-34,-47,-31,-48,-45,-44,-49,-25,117,-13,120,-37,-69,-52,-70,-67,-40,-60,134,-65,-68,-66,]),'COLINEALES':([0,4,8,9,10,11,15,27,31,33,34,35,37,40,43,46,47,51,52,58,59,60,63,64,66,67,69,70,71,72,74,77,79,84,86,87,107,110,113,114,115,117,119,120,124,126,131,132,134,135,137,138,142,143,],[36,-8,36,36,36,36,36,36,-7,-9,-5,36,36,36,-6,36,36,36,-56,36,36,36,36,36,36,36,36,36,36,36,36,36,-4,-55,-54,36,36,36,36,36,36,36,36,36,-62,-59,36,-57,36,36,-64,-58,36,-63,]),'NUMBER':([0,4,8,9,10,11,15,27,31,33,34,35,37,40,43,46,47,51,52,58,59,60,63,64,66,67,69,70,71,72,74,77,79,84,86,87,107,110,113,114,115,117,119,120,124,126,131,132,134,135,137,138,142,143,],[16,-8,16,16,16,16,16,16,-7,-9,-5,16,16,16,-6,16,16,16,-56,16,16,16,16,16,16,16,16,16,16,16,16,16,-4,-55,-54,16,16,16,16,16,16,16,16,16,-62,-59,16,-57,16,16,-64,-58,16,-63,]),'FALSE':([0,4,8,9,10,11,15,27,31,33,34,35,37,40,43,46,47,51,52,58,59,60,63,64,66,67,69,70,71,72,74,77,79,84,86,87,107,110,113,114,115,117,119,120,124,126,131,132,134,135,137,138,142,143,],[17,-8,17,17,17,17,17,17,-7,-9,-5,17,17,17,-6,17,17,17,-56,17,17,17,17,17,17,17,17,17,17,17,17,17,-4,-55,-54,17,17,17,17,17,17,17,17,17,-62,-59,17,-57,17,17,-64,-58,17,-63,]),'AO':([0,3,4,6,7,8,9,10,11,14,15,16,17,18,20,21,22,23,26,27,31,32,33,34,35,37,38,40,42,43,44,45,46,47,49,51,52,55,58,59,60,63,64,66,67,69,70,71,72,73,74,77,78,79,80,82,84,86,87,89,93,96,99,104,106,107,109,110,113,114,115,116,117,118,119,120,122,124,126,131,132,133,134,135,136,137,138,141,142,143,],[40,-41,-8,-22,-27,40,40,40,40,-19,40,-28,-30,-21,-42,-29,-20,-26,-24,40,-7,72,-9,-5,40,40,-23,40,-14,-6,-36,-17,40,40,-16,40,-56,-42,40,40,40,40,40,40,40,40,40,40,40,-33,40,40,-15,-4,-18,72,-55,-54,40,-47,-48,-49,-25,-13,-37,40,-69,40,40,40,40,-70,40,-67,40,40,-40,-62,-59,40,-57,-65,40,40,-68,-64,-58,-66,40,-63,]),'LBRACKET':([0,3,4,7,8,9,10,11,14,15,20,27,31,33,34,35,37,38,40,43,46,47,51,52,55,58,59,60,63,64,66,67,69,70,71,72,74,77,79,84,86,87,93,96,106,107,110,113,114,115,117,119,120,122,124,126,131,132,134,135,137,138,142,143,],[37,-41,-8,-27,37,37,37,37,-43,37,-42,37,-7,-9,-5,37,37,77,37,-6,37,37,37,-56,-42,37,37,37,37,37,37,37,37,37,37,37,37,37,-4,-55,-54,37,-48,-49,-37,37,37,37,37,37,37,37,37,-40,-62,-59,37,-57,37,37,-64,-58,37,-63,]),'QUESTION':([3,5,6,7,13,14,16,17,18,20,21,22,23,26,32,38,42,44,45,49,55,73,78,80,82,89,92,93,96,99,104,106,109,116,118,122,133,136,141,],[-41,-32,-22,-27,59,-19,-28,-30,-21,-42,-29,-20,-26,-24,-35,-23,-14,-36,-17,-16,-42,-33,-15,-18,-34,-47,-31,-48,-49,-25,-13,-37,-69,-70,-67,-40,-65,-68,-66,]),'RBRACE':([3,4,5,6,7,8,11,13,14,15,16,17,18,19,20,21,22,23,26,31,32,33,34,38,39,42,43,44,45,48,49,52,54,56,57,62,73,78,79,80,82,84,86,89,92,93,94,95,96,99,104,106,109,111,112,116,118,122,124,125,126,132,133,136,137,138,141,143,],[-41,-8,-32,-22,-27,-3,-3,-61,-19,-3,-28,-30,-21,-46,-42,-29,-20,-26,-24,-7,-35,-9,-5,-23,-10,-14,-6,-36,-17,-2,-16,-56,86,-51,89,-1,-33,-15,-4,-18,-34,-55,-54,-47,-31,-48,-45,-44,-49,-25,-13,-37,-69,-52,-50,-70,-67,-40,-62,-60,-59,-57,-65,-68,-64,-58,-66,-63,]),'DOT':([3,6,7,14,16,17,18,20,21,22,23,26,38,55,89,93,96,99,106,109,116,118,122,133,136,141,],[-41,-22,-27,61,-28,-30,-21,-42,-29,65,-26,-24,-23,-42,-47,-48,-49,-25,-37,-69,-70,-67,-40,-65,-68,-66,]),'COLON':([3,5,6,7,13,14,16,17,18,19,20,21,22,23,26,32,38,39,42,44,45,49,55,73,78,80,82,83,89,91,92,93,94,95,96,99,104,106,109,116,118,122,125,133,136,141,],[-41,-32,-22,-27,-61,-19,-28,-30,-21,-46,-42,-29,-20,-26,-24,-35,-23,-10,-14,-36,-17,-16,87,-33,-15,-18,-34,87,-47,114,-31,-48,-45,-44,-49,-25,-13,-37,-69,-70,-67,-40,-60,-65,-68,-66,]),'SEMICOLON':([3,5,6,7,13,14,16,17,18,19,20,21,22,23,26,32,38,39,41,42,44,45,49,55,71,73,78,80,82,89,92,93,94,95,96,99,102,103,104,106,109,116,118,122,125,128,130,133,136,141,],[-41,-32,-22,-27,-61,-19,-28,-30,-21,-46,-42,-29,-20,-26,-24,-35,-23,-10,79,-14,-36,-17,-16,-42,-12,-33,-15,-18,-34,-47,-31,-48,-45,-44,-49,-25,-11,119,-13,-37,-69,-70,-67,-40,-60,135,137,-65,-68,-66,]),'RBRACKET':([3,5,6,7,13,14,16,17,18,19,20,21,22,23,26,32,38,39,42,44,45,49,73,75,76,78,80,82,89,92,93,94,95,96,99,104,106,108,109,116,118,121,122,125,133,136,141,],[-41,-32,-22,-27,-61,-19,-28,-30,-21,-46,-42,-29,-20,-26,-24,-35,-23,-10,-14,-36,-17,-16,-33,106,-39,-15,-18,-34,-47,-31,-48,-45,-44,-49,-25,-13,-37,122,-69,-70,-67,-38,-40,-60,-65,-68,-66,]),'STRING':([0,4,8,9,10,11,15,27,31,33,34,35,37,40,43,46,47,51,52,58,59,60,63,64,66,67,69,70,71,72,74,77,79,84,86,87,107,110,113,114,115,117,119,120,124,126,131,132,134,135,137,138,142,143,],[44,-8,44,44,44,44,44,44,-7,-9,-5,44,44,44,-6,44,44,44,-56,44,44,44,44,44,44,44,44,44,44,44,44,44,-4,-55,-54,44,44,44,44,44,44,44,44,44,-62,-59,44,-57,44,44,-64,-58,44,-63,]),'$end':([0,2,4,8,15,31,33,34,43,48,52,62,79,84,86,124,126,132,137,138,143,],[-3,0,-8,-3,-3,-7,-9,-5,-6,-2,-56,-1,-4,-55,-54,-62,-59,-57,-64,-58,-63,]),'COMP':([3,5,6,7,14,16,17,18,20,21,22,23,26,32,38,42,44,45,49,55,73,78,80,82,89,92,93,96,99,104,106,109,116,118,122,133,136,141,],[-41,47,-22,-27,-19,-28,-30,-21,-42,-29,-20,-26,-24,-35,-23,-14,-36,-17,-16,-42,-33,-15,-18,-34,-47,47,-48,-49,-25,-13,-37,-69,-70,-67,-40,-65,-68,-66,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'code':([0,8,11,15,],[2,48,54,62,]),'expressionVector':([0,8,9,10,11,15,27,35,37,40,46,47,51,58,59,60,63,64,66,67,69,70,71,72,74,77,87,107,110,113,114,115,117,119,120,131,134,135,142,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'for':([0,8,10,11,15,51,113,115,131,142,],[4,4,4,4,4,4,4,4,4,4,]),'expressionComp':([0,8,10,11,15,27,37,46,51,58,59,60,63,64,66,67,69,70,71,74,77,87,107,110,113,114,115,117,119,120,131,134,135,142,],[5,5,5,5,5,5,5,5,5,5,5,92,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'bool_atom':([0,8,9,10,11,15,27,35,37,40,46,47,51,58,59,60,63,64,66,67,69,70,71,72,74,77,87,107,110,113,114,115,117,119,120,131,134,135,142,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'vector_items':([37,107,],[75,121,]),'while':([0,8,10,11,15,51,113,115,131,142,],[31,31,31,31,31,31,31,31,31,31,]),'aritExp':([0,8,10,11,15,27,37,46,47,51,58,59,60,63,64,66,67,69,70,71,74,77,87,107,110,113,114,115,117,119,120,131,134,135,142,],[32,32,32,32,32,32,32,32,82,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'else':([126,],[132,]),'factorNumExp':([0,8,9,10,11,15,27,35,37,40,46,47,51,58,59,60,63,64,66,67,69,70,71,72,74,77,87,107,110,113,114,115,117,119,120,131,134,135,142,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'block':([0,8,10,11,15,51,113,115,131,142,],[34,34,34,34,34,34,34,34,34,34,]),'expressionFunction':([0,8,9,10,11,15,27,35,37,40,46,47,51,58,59,60,63,64,66,67,69,70,71,72,74,77,87,107,110,113,114,115,117,119,120,131,134,135,142,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'expressionBoolOp':([0,8,10,11,15,27,37,46,51,58,59,63,64,66,67,69,70,71,74,77,87,107,110,113,114,115,117,119,120,131,134,135,142,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'memberAccess':([0,8,9,10,11,15,27,35,37,40,46,47,51,58,59,60,63,64,66,67,69,70,71,72,74,77,87,107,110,113,114,115,117,119,120,131,134,135,142,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'statement':([0,8,10,11,15,51,113,115,131,142,],[15,15,52,15,15,52,52,52,52,52,]),'expressionVectorAt':([0,8,9,10,11,15,27,35,37,40,46,47,51,58,59,60,63,64,66,67,69,70,71,72,74,77,87,107,110,113,114,115,117,119,120,131,134,135,142,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'expressionAssign':([0,8,10,11,15,27,37,46,51,58,59,63,64,66,67,69,70,71,74,77,87,107,110,113,114,115,117,119,120,131,134,135,142,],[39,39,39,39,39,39,39,39,39,39,39,94,95,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'reg_items':([11,50,88,],[57,57,112,]),'optional_expr':([71,135,],[103,140,]),'expressionTernaryCond':([0,8,10,11,15,27,37,46,51,58,59,63,64,66,67,69,70,71,74,77,87,107,110,113,114,115,117,119,120,131,134,135,142,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'unaryExp':([0,8,9,10,11,15,27,35,37,40,46,47,51,58,59,60,63,64,66,67,69,70,71,72,74,77,87,107,110,113,114,115,117,119,120,131,134,135,142,],[42,42,49,42,42,42,42,73,42,78,42,42,42,42,42,42,42,42,42,42,42,42,42,104,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'factorVar':([0,8,9,10,11,15,27,35,37,40,46,47,50,51,58,59,60,61,63,64,65,66,67,69,70,71,72,74,77,87,88,107,110,113,114,115,117,119,120,131,134,135,142,],[20,20,20,20,55,20,20,20,20,20,20,20,83,20,20,20,20,93,20,20,96,20,20,20,20,20,20,20,20,20,83,20,20,20,20,20,20,20,20,20,20,20,20,]),'do_while':([0,8,10,11,15,51,113,115,131,142,],[33,33,33,33,33,33,33,33,33,33,]),'if':([0,8,10,11,15,51,113,115,131,142,],[43,43,43,43,43,43,43,43,43,43,]),'factorReg':([0,8,9,10,11,15,27,35,37,40,46,47,51,58,59,60,63,64,66,67,69,70,71,72,74,77,87,107,110,113,114,115,117,119,120,131,134,135,142,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'expression':([0,8,10,11,15,27,37,46,51,58,59,66,67,69,70,71,74,77,87,107,110,113,114,115,117,119,120,131,134,135,142,],[41,41,41,41,41,68,76,81,41,90,91,97,98,100,101,102,105,108,111,76,123,41,125,41,127,128,129,41,139,102,41,]),'singleStatement':([10,51,113,115,131,142,],[53,84,124,126,138,143,]),'reg_field':([11,50,88,],[56,56,56,]),'factorExp':([0,8,9,10,11,15,27,35,37,40,46,47,51,58,59,60,63,64,66,67,69,70,71,72,74,77,87,107,110,113,114,115,117,119,120,131,134,135,142,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'unaryExp2':([0,8,9,10,11,15,27,35,37,40,46,47,51,58,59,60,63,64,66,67,69,70,71,72,74,77,87,107,110,113,114,115,117,119,120,131,134,135,142,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> code","S'",1,None,None,None),
  ('code -> statement code','code',2,'p_code_statement','parser_rules_v2.py',84),
  ('code -> COMMENT code','code',2,'p_code_comment','parser_rules_v2.py',90),
  ('code -> <empty>','code',0,'p_code_empty','parser_rules_v2.py',96),
  ('statement -> expression SEMICOLON','statement',2,'p_statement_1','parser_rules_v2.py',100),
  ('statement -> block','statement',1,'p_statement_block','parser_rules_v2.py',105),
  ('statement -> if','statement',1,'p_statement_if','parser_rules_v2.py',108),
  ('statement -> while','statement',1,'p_statement_while','parser_rules_v2.py',112),
  ('statement -> for','statement',1,'p_statement_for','parser_rules_v2.py',116),
  ('statement -> do_while','statement',1,'p_statement_do_while','parser_rules_v2.py',120),
  ('expression -> expressionAssign','expression',1,'p_expression_aritmethic','parser_rules_v2.py',125),
  ('optional_expr -> expression','optional_expr',1,'p_optional_expr','parser_rules_v2.py',129),
  ('optional_expr -> <empty>','optional_expr',0,'p_optional_expr_empty','parser_rules_v2.py',133),
  ('aritExp -> aritExp AO unaryExp','aritExp',3,'p_aritExp','parser_rules_v2.py',138),
  ('aritExp -> unaryExp','aritExp',1,'p_aritExp_unary','parser_rules_v2.py',160),
  ('unaryExp -> AO unaryExp','unaryExp',2,'p_unaryExp','parser_rules_v2.py',164),
  ('unaryExp -> DOUBLE_AO unaryExp','unaryExp',2,'p_unaryExp_double','parser_rules_v2.py',177),
  ('unaryExp -> unaryExp2','unaryExp',1,'p_unaryExp_double_unaryExp2','parser_rules_v2.py',187),
  ('unaryExp2 -> unaryExp2 DOUBLE_AO','unaryExp2',2,'p_unaryExp_double2','parser_rules_v2.py',191),
  ('unaryExp2 -> memberAccess','unaryExp2',1,'p_unaryExp2_memberAccess','parser_rules_v2.py',202),
  ('unaryExp2 -> factorExp','unaryExp2',1,'p_unaryExp2_factor','parser_rules_v2.py',206),
  ('factorExp -> factorNumExp','factorExp',1,'p_factorExp_Num','parser_rules_v2.py',210),
  ('factorExp -> bool_atom','factorExp',1,'p_factorExp_Bool','parser_rules_v2.py',214),
  ('factorExp -> expressionVectorAt','factorExp',1,'p_factorExp_VectorAt','parser_rules_v2.py',218),
  ('factorExp -> factorReg','factorExp',1,'p_factorExp_Reg','parser_rules_v2.py',222),
  ('factorExp -> LPAREN expression RPAREN','factorExp',3,'p_factorExp_paren','parser_rules_v2.py',226),
  ('factorExp -> expressionFunction','factorExp',1,'p_factorExp_function','parser_rules_v2.py',232),
  ('factorVar -> VAR','factorVar',1,'p_factorVarExp','parser_rules_v2.py',236),
  ('factorNumExp -> NUMBER','factorNumExp',1,'p_factorNumExp','parser_rules_v2.py',240),
  ('bool_atom -> TRUE','bool_atom',1,'p_bool_true','parser_rules_v2.py',246),
  ('bool_atom -> FALSE','bool_atom',1,'p_bool_false','parser_rules_v2.py',250),
  ('expressionBoolOp -> expressionBoolOp BOOL_OP expressionComp','expressionBoolOp',3,'p_bool_op','parser_rules_v2.py',254),
  ('expressionBoolOp -> expressionComp','expressionBoolOp',1,'p_bool_op_comp','parser_rules_v2.py',263),
  ('unaryExp -> NOT unaryExp','unaryExp',2,'p_bool_neg','parser_rules_v2.py',267),
  ('expressionComp -> expressionComp COMP aritExp','expressionComp',3,'p_bool_comp','parser_rules_v2.py',273),
  ('expressionComp -> aritExp','expressionComp',1,'p_bool_comp_arit','parser_rules_v2.py',285),
  ('unaryExp -> STRING','unaryExp',1,'p_string','parser_rules_v2.py',290),
  ('expressionVector -> LBRACKET vector_items RBRACKET','expressionVector',3,'p_vector','parser_rules_v2.py',295),
  ('vector_items -> expression COMMA vector_items','vector_items',3,'p_vector_items','parser_rules_v2.py',300),
  ('vector_items -> expression','vector_items',1,'p_vector_single_item','parser_rules_v2.py',313),
  ('expressionVectorAt -> expressionVectorAt LBRACKET expression RBRACKET','expressionVectorAt',4,'p_vector_at','parser_rules_v2.py',319),
  ('expressionVectorAt -> expressionVector','expressionVectorAt',1,'p_vector_at_vector','parser_rules_v2.py',332),
  ('expressionVectorAt -> factorVar','expressionVectorAt',1,'p_vector_at_var','parser_rules_v2.py',336),
  ('expressionVectorAt -> memberAccess','expressionVectorAt',1,'p_vector_at_memberAccess','parser_rules_v2.py',340),
  ('expressionAssign -> expressionTernaryCond AOEQUAL expressionAssign','expressionAssign',3,'p_aoEqual','parser_rules_v2.py',359),
  ('expressionAssign -> expressionTernaryCond EQUAL expressionAssign','expressionAssign',3,'p_equals','parser_rules_v2.py',454),
  ('expressionAssign -> expressionTernaryCond','expressionAssign',1,'p_assign_TernaryCond','parser_rules_v2.py',543),
  ('factorReg -> LBRACE reg_items RBRACE','factorReg',3,'p_register','parser_rules_v2.py',548),
  ('memberAccess -> memberAccess DOT factorVar','memberAccess',3,'p_memberAccess','parser_rules_v2.py',554),
  ('memberAccess -> factorExp DOT factorVar','memberAccess',3,'p_memberAccess_factorExp','parser_rules_v2.py',561),
  ('reg_items -> reg_field COMMA reg_items','reg_items',3,'p_reg_items','parser_rules_v2.py',611),
  ('reg_items -> reg_field','reg_items',1,'p_reg_single_item','parser_rules_v2.py',615),
  ('reg_field -> factorVar COLON expression','reg_field',3,'p_reg_field','parser_rules_v2.py',619),
  ('comments -> <empty>','comments',0,'p_comments_empty','parser_rules_v2.py',629),
  ('block -> LBRACE code RBRACE','block',3,'p_block','parser_rules_v2.py',634),
  ('singleStatement -> COMMENT singleStatement','singleStatement',2,'p_single_statement_comment','parser_rules_v2.py',640),
  ('singleStatement -> statement','singleStatement',1,'p_single_statement','parser_rules_v2.py',645),
  ('if -> IF LPAREN expression RPAREN singleStatement else','if',6,'p_if','parser_rules_v2.py',651),
  ('else -> ELSE singleStatement','else',2,'p_else','parser_rules_v2.py',659),
  ('else -> <empty>','else',0,'p_else_empty','parser_rules_v2.py',663),
  ('expressionTernaryCond -> expressionBoolOp QUESTION expression COLON expression','expressionTernaryCond',5,'p_ternaryConditiopnal','parser_rules_v2.py',668),
  ('expressionTernaryCond -> expressionBoolOp','expressionTernaryCond',1,'p_ternaryConditiopnal_BoolOp','parser_rules_v2.py',684),
  ('while -> WHILE LPAREN expression RPAREN singleStatement','while',5,'p_while','parser_rules_v2.py',689),
  ('for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement','for',9,'p_for','parser_rules_v2.py',696),
  ('do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON','do_while',7,'p_do_while','parser_rules_v2.py',705),
  ('expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN','expressionFunction',6,'p_scalarMultiplication_1','parser_rules_v2.py',714),
  ('expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN','expressionFunction',8,'p_scalarMultiplication_2','parser_rules_v2.py',727),
  ('expressionFunction -> CAPITALIZAR LPAREN expression RPAREN','expressionFunction',4,'p_capitalize','parser_rules_v2.py',742),
  ('expressionFunction -> COLINEALES LPAREN expression COMMA expression RPAREN','expressionFunction',6,'p_collinear','parser_rules_v2.py',750),
  ('expressionFunction -> PRINT LPAREN expression RPAREN','expressionFunction',4,'p_print','parser_rules_v2.py',764),
  ('expressionFunction -> LENGTH LPAREN expression RPAREN','expressionFunction',4,'p_length','parser_rules_v2.py',769),
]
