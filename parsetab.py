
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'D789718A3099CA596B2C24F38082BD17'
    
_lr_action_items = {'DO':([0,2,9,10,13,18,32,39,41,45,46,47,79,80,101,110,115,123,126,133,134,135,138,140,141,],[2,2,-6,2,-8,2,2,-7,-9,-5,2,-54,-4,-53,-52,2,2,-60,-57,-55,2,-62,-56,2,-61,]),'COLINEALES':([0,2,5,9,10,11,13,18,24,26,32,39,41,42,45,46,47,49,53,54,57,58,59,61,65,66,67,68,69,75,76,77,79,80,85,101,103,107,108,110,113,114,115,116,123,126,130,132,133,134,135,138,140,141,],[4,4,4,-6,4,4,-8,4,4,4,4,-7,-9,4,-5,4,-54,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,-4,-53,4,-52,4,4,4,4,4,4,4,4,-60,-57,4,4,-55,4,-62,-56,4,-61,]),'NUMBER':([0,2,5,9,10,11,13,18,24,26,32,39,41,42,45,46,47,49,53,54,57,58,59,61,65,66,67,68,69,75,76,77,79,80,85,101,103,107,108,110,113,114,115,116,123,126,130,132,133,134,135,138,140,141,],[22,22,22,-6,22,22,-8,22,22,22,22,-7,-9,22,-5,22,-54,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-4,-53,22,-52,22,22,22,22,22,22,22,22,-60,-57,22,22,-55,22,-62,-56,22,-61,]),'LBRACKET':([0,2,5,9,10,11,13,16,18,24,26,28,32,34,36,38,39,41,42,45,46,47,49,53,54,57,58,59,61,65,66,67,68,69,73,75,76,77,79,80,84,85,94,101,103,107,108,110,113,114,115,116,119,123,126,130,132,133,134,135,138,140,141,],[5,5,5,-6,5,5,-8,-42,5,5,5,-26,5,-40,75,-41,-7,-9,5,-5,5,-54,5,5,5,5,5,5,5,5,5,5,5,5,-41,5,5,5,-4,-53,-36,5,-47,-52,5,5,5,5,5,5,5,5,-39,-60,-57,5,5,-55,5,-62,-56,5,-61,]),'WHILE':([0,2,9,10,13,18,32,39,41,45,46,47,48,79,80,101,110,115,123,126,133,134,135,138,140,141,],[6,6,-6,6,-8,6,6,-7,-9,-5,6,-54,81,-4,-53,-52,6,6,-60,-57,-55,6,-62,-56,6,-61,]),'PRINT':([0,2,5,9,10,11,13,18,24,26,32,39,41,42,45,46,47,49,53,54,57,58,59,61,65,66,67,68,69,75,76,77,79,80,85,101,103,107,108,110,113,114,115,116,123,126,130,132,133,134,135,138,140,141,],[7,7,7,-6,7,7,-8,7,7,7,7,-7,-9,7,-5,7,-54,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,-4,-53,7,-52,7,7,7,7,7,7,7,7,-60,-57,7,7,-55,7,-62,-56,7,-61,]),'TRUE':([0,2,5,9,10,11,13,18,24,26,32,39,41,42,45,46,47,49,53,54,57,58,59,61,65,66,67,68,69,75,76,77,79,80,85,101,103,107,108,110,113,114,115,116,123,126,130,132,133,134,135,138,140,141,],[14,14,14,-6,14,14,-8,14,14,14,14,-7,-9,14,-5,14,-54,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-4,-53,14,-52,14,14,14,14,14,14,14,14,-60,-57,14,14,-55,14,-62,-56,14,-61,]),'DOT':([1,8,14,16,19,22,25,27,28,33,34,36,38,73,84,93,94,100,111,112,119,120,129,131,139,],[-20,-23,-28,-42,-21,-27,-25,64,-26,-29,-40,-22,-41,-41,-36,-24,-47,-46,-67,-68,-39,-65,-66,-63,-64,]),'RBRACE':([1,8,9,10,12,13,14,16,18,19,20,22,23,25,27,28,29,31,32,33,34,35,36,38,39,40,41,43,45,47,55,56,60,62,70,71,72,74,78,79,80,84,88,93,94,95,98,99,100,101,106,111,112,117,118,119,120,123,126,127,129,131,133,135,138,139,141,],[-20,-23,-6,-3,-31,-8,-28,-42,-3,-21,-35,-27,-10,-25,-19,-26,-34,-45,-3,-29,-40,-17,-22,-41,-7,-59,-9,-14,-5,-54,-2,-16,-1,-15,100,101,-49,-18,-32,-4,-53,-36,-33,-24,-47,-13,-44,-43,-46,-52,-30,-67,-68,-48,-50,-39,-65,-60,-57,-58,-66,-63,-55,-62,-56,-64,-61,]),'COMMENT':([0,2,9,10,13,18,32,39,41,45,46,47,79,80,101,110,115,123,126,133,134,135,138,140,141,],[10,46,-6,10,-8,10,10,-7,-9,-5,46,-54,-4,-53,-52,46,46,-60,-57,-55,46,-62,-56,46,-61,]),'DOUBLE_AO':([0,1,2,5,8,9,10,11,13,14,16,18,19,22,24,25,26,27,28,32,33,34,35,36,38,39,41,42,45,46,47,49,53,54,57,58,59,61,65,66,67,68,69,73,74,75,76,77,79,80,84,85,93,94,100,101,103,107,108,110,111,112,113,114,115,116,119,120,123,126,129,130,131,132,133,134,135,138,139,140,141,],[11,-20,11,11,-23,-6,11,11,-8,-28,-42,11,-21,-27,11,-25,11,-19,-26,11,-29,-40,74,-22,-41,-7,-9,11,-5,11,-54,11,11,11,11,11,11,11,11,11,11,11,11,-41,-18,11,11,11,-4,-53,-36,11,-24,-47,-46,-52,11,11,11,11,-67,-68,11,11,11,11,-39,-65,-60,-57,-66,11,-63,11,-55,11,-62,-56,-64,11,-61,]),'RPAREN':([1,8,12,14,16,19,20,22,23,25,27,28,29,31,33,34,35,36,38,40,43,56,62,63,74,78,84,86,87,88,89,92,93,94,95,96,98,99,100,105,106,111,112,119,120,121,122,124,127,129,131,132,136,137,139,],[-20,-23,-31,-28,-42,-21,-35,-27,-10,-25,-19,-26,-34,-45,-29,-40,-17,-22,-41,-59,-14,-16,-15,93,-18,-32,-36,110,111,-33,112,-11,-24,-47,-13,115,-44,-43,-46,120,-30,-67,-68,-39,-65,128,129,131,-58,-66,-63,-12,139,140,-64,]),'SEMICOLON':([1,8,12,14,16,19,20,22,23,25,27,28,29,31,33,34,35,36,38,40,43,44,56,61,62,73,74,78,84,88,91,92,93,94,95,98,99,100,106,111,112,119,120,125,127,128,129,131,139,],[-20,-23,-31,-28,-42,-21,-35,-27,-10,-25,-19,-26,-34,-45,-29,-40,-17,-22,-41,-59,-14,79,-16,-12,-15,-41,-18,-32,-36,-33,114,-11,-24,-47,-13,-44,-43,-46,-30,-67,-68,-39,-65,132,-58,135,-66,-63,-64,]),'QUESTION':([1,8,12,14,16,19,20,22,25,27,28,29,31,33,34,35,36,38,40,43,56,62,73,74,78,84,88,93,94,95,97,100,106,111,112,119,120,127,129,131,139,],[-20,-23,-31,-28,-42,-21,-35,-27,-25,-19,-26,-34,67,-29,-40,-17,-22,-41,-59,-14,-16,-15,-41,-18,-32,-36,-33,-24,-47,-13,67,-46,-30,-67,-68,-39,-65,-58,-66,-63,-64,]),'BOOL_OP':([1,8,12,14,16,19,20,22,25,27,28,29,33,34,35,36,38,40,43,56,62,73,74,78,84,88,93,94,95,100,106,111,112,119,120,127,129,131,139,],[-20,-23,-31,-28,-42,-21,-35,-27,-25,-19,-26,-34,-29,-40,-17,-22,-41,77,-14,-16,-15,-41,-18,-32,-36,-33,-24,-47,-13,-46,-30,-67,-68,-39,-65,77,-66,-63,-64,]),'COMMA':([1,8,12,14,16,19,20,22,23,25,27,28,29,31,33,34,35,36,38,40,43,52,56,62,72,74,78,82,84,88,90,93,94,95,98,99,100,106,111,112,118,119,120,124,127,129,131,139,],[-20,-23,-31,-28,-42,-21,-35,-27,-10,-25,-19,-26,-34,-45,-29,-40,-17,-22,-41,-59,-14,85,-16,-15,102,-18,-32,108,-36,-33,113,-24,-47,-13,-44,-43,-46,-30,-67,-68,-50,-39,-65,130,-58,-66,-63,-64,]),'MULTIPLICACIONESCALAR':([0,2,5,9,10,11,13,18,24,26,32,39,41,42,45,46,47,49,53,54,57,58,59,61,65,66,67,68,69,75,76,77,79,80,85,101,103,107,108,110,113,114,115,116,123,126,130,132,133,134,135,138,140,141,],[17,17,17,-6,17,17,-8,17,17,17,17,-7,-9,17,-5,17,-54,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-4,-53,17,-52,17,17,17,17,17,17,17,17,-60,-57,17,17,-55,17,-62,-56,17,-61,]),'COLON':([1,8,12,14,16,19,20,22,25,27,28,29,33,34,35,36,38,40,43,56,62,73,74,78,83,84,88,93,94,95,97,100,106,111,112,119,120,127,129,131,139,],[-20,-23,-31,-28,-42,-21,-35,-27,-25,-19,-26,-34,-29,-40,-17,-22,-41,-59,-14,-16,-15,103,-18,-32,103,-36,-33,-24,-47,-13,116,-46,-30,-67,-68,-39,-65,-58,-66,-63,-64,]),'$end':([0,3,9,10,13,18,39,41,45,47,55,60,79,80,101,123,126,133,135,138,141,],[-3,0,-6,-3,-8,-3,-7,-9,-5,-54,-2,-1,-4,-53,-52,-60,-57,-55,-62,-56,-61,]),'STRING':([0,2,5,9,10,11,13,18,24,26,32,39,41,42,45,46,47,49,53,54,57,58,59,61,65,66,67,68,69,75,76,77,79,80,85,101,103,107,108,110,113,114,115,116,123,126,130,132,133,134,135,138,140,141,],[20,20,20,-6,20,20,-8,20,20,20,20,-7,-9,20,-5,20,-54,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-4,-53,20,-52,20,20,20,20,20,20,20,20,-60,-57,20,20,-55,20,-62,-56,20,-61,]),'FOR':([0,2,9,10,13,18,32,39,41,45,46,47,79,80,101,110,115,123,126,133,134,135,138,140,141,],[21,21,-6,21,-8,21,21,-7,-9,-5,21,-54,-4,-53,-52,21,21,-60,-57,-55,21,-62,-56,21,-61,]),'COMP':([1,8,12,14,16,19,20,22,25,27,28,29,33,34,35,36,38,43,56,62,73,74,78,84,88,93,94,95,100,106,111,112,119,120,129,131,139,],[-20,-23,57,-28,-42,-21,-35,-27,-25,-19,-26,-34,-29,-40,-17,-22,-41,-14,-16,-15,-41,-18,-32,-36,-33,-24,-47,-13,-46,57,-67,-68,-39,-65,-66,-63,-64,]),'AO':([0,1,2,5,8,9,10,11,13,14,16,18,19,20,22,24,25,26,27,28,29,32,33,34,35,36,38,39,41,42,43,45,46,47,49,53,54,56,57,58,59,61,62,65,66,67,68,69,73,74,75,76,77,78,79,80,84,85,88,93,94,95,100,101,103,107,108,110,111,112,113,114,115,116,119,120,123,126,129,130,131,132,133,134,135,138,139,140,141,],[24,-20,24,24,-23,-6,24,24,-8,-28,-42,24,-21,-35,-27,24,-25,24,-19,-26,65,24,-29,-40,-17,-22,-41,-7,-9,24,-14,-5,24,-54,24,24,24,-16,24,24,24,24,-15,24,24,24,24,24,-41,-18,24,24,24,-32,-4,-53,-36,24,65,-24,-47,-13,-46,-52,24,24,24,24,-67,-68,24,24,24,24,-39,-65,-60,-57,-66,24,-63,24,-55,24,-62,-56,-64,24,-61,]),'EQUAL':([1,8,12,14,16,19,20,22,25,27,28,29,31,33,34,35,36,38,40,43,56,62,73,74,78,84,88,93,94,95,100,106,111,112,119,120,127,129,131,139,],[-20,-23,-31,-28,-42,-21,-35,-27,-25,-19,-26,-34,68,-29,-40,-17,-22,-41,-59,-14,-16,-15,-41,-18,-32,-36,-33,-24,-47,-13,-46,-30,-67,-68,-39,-65,-58,-66,-63,-64,]),'AOEQUAL':([1,8,12,14,16,19,20,22,25,27,28,29,31,33,34,35,36,38,40,43,56,62,73,74,78,84,88,93,94,95,100,106,111,112,119,120,127,129,131,139,],[-20,-23,-31,-28,-42,-21,-35,-27,-25,-19,-26,-34,69,-29,-40,-17,-22,-41,-59,-14,-16,-15,-41,-18,-32,-36,-33,-24,-47,-13,-46,-30,-67,-68,-39,-65,-58,-66,-63,-64,]),'LPAREN':([0,2,4,5,6,7,9,10,11,13,15,17,18,21,24,26,30,32,37,39,41,42,45,46,47,49,53,54,57,58,59,61,65,66,67,68,69,75,76,77,79,80,81,85,101,103,107,108,110,113,114,115,116,123,126,130,132,133,134,135,138,140,141,],[26,26,49,26,53,54,-6,26,26,-8,58,59,26,61,26,26,66,26,76,-7,-9,26,-5,26,-54,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-4,-53,107,26,-52,26,26,26,26,26,26,26,26,-60,-57,26,26,-55,26,-62,-56,26,-61,]),'VAR':([0,2,5,9,10,11,13,18,24,26,32,39,41,42,45,46,47,49,50,53,54,57,58,59,61,64,65,66,67,68,69,75,76,77,79,80,85,101,102,103,107,108,110,113,114,115,116,123,126,130,132,133,134,135,138,140,141,],[28,28,28,-6,28,28,-8,28,28,28,28,-7,-9,28,-5,28,-54,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-4,-53,28,-52,28,28,28,28,28,28,28,28,28,-60,-57,28,28,-55,28,-62,-56,28,-61,]),'ELSE':([9,13,39,41,45,47,79,80,101,123,126,133,135,138,141,],[-6,-8,-7,-9,-5,-54,-4,-53,-52,-60,134,-55,-62,-56,-61,]),'IF':([0,2,9,10,13,18,32,39,41,45,46,47,79,80,101,110,115,123,126,133,134,135,138,140,141,],[30,30,-6,30,-8,30,30,-7,-9,-5,30,-54,-4,-53,-52,30,30,-60,-57,-55,30,-62,-56,30,-61,]),'LBRACE':([0,2,5,9,10,11,13,18,24,26,32,39,41,42,45,46,47,49,53,54,57,58,59,61,65,66,67,68,69,75,76,77,79,80,85,101,103,107,108,110,113,114,115,116,123,126,130,132,133,134,135,138,140,141,],[32,32,50,-6,32,50,-8,32,50,50,32,-7,-9,50,-5,32,-54,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-4,-53,50,-52,50,50,50,32,50,50,32,50,-60,-57,50,50,-55,32,-62,-56,32,-61,]),'FALSE':([0,2,5,9,10,11,13,18,24,26,32,39,41,42,45,46,47,49,53,54,57,58,59,61,65,66,67,68,69,75,76,77,79,80,85,101,103,107,108,110,113,114,115,116,123,126,130,132,133,134,135,138,140,141,],[33,33,33,-6,33,33,-8,33,33,33,33,-7,-9,33,-5,33,-54,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-4,-53,33,-52,33,33,33,33,33,33,33,33,-60,-57,33,33,-55,33,-62,-56,33,-61,]),'CAPITALIZAR':([0,2,5,9,10,11,13,18,24,26,32,39,41,42,45,46,47,49,53,54,57,58,59,61,65,66,67,68,69,75,76,77,79,80,85,101,103,107,108,110,113,114,115,116,123,126,130,132,133,134,135,138,140,141,],[37,37,37,-6,37,37,-8,37,37,37,37,-7,-9,37,-5,37,-54,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-4,-53,37,-52,37,37,37,37,37,37,37,37,-60,-57,37,37,-55,37,-62,-56,37,-61,]),'LENGTH':([0,2,5,9,10,11,13,18,24,26,32,39,41,42,45,46,47,49,53,54,57,58,59,61,65,66,67,68,69,75,76,77,79,80,85,101,103,107,108,110,113,114,115,116,123,126,130,132,133,134,135,138,140,141,],[15,15,15,-6,15,15,-8,15,15,15,15,-7,-9,15,-5,15,-54,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-4,-53,15,-52,15,15,15,15,15,15,15,15,-60,-57,15,15,-55,15,-62,-56,15,-61,]),'NOT':([0,2,5,9,10,11,13,18,24,26,32,39,41,42,45,46,47,49,53,54,57,58,59,61,65,66,67,68,69,75,76,77,79,80,85,101,103,107,108,110,113,114,115,116,123,126,130,132,133,134,135,138,140,141,],[42,42,42,-6,42,42,-8,42,42,42,42,-7,-9,42,-5,42,-54,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-4,-53,42,-52,42,42,42,42,42,42,42,42,-60,-57,42,42,-55,42,-62,-56,42,-61,]),'RBRACKET':([1,8,12,14,16,19,20,22,23,25,27,28,29,31,33,34,35,36,38,40,43,51,52,56,62,74,78,84,88,93,94,95,98,99,100,104,106,109,111,112,119,120,127,129,131,139,],[-20,-23,-31,-28,-42,-21,-35,-27,-10,-25,-19,-26,-34,-45,-29,-40,-17,-22,-41,-59,-14,84,-38,-16,-15,-18,-32,-36,-33,-24,-47,-13,-44,-43,-46,119,-30,-37,-67,-68,-39,-65,-58,-66,-63,-64,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'factorNumExp':([0,2,5,10,11,18,24,26,32,42,46,49,53,54,57,58,59,61,65,66,67,68,69,75,76,77,85,103,107,108,110,113,114,115,116,130,132,134,140,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'reg_items':([32,50,102,],[70,70,117,]),'code':([0,10,18,32,],[3,55,60,71,]),'optional_expr':([61,132,],[91,137,]),'factorReg':([0,2,5,10,11,18,24,26,32,42,46,49,53,54,57,58,59,61,65,66,67,68,69,75,76,77,85,103,107,108,110,113,114,115,116,130,132,134,140,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'if':([0,2,10,18,32,46,110,115,134,140,],[9,9,9,9,9,9,9,9,9,9,]),'vector_items':([5,85,],[51,109,]),'expressionComp':([0,2,5,10,18,26,32,46,49,53,54,58,59,61,66,67,68,69,75,76,77,85,103,107,108,110,113,114,115,116,130,132,134,140,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,106,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'for':([0,2,10,18,32,46,110,115,134,140,],[13,13,13,13,13,13,13,13,13,13,]),'reg_field':([32,50,102,],[72,72,72,]),'memberAccess':([0,2,5,10,11,18,24,26,32,42,46,49,53,54,57,58,59,61,65,66,67,68,69,75,76,77,85,103,107,108,110,113,114,115,116,130,132,134,140,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'statement':([0,2,10,18,32,46,110,115,134,140,],[18,47,18,18,18,47,47,47,47,47,]),'bool_atom':([0,2,5,10,11,18,24,26,32,42,46,49,53,54,57,58,59,61,65,66,67,68,69,75,76,77,85,103,107,108,110,113,114,115,116,130,132,134,140,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'expressionAssign':([0,2,5,10,18,26,32,46,49,53,54,58,59,61,66,68,69,75,76,85,103,107,108,110,113,114,115,130,132,134,140,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,98,99,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'else':([126,],[133,]),'expressionFunction':([0,2,5,10,11,18,24,26,32,42,46,49,53,54,57,58,59,61,65,66,67,68,69,75,76,77,85,103,107,108,110,113,114,115,116,130,132,134,140,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'factorExp':([0,2,5,10,11,18,24,26,32,42,46,49,53,54,57,58,59,61,65,66,67,68,69,75,76,77,85,103,107,108,110,113,114,115,116,130,132,134,140,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'aritExp':([0,2,5,10,18,26,32,46,49,53,54,57,58,59,61,66,67,68,69,75,76,77,85,103,107,108,110,113,114,115,116,130,132,134,140,],[29,29,29,29,29,29,29,29,29,29,29,88,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'expressionTernaryCond':([0,2,5,10,18,26,32,46,49,53,54,58,59,61,66,67,68,69,75,76,85,103,107,108,110,113,114,115,130,132,134,140,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,97,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'expressionVector':([0,2,5,10,11,18,24,26,32,42,46,49,53,54,57,58,59,61,65,66,67,68,69,75,76,77,85,103,107,108,110,113,114,115,116,130,132,134,140,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'singleStatement':([2,46,110,115,134,140,],[48,80,123,126,138,141,]),'unaryExp2':([0,2,5,10,11,18,24,26,32,42,46,49,53,54,57,58,59,61,65,66,67,68,69,75,76,77,85,103,107,108,110,113,114,115,116,130,132,134,140,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'expressionVectorAt':([0,2,5,10,11,18,24,26,32,42,46,49,53,54,57,58,59,61,65,66,67,68,69,75,76,77,85,103,107,108,110,113,114,115,116,130,132,134,140,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'factorVar':([0,2,5,10,11,18,24,26,32,42,46,49,50,53,54,57,58,59,61,64,65,66,67,68,69,75,76,77,85,102,103,107,108,110,113,114,115,116,130,132,134,140,],[38,38,38,38,38,38,38,38,73,38,38,38,83,38,38,38,38,38,38,94,38,38,38,38,38,38,38,38,38,83,38,38,38,38,38,38,38,38,38,38,38,38,]),'while':([0,2,10,18,32,46,110,115,134,140,],[39,39,39,39,39,39,39,39,39,39,]),'expressionBoolOp':([0,2,5,10,18,26,32,46,49,53,54,58,59,61,66,67,68,69,75,76,85,103,107,108,110,113,114,115,116,130,132,134,140,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,127,40,40,40,40,]),'do_while':([0,2,10,18,32,46,110,115,134,140,],[41,41,41,41,41,41,41,41,41,41,]),'unaryExp':([0,2,5,10,11,18,24,26,32,42,46,49,53,54,57,58,59,61,65,66,67,68,69,75,76,77,85,103,107,108,110,113,114,115,116,130,132,134,140,],[43,43,43,43,56,43,62,43,43,78,43,43,43,43,43,43,43,43,95,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'expression':([0,2,5,10,18,26,32,46,49,53,54,58,59,61,66,75,76,85,103,107,108,110,113,114,115,130,132,134,140,],[44,44,52,44,44,63,44,44,82,86,87,89,90,92,96,104,105,52,118,121,122,44,124,125,44,136,92,44,44,]),'block':([0,2,10,18,32,46,110,115,134,140,],[45,45,45,45,45,45,45,45,45,45,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> code","S'",1,None,None,None),
  ('code -> statement code','code',2,'p_code_statement','parser_rules_v2.py',84),
  ('code -> COMMENT code','code',2,'p_code_comment','parser_rules_v2.py',90),
  ('code -> <empty>','code',0,'p_code_empty','parser_rules_v2.py',96),
  ('statement -> expression SEMICOLON','statement',2,'p_statement_1','parser_rules_v2.py',100),
  ('statement -> block','statement',1,'p_statement_block','parser_rules_v2.py',105),
  ('statement -> if','statement',1,'p_statement_if','parser_rules_v2.py',108),
  ('statement -> while','statement',1,'p_statement_while','parser_rules_v2.py',112),
  ('statement -> for','statement',1,'p_statement_for','parser_rules_v2.py',116),
  ('statement -> do_while','statement',1,'p_statement_do_while','parser_rules_v2.py',120),
  ('expression -> expressionAssign','expression',1,'p_expression_aritmethic','parser_rules_v2.py',125),
  ('optional_expr -> expression','optional_expr',1,'p_optional_expr','parser_rules_v2.py',129),
  ('optional_expr -> <empty>','optional_expr',0,'p_optional_expr_empty','parser_rules_v2.py',133),
  ('aritExp -> aritExp AO unaryExp','aritExp',3,'p_aritExp','parser_rules_v2.py',138),
  ('aritExp -> unaryExp','aritExp',1,'p_aritExp_unary','parser_rules_v2.py',160),
  ('unaryExp -> AO unaryExp','unaryExp',2,'p_unaryExp','parser_rules_v2.py',164),
  ('unaryExp -> DOUBLE_AO unaryExp','unaryExp',2,'p_unaryExp_double','parser_rules_v2.py',177),
  ('unaryExp -> unaryExp2','unaryExp',1,'p_unaryExp_double_unaryExp2','parser_rules_v2.py',187),
  ('unaryExp2 -> unaryExp2 DOUBLE_AO','unaryExp2',2,'p_unaryExp_double2','parser_rules_v2.py',191),
  ('unaryExp2 -> factorExp','unaryExp2',1,'p_unaryExp2_factor','parser_rules_v2.py',206),
  ('factorExp -> factorNumExp','factorExp',1,'p_factorExp_Num','parser_rules_v2.py',210),
  ('factorExp -> bool_atom','factorExp',1,'p_factorExp_Bool','parser_rules_v2.py',214),
  ('factorExp -> expressionVectorAt','factorExp',1,'p_factorExp_VectorAt','parser_rules_v2.py',218),
  ('factorExp -> factorReg','factorExp',1,'p_factorExp_Reg','parser_rules_v2.py',222),
  ('factorExp -> LPAREN expression RPAREN','factorExp',3,'p_factorExp_paren','parser_rules_v2.py',226),
  ('factorExp -> expressionFunction','factorExp',1,'p_factorExp_function','parser_rules_v2.py',232),
  ('factorVar -> VAR','factorVar',1,'p_factorVarExp','parser_rules_v2.py',236),
  ('factorNumExp -> NUMBER','factorNumExp',1,'p_factorNumExp','parser_rules_v2.py',240),
  ('bool_atom -> TRUE','bool_atom',1,'p_bool_true','parser_rules_v2.py',246),
  ('bool_atom -> FALSE','bool_atom',1,'p_bool_false','parser_rules_v2.py',250),
  ('expressionBoolOp -> expressionBoolOp BOOL_OP expressionComp','expressionBoolOp',3,'p_bool_op','parser_rules_v2.py',254),
  ('expressionBoolOp -> expressionComp','expressionBoolOp',1,'p_bool_op_comp','parser_rules_v2.py',263),
  ('unaryExp -> NOT unaryExp','unaryExp',2,'p_bool_neg','parser_rules_v2.py',267),
  ('expressionComp -> expressionComp COMP aritExp','expressionComp',3,'p_bool_comp','parser_rules_v2.py',273),
  ('expressionComp -> aritExp','expressionComp',1,'p_bool_comp_arit','parser_rules_v2.py',285),
  ('unaryExp -> STRING','unaryExp',1,'p_string','parser_rules_v2.py',290),
  ('expressionVector -> LBRACKET vector_items RBRACKET','expressionVector',3,'p_vector','parser_rules_v2.py',295),
  ('vector_items -> expression COMMA vector_items','vector_items',3,'p_vector_items','parser_rules_v2.py',300),
  ('vector_items -> expression','vector_items',1,'p_vector_single_item','parser_rules_v2.py',313),
  ('expressionVectorAt -> expressionVectorAt LBRACKET expression RBRACKET','expressionVectorAt',4,'p_vector_at','parser_rules_v2.py',319),
  ('expressionVectorAt -> expressionVector','expressionVectorAt',1,'p_vector_at_vector','parser_rules_v2.py',332),
  ('expressionVectorAt -> factorVar','expressionVectorAt',1,'p_vector_at_var','parser_rules_v2.py',336),
  ('expressionVectorAt -> memberAccess','expressionVectorAt',1,'p_vector_at_memberAccess','parser_rules_v2.py',340),
  ('expressionAssign -> expressionTernaryCond AOEQUAL expressionAssign','expressionAssign',3,'p_aoEqual','parser_rules_v2.py',361),
  ('expressionAssign -> expressionTernaryCond EQUAL expressionAssign','expressionAssign',3,'p_equals','parser_rules_v2.py',456),
  ('expressionAssign -> expressionTernaryCond','expressionAssign',1,'p_assign_TernaryCond','parser_rules_v2.py',545),
  ('factorReg -> LBRACE reg_items RBRACE','factorReg',3,'p_register','parser_rules_v2.py',550),
  ('memberAccess -> factorExp DOT factorVar','memberAccess',3,'p_memberAccess_factorExp','parser_rules_v2.py',563),
  ('reg_items -> reg_field COMMA reg_items','reg_items',3,'p_reg_items','parser_rules_v2.py',613),
  ('reg_items -> reg_field','reg_items',1,'p_reg_single_item','parser_rules_v2.py',617),
  ('reg_field -> factorVar COLON expression','reg_field',3,'p_reg_field','parser_rules_v2.py',621),
  ('comments -> <empty>','comments',0,'p_comments_empty','parser_rules_v2.py',631),
  ('block -> LBRACE code RBRACE','block',3,'p_block','parser_rules_v2.py',636),
  ('singleStatement -> COMMENT singleStatement','singleStatement',2,'p_single_statement_comment','parser_rules_v2.py',642),
  ('singleStatement -> statement','singleStatement',1,'p_single_statement','parser_rules_v2.py',647),
  ('if -> IF LPAREN expression RPAREN singleStatement else','if',6,'p_if','parser_rules_v2.py',653),
  ('else -> ELSE singleStatement','else',2,'p_else','parser_rules_v2.py',661),
  ('else -> <empty>','else',0,'p_else_empty','parser_rules_v2.py',665),
  ('expressionTernaryCond -> expressionTernaryCond QUESTION expressionTernaryCond COLON expressionBoolOp','expressionTernaryCond',5,'p_ternaryConditiopnal','parser_rules_v2.py',670),
  ('expressionTernaryCond -> expressionBoolOp','expressionTernaryCond',1,'p_ternaryConditiopnal_BoolOp','parser_rules_v2.py',686),
  ('while -> WHILE LPAREN expression RPAREN singleStatement','while',5,'p_while','parser_rules_v2.py',691),
  ('for -> FOR LPAREN optional_expr SEMICOLON expression SEMICOLON optional_expr RPAREN singleStatement','for',9,'p_for','parser_rules_v2.py',698),
  ('do_while -> DO singleStatement WHILE LPAREN expression RPAREN SEMICOLON','do_while',7,'p_do_while','parser_rules_v2.py',707),
  ('expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression RPAREN','expressionFunction',6,'p_scalarMultiplication_1','parser_rules_v2.py',716),
  ('expressionFunction -> MULTIPLICACIONESCALAR LPAREN expression COMMA expression COMMA expression RPAREN','expressionFunction',8,'p_scalarMultiplication_2','parser_rules_v2.py',729),
  ('expressionFunction -> CAPITALIZAR LPAREN expression RPAREN','expressionFunction',4,'p_capitalize','parser_rules_v2.py',744),
  ('expressionFunction -> COLINEALES LPAREN expression COMMA expression RPAREN','expressionFunction',6,'p_collinear','parser_rules_v2.py',752),
  ('expressionFunction -> PRINT LPAREN expression RPAREN','expressionFunction',4,'p_print','parser_rules_v2.py',766),
  ('expressionFunction -> LENGTH LPAREN expression RPAREN','expressionFunction',4,'p_length','parser_rules_v2.py',771),
]
